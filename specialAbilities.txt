// Special Abilities database file
// The line above **must** be the first line of the special abilities file!!!
// key GPDL words
// $VAR - variable, must appear at start of script
//	commonly used throughout the database:
//		atk = attacker, in spell context the caster
//		tgt = target
//		lvl = level
//		exp = expiration
//		nm = name
//		dmg = damage
//		prm = parameter, as in the parameter of the SA
//		p5 = parameter 5
//		p6 = parameter 6
// $RETURN - tells the script to pass a value to the engine, essentially ends the script
//
// 2nd edition

\(BEGIN)
name = $EVENT_WhoTries_Attempt
[Ability] = $VAR abLevel;
-$VAR abName;
-$VAR me; // character who is trying
-$VAR abNeed;
-$VAR abDie;
-abName = $GET_HOOK_PARAM(5);
-abNeed = $GET_HOOK_PARAM(6);
-me = $IndexOf($CharacterContext());
-$SWITCH (abName)
-	{
-		$CASE "Strength": abLevel = $GET_CHAR_LIMITED_STR(me);$BREAK;
-		$CASE "Intelligence": abLevel = $GET_CHAR_LIMITED_INT(me);$BREAK;
-		$CASE "Wisdom": abLevel = $GET_CHAR_LIMITED_WIS(me);$BREAK;
-		$CASE "Dexterity": abLevel = $GET_CHAR_LIMITED_DEX(me);$BREAK;
-		$CASE "Constitution": abLevel = $GET_CHAR_LIMITED_CON(me);$BREAK;
-		$CASE "Charisma": abLevel = $GET_CHAR_LIMITED_CHA(me);$BREAK;
-		$CASE "StrengthMod": abLevel = $GET_CHAR_LIMITED_STRMOD(me);$BREAK;
-		$DEFAULT: $RETURN "N";
-	} $ENDSWITCH;
-$IF (abNeed <# 0)
-	{
-		abDie = $RANDOM (0 -# abNeed);
-		$IF (abLevel <# abDie){$RETURN "N";};
-	};
-$IF (abLevel <# abNeed){$RETURN "N";};
OldAbility = $VAR abLevel;
-$VAR abName;
-$VAR me; // character who is trying
-$VAR abNeed;
-$VAR abDie;
-abName = $GET_HOOK_PARAM(5);
-abNeed = $GET_HOOK_PARAM(6);
-me = $IndexOf($CharacterContext());
-$IF (abName == "Strength"){abLevel = $GET_CHAR_LIMITED_STR(me);};
-$IF (abName == "Intelligence"){abLevel = $GET_CHAR_LIMITED_INT(me);};
-$IF (abName == "Wisdom"){abLevel = $GET_CHAR_LIMITED_WIS(me);};
-$IF (abName == "Dexterity"){abLevel = $GET_CHAR_LIMITED_DEX(me);};
-$IF (abName == "Constitution"){abLevel = $GET_CHAR_LIMITED_CON(me);};
-$IF (abName == "Charisma"){abLevel = $GET_CHAR_LIMITED_CHA(me);};
-$IF (abName == "StrengthMod"){abLevel = $GET_CHAR_LIMITED_STRMOD(me);};
-$IF (abLevel == "") {$RETURN "N";};
-$IF (abNeed <# 0)
-	{
-		abDie = $RANDOM (0 -# abNeed);
-		$IF (abLevel <# abDie){$RETURN "N";};
-	};
-$IF (abLevel <# abNeed){$RETURN "N";};
[Experience] = $VAR me;
-$VAR cls; // class
-$VAR lvl; // level
-$VAR par0;
-$VAR par5;
-$VAR par6;
-me = $MyIndex();
-cls = $GetHighestLevelBaseclass(me);
-lvl = $GetBaseclassLevel(me,cls);
-par0 = $GET_HOOK_PARAM(0);
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-$IF (lvl <# par6){$RETURN "N";};
[NightSkill] = $VAR time;
-$VAR par0;
-$VAR skillName;
-$VAR skillLevel;
-$VAR skillNeed;
-$VAR skillDie;
-time = $GET_PARTY_HOURS();
-par0 = $GET_HOOK_PARAM(0);
-skillName = $GET_HOOK_PARAM(5);
-skillLevel = $SkillAdj($CharacterContext(),skillName,"","F",0);
-skillNeed = $GET_HOOK_PARAM(6);
-$IF (skillNeed <# 0)
-	{
-		skillDie = $RANDOM (0 -# skillNeed);
-		$IF (skillLevel <# skillDie){$RETURN "N";};
-	};
-$IF (time ># 6 && time <# 18){$RETURN "N";};
-$IF (skillLevel <# skillNeed){$RETURN "N";};
[Skill] = $VAR skillLevel;
-$VAR skillName;
-$VAR skillNeed;
-$VAR skillDie;
-skillName = $GET_HOOK_PARAM(5);
-skillNeed = $GET_HOOK_PARAM(6);
-skillLevel = $SkillAdj($CharacterContext(),skillName , "", "F", 0 );
-$IF (skillNeed <# 0)
-	{
-		skillDie = $RANDOM (0 -# skillNeed);
-		$IF (skillLevel <# skillDie){$RETURN "N";};
-	};
-$IF (skillLevel <# skillNeed){$RETURN "N";};
\(END)

\(BEGIN)
name = AbilityAdjustments
<DexInit> = 3
-2
-1
-0
-0
-0
-0
-0
-0
-0
-0
-0
-0
--1
--2
--3
--3
--3
--4
--4
--4
--5
--5
<IntSpellsMax> = 6
-7
-7
-7
-9
-9
-11
-11
-14
-18
-255
-255
-255
-255
-255
-255
-255
<IntSpellsMin> = 4
-5
-5
-5
-6
-6
-7
-7
-8
-9
-10
-12
-13
-14
-15
-16
-17
<IntSpellsSuccess> = 35
-45
-45
-45
-55
-55
-65
-65
-75
-85
-95
-96
-97
-98
-99
-100
-100
\(END)

\(BEGIN)
name = casterLevel
[SpellCasterLevel] = $VAR atk; $VAR nm; $VAR list; $VAR cls; $VAR adj; $VAR lvl;
-atk = $IndexOf($AttackerContext()); nm = $GET_CHAR_NAME(atk); list = $SA_PARAM_GET();
-cls = $DelimitedStringSubstring(list,0); adj = $DelimitedStringSubstring(list,1); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$IF (cls == "monster"){$RETURN $GET_MONSTERTYPE_SA(nm,"monsterLevel");};
-$IF (cls == "item"){$RETURN adj;}
-$ELSE {$SET_SPELL_SA($SpellContext(),"adjLevel",adj); $RETURN lvl;};
\(END)

\(BEGIN)
name = classBaseName
[PostCreateCharacter] = $SET_CHARACTER_SA($CharacterContext(), "class_baseName", $SA_PARAM_GET());
\(END)

\(BEGIN)
name = classMageScribe
[CanScribeOrWhatever] = $SET_HOOK_PARAM(5,"SCRIBE"); $SET_HOOK_PARAM(6,0);
[KnowableSpells] = $RETURN "9";
[KnowableSpellsMinMax] = $VAR prm; $VAR p4; $VAR p6; $VAR intMin; $VAR intMax; $VAR chr; $VAR muLvl;
-prm = $SA_PARAM_GET(); p4 = $GET_HOOK_PARAM(4); p6 = $GET_HOOK_PARAM(6);
-intMin = $IntegerTable("AbilityAdjustments","IntSpellsMin",par5 -# 9,"Index");
-intMax = $IntegerTable("AbilityAdjustments","IntSpellsMax",par5 -# 9,"Index");
-chr = $IndexOf($CharacterContext()); muLvl = $GET_CHAR_Lvl(chr,prm);
-$IF (p4 == "I")
-	{
-		$IF (p6 !=# 1)
-			{$SET_HOOK_PARAM(7, intMin); $SET_HOOK_PARAM(8, intMax); $SET_HOOK_PARAM(9, "999999"); $RETURN "2";}
-		$ELSE
-			{$SET_HOOK_PARAM(7, intMin -# 2); $SET_HOOK_PARAM(8, intMax -# 2); $SET_HOOK_PARAM(9, "999999"); $RETURN "1";};
-	};
-$IF (p4 == "L")
-	{
-		$IF (muLvl ># 18){muLvl = 19;};
-		$IF (p6 !=# $IntegerTable("class_Spells","magicUserTrain",muLvl -# 1,"Index"))
-			{$SET_HOOK_PARAM(7, 0); $SET_HOOK_PARAM(8, 0); $SET_HOOK_PARAM(9, "999999");$RETURN "0";}
-		$ELSE
-			{$SET_HOOK_PARAM(7, intMin); $SET_HOOK_PARAM(8, intMax); $SET_HOOK_PARAM(9, "999999"); $RETURN "0";};
-	};
[LearnSpells] = $RETURN "100";
[LearnSpellsNum] = $VAR chr; $VAR prm; $VAR muLvl; $VAR canKnow; $VAR lvl; $VAR spl; $VAR sLvl; $VAR p4; $VAR p6;
-chr = $IndexOf($CharacterContext()); prm = $SA_PARAM_GET(); muLvl = $GET_CHAR_Lvl(chr,prm);
-canKnow = "#$2$0$0$0$0$0$0$0$0#$3$0$0$0$0$0$0$0$0#$3$2$0$0$0$0$0$0$0#$4$3$0$0$0$0$0$0$0#$4$3$2$0$0$0$0$0$0#$5$3$3$0$0$0$0$0$0#$5$4$3$2$0$0$0$0$0#$5$4$4$3$0$0$0$0$0#$5$5$4$3$2$0$0$0$0#$6$5$4$3$3$0$0$0$0#$6$6$5$4$4$0$0$0$0#$6$6$5$5$5$2$0$0$0#$7$6$6$5$5$3$0$0$0#$7$7$6$5$5$3$2$0$0#$7$7$6$6$6$4$2$0$0#$7$8$6$6$6$4$3$2$0#$7$8$6$6$6$4$4$3$0#$7$8$6$6$6$4$4$3$2#$7$8$7$6$6$4$4$4$2#$7$8$7$6$6$5$4$4$3#$7$8$7$6$6$5$5$5$3#$7$8$7$6$6$6$5$5$4#$7$8$7$6$6$6$6$6$4#$7$8$7$6$6$6$6$6$5#$7$9$7$6$6$6$6$6$6#$8$9$8$7$6$6$6$6$6#$8$9$8$7$7$7$7$6$6#$8$9$8$7$7$7$7$7$7#$9$10$9$8$7$7$7$7$7#$9$10$9$8$8$8$8$7$7#$9$10$9$8$8$8$8$8$8#$10$11$10$9$8$8$8$8$8#$10$11$10$9$9$9$9$8$8#$11$12$11$10$9$9$9$9$9#$11$12$12$11$9$9$9$9$9#$11$12$12$11$10$10$10$9$9#$11$12$12$11$10$10$10$10$10#$12$13$12$11$10$10$10$10$10#$12$13$12$11$11$11$11$10$10#$12$13$12$11$11$11$11$11$11";
-lvl = $DelimitedStringSubstring(canKnow,muLvl -# 1); sLvl = $IntegerTable("class_Spells","magicUserLvl",muLvl -# 1,"Index");
-p4 = $GET_HOOK_PARAM(4); p6 = $GET_HOOK_PARAM(6);
-$IF (p6 ==# 0) {$SET_HOOK_PARAM(8, 1); $RETURN;}; spl = $DelimitedStringSubstring(lvl,p6 -# 1);
-$IF (p4 == "I")
-	{$SET_HOOK_PARAM(8,spl); $SET_HOOK_PARAM(9,1); $RETURN "1";};
-$IF (p4 == "L")
-	{
-		$IF (p6 <=# sLvl) {$SET_HOOK_PARAM(8,1); $SET_HOOK_PARAM(9,1);}
-		$ELSE {$SET_HOOK_PARAM(8,0);};
-		$RETURN "1";
-	};
[ScribeOrWhatever] = $SET_HOOK_PARAM(5, "Scribe");
\(END)

\(BEGIN)
name = classNoSpells
[CanCastSpells] = $RETURN "N";
[CanMemorizeSpells] = $RETURN "N";
\(END)

\(BEGIN)
name = classPaladin
[CanCureOrWhatever] = $VAR tgt; $VAR prevTime; $VAR curTime; $VAR elapsedTime; $VAR waitTime; $VAR paladinLvl; $VAR paladinDiv;
-tgt = $IndexOf($CharacterContext()); prevTime = $GET_CHARACTER_SA($Myself(),"paladinCureTime"); curTime = $GET_PARTY_TIME();
-$IF(prevTime != "-?-?-"){elapsedTime = curTime -# prevTime;} $ELSE{elapsedTime = 999;};
-paladinLvl = $GET_CHAR_Lvl(tgt,"paladin"); paladinDiv = (paladinLvl +#4) /# 5;
-$IF (paladinDiv <# 1){paladinDiv = 1;}; $IF (paladinDiv ># 8){paladinDiv = 8;}; waitTime = 168 /# paladinDiv;
-$IF ((elapsedTime >= 0) && (elapsedTime <# waitTime)) {$RETURN;};
-$SET_HOOK_PARAM( 5, "CURE DISEASE" ); $SET_HOOK_PARAM( 6, "0");
[CanLayOrWhatever] = $VAR prevTime; $VAR curTime; $VAR elapsedTime;
-prevTime = $GET_CHARACTER_SA($Myself(),"paladinLayTime"); curTime = $GET_PARTY_TIME();
-$IF(prevTime)  // First time fudge.
-{elapsedTime = curTime -# prevTime;}
-$ELSE{elapsedTime = 999;};
-$IF ((elapsedTime >= 0) && (elapsedTime <# 24)) {$RETURN;};
-$SET_HOOK_PARAM( 5, "LAY ON HANDS" ); $SET_HOOK_PARAM( 6, "0");
[CreateMonsterCombatant] = $VAR char; $VAR cls;
-char = $IndexOf($CharacterContext()); cls = $GET_CHAR_Lvl(char,"paladin");
-$IF (cls ># 0)
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"IsPaladinImmuneDisease","paladin");
-		$SET_CHARACTER_SA($CharacterContext(),"IsPaladinProtectedFromEvil","paladin");
-	};
[CureOrWhatever] = $VAR curTime; curTime = $GET_PARTY_TIME();
-$SET_CHARACTER_SA($CharacterContext(),"paladinCureTime",curTime); $SET_HOOK_PARAM(1,"paladinCureDisease");
-$RETURN "CastSpell";
[LayOrWhatever] = $VAR curTime;
-curTime = $GET_PARTY_TIME(); $SET_CHARACTER_SA($Myself(),"paladinLayTime",curTime);
-$SET_HOOK_PARAM(1,"paladinLayOnHands"); $RETURN "CastSpell";
[PostCreateCharacter] = $SET_CHARACTER_SA($CharacterContext(),"IsPaladinImmuneDisease","paladin");
-$SET_CHARACTER_SA($CharacterContext(),"IsPaladinProtectedFromEvil","paladin");
[SpellCasterLevel] = $VAR atk; $VAR cls; $VAR lvl;
-atk = $IndexOf($AttackerContext()); cls = $GetHighestLevelBaseclass(atk); lvl = $GetBaseclassLevel(atk,cls); $RETURN lvl;
\(END)

\(BEGIN)
name = classSpells
<magicUserLvl> = 1
-1
-2
-2
-3
-3
-4
-4
-5
-5
-5
-6
-6
-7
-7
-8
-8
-9
-9
<magicUserTrain> = 1
-0
-2
-0
-3
-0
-4
-0
-5
-0
-0
-6
-0
-7
-0
-8
-0
-9
-0
\(END)

\(BEGIN)
name = classSuppress
[SelectCharacterClass] = $RETURN "Y";
\(END)

\(BEGIN)
name = CombatPlacement
[PlaceMonsterClose] = $IF($GET_PARTY_FACING() >=#2){$MonsterPlacement("FbPV500E");}
-$ELSE{$MonsterPlacement("bPV500E");};
[PlaceMonsterFar] = $IF($GET_PARTY_FACING() >=#2){$MonsterPlacement("17FbPV500E");}
-$ELSE{$MonsterPlacement("16FbPV500E");};
[PlaceMonsterNear] = $IF($GET_PARTY_FACING() >=#2){$MonsterPlacement("10FbPV500E");}
-$ELSE{$MonsterPlacement("9FbPV500E");};
\(END)

\(BEGIN)
name = CombatRoundStart
[StartCombatRound] = $SA_PARAM_SET("0");
\(END)

\(BEGIN)
name = CombatRoundStart1
[StartCombatRound] = $SA_PARAM_SET("-?-?-");
\(END)

\(BEGIN)
name = Competing
[AdjustInitiative] = $VAR me; $VAR dex; $VAR p5; $VAR list; $VAR adj; $VAR redo;
-me = $IndexOf($CombatantContext()); dex = $GET_CHAR_LIMITED_DEX(me); p5 = $GET_HOOK_PARAM(5);
-list = "$3$3$3$3$2$1$0$0$0$0$0$0$0$0$0$0$-1$-2$-3$-3$-3$-4$-4$-4$-5$-5";
-adj = $DelimitedStringSubstring(list,dex);
-$IF ($NOT($GetCombatRound()) {$RETURN adj;}; )//Past round 1
-$IF (p5 != 18) {$RETURN adj;}; // adjustment for unsurprised
-$IF (adj <# "-1"||adj ==# "-1" && $GET_CHAR_Exp(me,"Ranger") ># 0) {redo = 1;}; // negate surprise for -2 or better
-$IF ($GET_CHAR_Exp(me,"Ranger") ># 0 || dex == 16) {redo = $RANDOM(2);}; // 50% negate surprise for -1 or ranger
-$IF (redo ==# 1) {$RETURN $RANDOM(10) +# 9 +# adj -# 18;} // set new random initiative if not surprised
-$ELSE {$RETURN 5;}; // set to surprised
[AutoAction] = $RETURN $GET_COMBATANT_SA($CombatantContext(),"playerControl");
[CombatMainMenu] = $VAR adjCombatant; $VAR count; $VAR t; $VAR target; $VAR lvl;
-lvl = $GET_CHAR_Lvl($MyIndex(),"fighter") +# $GET_CHAR_Lvl($MyIndex(),"paladin") +# $GET_CHAR_Lvl($MyIndex(),"ranger") ;
-$IF (lvl ># 1)
-	{
-		adjCombatant = $ListAdjacentCombatants($MyIndex());
-		t = 0;
-		count = $DelimitedStringCount(adjCombatant);
-		$WHILE (count >=# 0)
-			{
-				target = $DelimitedStringSubstring(adjCombatant,count);
-				$IF ($GET_MONSTERTYPE_SA($GET_CHAR_NAME(target),"monster_Swept") != "-?-?-" && $GET_CHAR_STATUS(target) ==# 0){t = t +# 1;};
-				count = count -# 1;
-			};
-		$IF (t ># 1)
-			{$SET_HOOK_PARAM(6, "SWEEP"); $SET_HOOK_PARAM(7, 0); $SET_COMBATANT_SA($CombatantContext(),"IsSweeping",lvl);};
-	};
[FreeAttack-AttackOver] = $VAR par5;
-par5 = $GET_HOOK_PARAM(5); $RETURN;
[FreeAttack-CanFreeAttack] = $VAR rangeWpn;
-rangeWpn = $GET_ITEM_SA($GET_CHAR_Ready($AttackerContext(), "WEAPON", 0),"item_CombatAim");
-$IF (rangeWpn != "-?-?-"){$RETURN "N";};
-$RETURN "Y";
[GetNumberOfAttacks] = $VAR com; $VAR lvl; $VAR nom;
-com = $IndexOf($CombatantContext());
-$IF ($GET_CHAR_Lvl(com,"fighter") ># 0) {lvl = $GET_CHAR_Lvl(com,"fighter");};
-$IF ($GET_CHAR_Lvl(com,"paladin") ># 0) {lvl = $GET_CHAR_Lvl(com,"paladin");};
-$IF ($GET_CHAR_Lvl(com,"ranger") ># 0) {lvl = $GET_CHAR_Lvl(com,"ranger");}
-$ELSE {lvl = "0";};
-nom = $GET_CHAR_NAME(com);
-$IF ($GET_MONSTERTYPE_SA(nom,"monsterLevel") != "-?-?-"){$RETURN;};
-$IF ((lvl >=# 13){$RETURN 2;};
-$IF (lvl >=# 7){$RETURN (($GetCombatRound() +# 1) %# 2) +# 1;};
[Guarding-AttackOver] = $RETURN;
[Guarding-BeginCombat] = $RETURN "N";
[Guarding-CanGuard] = $VAR rangeWpn;
-rangeWpn = $GET_ITEM_SA($GET_CHAR_Ready($CombatantContext(), "WEAPON",0),"item_CombatAim");
-$IF (rangeWpn != "-?-?-"){$RETURN "N";};
-$IF($GET_HOOK_PARAM(5) ==# 2){$RETURN "Y";};
[Guarding-CanGuardAttack] = $VAR par5;
-par5 = $GET_HOOK_PARAM(5);
-$IF ($GetCombatantState($AttackerContext()) != "ICS_Guarding"){$RETURN "N";};
-$IF (par5 ># 0){$RETURN "Y";};
[Guarding-Guard] = $RETURN;
[Guarding-StartOfRound] = $VAR par5; $VAR par6;
-par5 = $GET_HOOK_PARAM(5); par6 = $GET_HOOK_PARAM(6);
-$IF (par5 ==# 3){$SET_HOOK_PARAM(6,"G");};
[IsCombatReady] = $RETURN;
[OnStartCombat] = $VAR nm; $VAR nm1; $VAR me; $VAR lvl; $VAR controlNPC; $VAR idx1; $VAR idx4; $VAR modCha;
-me = $IndexOf($CharacterContext()); nm = $GET_CHAR_NAME(me); idx1 = $NextCreatureIndex("", 1); idx4 = $NextCreatureIndex("", 4);
-$SET_COMBATANT_SA($CharacterContext(  ),"turnUndead","");
-$IF ($NextCreatureIndex(me -# 1, 4) == me)
-	{$SET_COMBATANT_SA($CharacterContext(),"side",1); $SET_CHAR_ASL(me,"side",1);}
-$ELSE
-	{$SET_COMBATANT_SA($CharacterContext(),"side",2); $SET_CHAR_ASL(me,"side",2);};
-nm1 = $GET_CHAR_NAME(idx1);
-$IF (nm != nm1 && $GET_MONSTERTYPE_SA(nm1,"range") != "-?-?-") {$SET_CHARACTER_SA($CharacterContext(),"range" + nm1,1);};
-$RUN_CHAR_SCRIPTS(me,"spawn");
-$IF ($GetCombatRound() ># 0) {$SET_COMBATANT_SA($CharacterContext(),"Summoned","spell");};
-// Paladin Leadership
-controlNPC = 0;
-$SET_COMBATANT_SA($CharacterContext(),"endControl", 1);
-lvl = $GET_CHAR_Lvl(me,"paladin");
-$IF ($InParty($CharacterContext()) != "" && lvl ># 0)
-	{
-		modCha = ($GET_CHAR_LIMITED_CHA(me) -# 13) *# 5;
-		$IF (lvl >=# 3){controlNPC = modCha +# 79;};
-		$IF (lvl ==# 2){controlNPC = modCha +# 39;};
-		$IF (lvl ==# 1){controlNPC = modCha +# 19;};
-		$SET_PARTY_ASL("controlNPC",controlNPC);
-	};
-$IF ($GET_COMBATANT_SA($CharacterContext(),"side") == 1 && $RANDOM(100) <# $GET_PARTY_ASL("controlNPC"))
-	{
-		$SET_COMBATANT_SA($CharacterContext(),"playerControl","CP");
-	};
[OnStep] = $VAR me; $VAR it;
-me = $IndexOf($CombatantContext()); it = $NextCreatureIndex("", 1);
-$IF (it != me)
-	{
-		$SET_HOOK_PARAM(5, it);
-		$SET_HOOK_PARAM(6, me);
-		$RUN_CHAR_SCRIPTS(it,"CheckProximity");
-		$RUN_CHAR_SCRIPTS(me,"CheckProximity");
-	};
[PreStartCombat] = $VAR par5; $VAR char; $VAR class;
-par5 = $GET_HOOK_PARAM(5); char = $IndexOf($CharacterContext()); class = $GET_CHAR_CLASS(char);
-$IF (class == "Paladin") {$RETURN par5 +# 10000;};
[StartCombatRound] = $RETURN;
\(END)

// possible damage types in form damageXyz
// acid, bludgeoning, charm, charm, cold, crushing, disease, electricity, fear, fire, gas, mind, paralysis, petrification, piercing, poison, psionic, slashing, spell, venom
//	global SAs
\(BEGIN)
name = Global_Combat
[PartyArrangement] = $IF ($GET_HOOK_PARAM(5) == "I")
-  {
-    $RETURN "ABABBBbBABBBABBBBCCCbBABBBBCCCbBABBBACCCBCbBABBBCBACCCBCbBABBBCBACDCBCCCcBbBABBBCBACDCBCCCcBbBABBBCBbCACDCBCCCcBbBABBBCBDBbCACDCBCCCcBbBABBBCBDBbCACDCBCECCCbAbAABcbbAABbAABcAbBcbbAABcAbBcbbAABdbbBcAcbbAABBCdbbBcAcbbAABBCdbACcAbBdccbbAABBCdbACcAbBdccbbAABBCecACdbcAbBdccbbAABBCCDecACdbcAbBdccbbAABBCCDecBDdbcAbBACAAAAbABAAAbAAAbAbbcbBAAAbAbbcbBAAAbAAbcbbbCABAAAbAAbcbbbCABAAAbABbcbAbbbCABAAAbAcABbcbAbbbCABAAAbAcABbdbcbAbbbDACABAAAbAcABbdbcbAbbbDACABAAAbAcACbdbBbcbAbbbBBBBAACCBBAABBAACBBACCBBAACBBACCBBAADCBACBCCBBAAbbDCBACBCCBBAAbbDCAbCBBACCBBAAbbccDCAbCBBACCBBAAbbccDCbcAbCBBADDCCBBAAbbccDCbcAbCBBADDCCBBAAbbccEDbcAbDCCBBA";
-  }
-$ELSE
-  {
-    $RETURN "ABABBBbBABBBbBABBBCBcBbBABBBCBcBbbABBBCBDBdBcBbBABBBCBDBeBdBcBbBABBBCBDBeBdBcBbBABBBCBDBEBfBeBdBcBbBABBBCBDBEBfBeBdBcBbBABBBCBDBEBFBgBfBeBdBcBbBABBBCBDBEBFBbAbAABcbbAABcbbAABBCdccbbAABBCdccbbAABBCCDeddccbbAABBCCDeddccbbAABBCCDDEfeeddccbbAABBCCDDEfeeddccbbAABBCCDDEEFgffeeddccbbAABBCCDDEEFgffeeddccbbAABBCCDDEEFFGAAAAbABAAAbACABAAAbACABAAAbAbADACABAAAbAcADACABAAAbAcAdAEADACABAAAbAcAdAEADACABAAAbAcAdAeAFAEADACABAAAbAcAdAeAFAEADACABAAAbAcAdAeAfAGAFAEADACABAAAbAcAdAeAfABBBBAACCBBAACCBBAAbbDDCCBBAAbbDDCCBBAAbbccEEDDCCBBAAbbccEEDDCCBBAAbbccddFFEEDDCCBBAAbbccddFFEEDDCCBBAAbbccddeeGGFFEEDDCCBBAAbbccddeeGGFFEEDDCCBBAAbbccddeeff";
-  };
[PartyOriginEast] = $SET_HOOK_PARAM(5,"-1");
[PartyOriginNorth] = $SET_HOOK_PARAM(5,"-1");
[PartyOriginSouth] = $SET_HOOK_PARAM(5,"-1");
[PartyOriginWest] = $SET_HOOK_PARAM(5,"-1");
\(END)

\(BEGIN)
name = Global_CreateCharacter
[PostCreateCharacter] = $VAR char;
-char = $IndexOf($CharacterContext());
-$SET_CHARACTER_SA($CharacterContext(), "pcSTR", $GET_CHAR_PERM_STR(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcSTRMOD", $GET_CHAR_PERM_STRMOD(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcINT", $GET_CHAR_PERM_INT(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcWIS", $GET_CHAR_PERM_WIS(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcDEX", $GET_CHAR_PERM_DEX(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcCON", $GET_CHAR_PERM_CON(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcCHA", $GET_CHAR_PERM_CHA(char));
\(END)

\(BEGIN)
name = Global_CreateMonsterCombatant
[CreateMonsterCombatant] = $VAR tbl;
-$VAR levelTbl;
-$VAR i;
-$VAR monster;
-$VAR level;
-$VAR monRace;
-tbl = "/$17$3$4$5$4$6/$15$4$5$6$4$7/$13$5$6$7$5$8/$11$7$8$9$8$10/$9$8$9$10$9$11/$7$10$11$12$12$13/$5$11$12$13$13$14/$3$13$14$15$16$16/$1$14$15$16$17$17/$0$16$17$18$20$19";
-monster = $IndexOf($CharacterContext());
-level = $SA_MONSTERTYPE_GET("monsterLevel");
-$SET_CHARACTER_SA($CharacterContext(), "class_baseName", $SA_MONSTERTYPE_GET("class_baseName"));
-$SET_CHAR_Lvl(monster,$GetHighestLevelBaseclass(monster),level);
-i = 0;
-$WHILE (1)
-	{
-		levelTbl = $DelimitedStringSubstring(tbl, i);
-		$IF (levelTbl == "") {$RETURN;}; // Protects us from bad Special Saves
-		$IF (level >=# $DelimitedStringSubstring(levelTbl, 0))
-			{
-				$SkillAdj($CharacterContext(), "Save Vs BR", "", "=", $DelimitedStringSubstring(levelTbl, 1));
-				$SkillAdj($CharacterContext(), "Save Vs PP", "", "=", $DelimitedStringSubstring(levelTbl, 2));
-				$SkillAdj($CharacterContext(), "Save Vs PPDM", "", "=", $DelimitedStringSubstring(levelTbl, 4));
-				$SkillAdj($CharacterContext(), "Save Vs RSW", "", "=", $DelimitedStringSubstring(levelTbl, 3));
-				$SkillAdj($CharacterContext(), "Save Vs SP", "", "=", $DelimitedStringSubstring(levelTbl, 5));
-				$RETURN;
-			};
-		i = i +# 1;
-	};
\(END)

\(BEGIN)
name = Global_Display
[CharacterViewScreen] = $VAR char; $VAR nm; $VAR age; $VAR sex; $VAR align; $VAR alignList; $VAR alignName; $VAR class;
-$VAR cbnList; $VAR cbnCount; $VAR cbn; $VAR cbn2; $VAR cbn3; $VAR hbl; $VAR hbn; $VAR lvl; $VAR lvl2; $VAR lvl3;
-$VAR xp; $VAR xp2; $VAR xp3; $VAR status; $VAR hp; $VAR maxHp; $VAR race; $VAR ac; $VAR acEff; $VAR acAdj; $VAR thac0;
-$VAR thac0Adj; $VAR str; $VAR strMod; $VAR int; $VAR wis; $VAR dex; $VAR con; $VAR cha; $VAR dmg; $VAR dmgBns; $VAR enc;
-$VAR mvmt; $VAR weight; $VAR height; $VAR wpn; $VAR shield; $VAR armor; $VAR sWidth;
-char = $IndexOf($CharacterContext()); nm = $GET_CHAR_NAME(char); age = $GET_CHAR_AGE(char); sex = $GET_CHAR_SEX(char);
-align = $GET_CHAR_ALIGNMENT(char);
-alignList = "$LAWFUL GOOD$NEUTRAL GOOD$CHAOTIC GOOD$LAWFUL NEUTRAL$TRUE NEUTRAL$CHAOTIC NEUTRAL$LAWFUL EVIL$NEUTRAL EVIL$CHAOTIC EVIL";
-alignName = $DelimitedStringSubstring(alignList,align); class = $GET_CHAR_CLASS(char);
-cbnList = $DAT_Class_Baseclasses(class); cbnCount = $DelimitedStringCount(cbnList);
-cbn = $DelimitedStringSubstring(cbnList,0); cbn2 = $DelimitedStringSubstring(cbnList,1);
-cbn3 = $DelimitedStringSubstring(cbnList,2); hbn = $GetHighestLevelBaseclass(char);
-hbl = $GetBaseclassLevel(char,hbn); xp = $GET_CHAR_Exp(char,cbn); xp2 = $GET_CHAR_Exp(char,cbn2); xp3 = $GET_CHAR_Exp(char,cbn3);
-lvl = $GetBaseclassLevel(char,cbn); lvl2 = $GetBaseclassLevel(char,cbn2); lvl3 = $GetBaseclassLevel(char,cbn3);
-status = $GET_CHAR_STATUS(char); hp = $GET_CHAR_HITPOINTS(char); maxHp = $GET_CHAR_MAXHITPOINTS(char);
-race = $GET_CHAR_RACE(char); ac = $GET_CHAR_AC(char); acEff = $GET_CHAR_EFFAC(char); acAdj = $GET_CHAR_ADJAC (char);
-thac0 = $GET_CHAR_THAC0(char); thac0Adj = $GET_CHAR_ADJTHAC0(char); str = $GET_CHAR_LIMITED_STR(char);
-strMod = $GET_CHAR_LIMITED_STRMOD(char); int = $GET_CHAR_LIMITED_INT(char); wis = $GET_CHAR_LIMITED_WIS(char);
-dex = $GET_CHAR_LIMITED_DEX(char); con = $GET_CHAR_LIMITED_CON(char); cha = $GET_CHAR_LIMITED_CHA(char);
-dmgBns = $GET_CHAR_DAMAGEBONUS(char); enc = $GET_CHAR_ENC(char); mvmt = $GET_CHAR_MAXMOVE(char);
-weight = $GET_CHAR_ASL(char,"charWeight"); height = $GET_CHAR_ASL(char,"charHeight");
-$IF (weight == "")
-	{$SET_CHAR_ASL(char,"charWeight",$DAT_Race_Weight($CharacterContext())); weight = $GET_CHAR_ASL(char,"charWeight"); };
-$IF (height == "")
-	{$SET_CHAR_ASL(char,"charHeight",$DAT_Race_Height($CharacterContext())); height = $GET_CHAR_ASL(char,"charHeight");};
-wpn = $GET_CHAR_Ready($CharacterContext(),"WEAPON",0); shield = $GET_CHAR_Ready($CharacterContext(),"SHIELD",0);
-armor = $GET_CHAR_Ready($CharacterContext(),"ARMOR",0); sWidth = $GET_CONFIG("Screen_Width");
-// screen resoltion
-$IF (sWidth ==# 640)
-	{
-		$GrSet("LeftCol",18, 18); $GrSet("RightCol", 220, 18); $GrSet("Skills", 417, 270);
-		$GrSet("Ability", 50, 0); $GrSet("StatusTab", 105, 0); $GrSet("SkillsTab", 125, 0);
-		$GrSet("EncumbTab",125, 0); $GrSet("TextHeight", 0, 18); $GrSetLinefeed("TextHeight");
-	};
-$IF (sWidth ==# 800)
-	{
-		$GrSet("LeftCol",20,20); $GrSet("RightCol",260,20); $GrSet("Skills", 450, 380);
-		$GrSet("Ability",75,0); $GrSet("StatusTab",130,0); $GrSet("SkillsTab", 150, 0);
-		$GrSet("EncumbTab",150,0); $GrSet("TextHeight",0,20); $GrSetLinefeed("TextHeight");
-	};
-$IF (sWidth ==# 1024)
-	{
-		$GrSet("LeftCol",20,20); $GrSet("RightCol", 300,20); $GrSet("Skills", 608, 490);
-		$GrSet("Ability", 75, 0); $GrSet("StatusTab", 150, 0); $GrSet("SkillsTab", 175, 0);
-		$GrSet("EncumbTab",175, 0); $GrSet("TextHeight",0,20); $GrSetLinefeed("TextHeight");
-	};
-// monster characters
-$IF ($GET_CHAR_TYPE(char) != "@PC@" && $GET_CHAR_TYPE(char) != "@NPC@")
-	{
-		$GrMoveTo("LeftCol"); $GrFormat("SL"); $GrColor("YELLOW"); $GrPrtLF($UpCase(nm));
-		$GrMark("Level"); $GrMoveTo("RightCol"); $GrColor("WHITE"); $GrPrint("STATUS");
-		$IF (status >=# 2) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("DEAD");};
-		$IF (status ==# 1) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF("UNCONSCIOUS");};
-		$IF (status ==# 0) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF("OKAY");};
-		$GrColor("WHITE"); $GrPrint("HIT POINTS");
-		$IF (hp <=# 0) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrint(hp);};
-		$IF ((hp >=# 1) && (hp <# maxHp)) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrint(hp);};
-		$IF (hp ==# maxHp) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrint(hp);};
-		$GrColor("GREEN"); $GrPrtLF("/" + maxHp); $GrColor("WHITE"); $GrPrtLF($UpCase(race)); $GrMoveTo("Level");
-		$GrMove("TextHeight"); $GrMove("TextHeight"); $GrMove("TextHeight"); $GrMove("TextHeight"); $GrColor("WHITE");
-		$GrMark("Strength"); $GrPrtLF(" "); $GrPrtLF("INT"); $GrPrtLF(" "); $GrPrtLF(" "); $GrPrtLF(" "); $GrPrtLF(" ");
-		$GrMark("Armor"); $GrMoveTo("Strength"); $GrMove("Ability"); $GrColor("GREEN"); $GrPrtLF(" "); $GrPrtLF(int);
-		$GrPrtLF(" "); $GrPrtLF(" "); $GrPrtLF(" "); $GrPrtLF(" "); $GrMoveTo("Armor"); $GrMove("TextHeight"); 
-		$GrColor("WHITE"); $GrPrint("ARMOR CLASS");
-		$IF (ac !=# acEff) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF(acEff);};
-		$IF (ac ==# acEff) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF(ac);};
-		$GrColor("WHITE"); $GrPrint("THAC0");
-		$IF (thac0 !=# thac0Adj) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF(thac0Adj);};
-		$IF (thac0 ==# thac0Adj) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF(thac0);};
-		$RETURN;
-	};
-
-$GrMoveTo("LeftCol"); $GrFormat("SL"); $GrColor("YELLOW"); $GrPrtLF($UpCase(nm)); $GrColor("WHITE");
-$GrPrint($UpCase(sex)); $GrTab("StatusTab"); $GrColor("GREEN"); $GrPrint(age); $GrColor("WHITE"); $GrPrtLF(" YEARS");
-$GrPrtLF(alignName); $GrPrtLF($UpCase(class));
-$IF (cbnCount ==# 3)
-	{$GrPrint("LEVEL/XP " + lvl + "/" + xp); $GrPrint(" " + lvl2 + "/" + xp2); $GrPrtLF(" " + lvl3 + "/" + xp3);};
-$IF (cbnCount ==# 2 && cbnList != "-?-?-")
-	{$GrPrint("LEVEL/XP " + lvl + "/" + xp); $GrPrtLF(" " + lvl2 + "/" + xp2);};
-$IF (cbnCount ==# 1)
-	{$GrPrtLF("LEVEL/XP " + lvl + "/" + xp);};
-$GrMark("Level");
-
-$GrMoveTo("RightCol"); $GrColor("WHITE"); $GrPrint("STATUS");
-$IF (status >=# 2) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("DEAD");};
-$IF (status ==# 1) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF("UNCONSCIOUS");}
-$IF (status ==# 0) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF("OKAY");};
-$GrColor("WHITE"); $GrPrint("HIT POINTS");
-$IF (hp <=# 0) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrint(hp);};
-$IF ((hp >=# 1) && (hp <# maxHp)) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrint(hp);};
-$IF (hp ==# maxHp) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrint(hp);};
-$GrColor("GREEN"); $GrPrtLF("/" + maxHp); $GrColor("WHITE"); $GrPrtLF($UpCase(race)); $GrColor("GREEN"); $GrPrint(weight);
-$GrColor("WHITE"); $GrPrint(" LBS"); $GrColor("GREEN"); $GrTab("StatusTab"); $GrPrint(height /# 12); $GrColor("WHITE");
-$GrPrint("'"); $GrColor("GREEN"); $GrPrint(height %# 12); $GrColor("WHITE"); $GrPrtLF("\""); $GrMoveTo("Level");
-$GrMove("TextHeight"); $GrColor("WHITE"); $GrMark("Strength"); $GrPrtLF("STR"); $GrPrtLF("INT"); $GrPrtLF("WIS");
-$GrPrtLF("DEX"); $GrPrtLF("CON"); $GrPrtLF("CHA"); $GrMark("Armor"); $GrMoveTo("Strength"); $GrMove("Ability");
-$GrColor("GREEN");
-$IF (strMod >=# 1){$GrPrtLF(str + "(" + strMod + ")");}
-$ELSE{$GrPrtLF(str);};
-$GrPrtLF(int); $GrPrtLF(wis); $GrPrtLF(dex); $GrPrtLF(con); $GrPrtLF(cha); $GrMoveTo("Armor"); $GrMove("TextHeight"); 
-$GrColor("WHITE"); $GrPrint("ARMOR CLASS");
-$IF (ac !=# acEff) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF(acEff);}
-$ELSE {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF(ac);};
-$GrColor("WHITE"); $GrPrint("THAC0");
-$IF (thac0 !=# thac0Adj) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF(thac0Adj);}
-$ELSE {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF(thac0);};
-$GrColor("WHITE"); $GrPrint("DAMAGE"); $GrColor("GREEN"); $GrTab("StatusTab");
-$IF (dmgBns ># 0){$GrPrtLF("1D2+" + dmgBns);}
-$ELSE {$GrPrtLF("1D2");};
-$GrColor("WHITE"); $GrMove("TextHeight"); 
-
-$IF ((wpn == "") && (shield == "") && (armor == "")){$GrPrtLF("NONE");};
-$IF (wpn != ""){$GrPrtLF($UpCase($DAT_Item_IDName(wpn)));};
-$IF (shield != ""){$GrPrtLF($UpCase($DAT_Item_IDName(shield)));};
-$IF (armor != ""){$GrPrtLF($UpCase($DAT_Item_IDName(armor)));};
-$GrSet("Encumbrance", "RightCol", "Armor"); $GrMoveTo("Encumbrance"); $GrMove("TextHeight"); $GrColor("WHITE");
-$GrPrint("ENCUMBRANCE"); $GrColor("GREEN"); $GrTab("EncumbTab"); $GrPrtLF(enc); $GrColor("WHITE");
-$GrPrint("MOVEMENT"); $GrColor("GREEN"); $GrTab("EncumbTab"); $GrPrtLF(mvmt);
-// thief skills
-$IF (class == "bard" || class == "Thief")
-	{
-		$GrMoveTo("Skills"); $GrColor("WHITE"); $GrPrtLF("SKILLS"); $GrMark("Pick"); $GrPrtLF("Pick Pockets");
-		$GrPrtLF("Open Locks"); $GrPrtLF("Find Traps"); $GrPrtLF("Move Silently"); $GrPrtLF("Hide in Shadows");
-		$GrPrtLF("Hear Noise"); $GrPrtLF("Climb Walls"); $GrPrtLF("Read Languages"); $GrMoveTo("Pick"); $GrMove("SkillsTab"); 
-		$GrColor("GREEN");
-		$GrPrtLF($SkillAdj($CharacterContext(),"PickPockets","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"OpenLocks","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"FindTraps","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"MoveSilent","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"HideInShadows","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"HearNoise","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"ClimbWalls","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"ReadLanguages","","F",""));
-	};
\(END)

\(BEGIN)
name = Global_Transfer
[EachPartyMember] = $ForEachPossession($CharacterContext(), "item_DrowEquipment");
-$RETURN "1";
[TransferModule] = $ForEachPartyMember("Global_Transfer", "EachPartyMember");
-$IF ($GET_HOOK_PARAM(5) ==# "1"){$SET_HOOK_PARAM(6,"Your drow equipment dissolves.");};
-$RETURN;
\(END)

\(BEGIN)
name = homePlane
ParametersInner = Air, Earth, Fire, Negative, Positive, Water
ParametersOuter = The Abyss, Arborea Baator, Beastlands, Cercari, Elysium, Happy Hunting Grounds, Limbo, Lower, Mechanus, Upper
\(END)

\(BEGIN)
name = isAfraid
[AutoAction] = $IF ($SA_COMBATANT_GET("isImmuneFear") != "-?-?-") {$RETURN;}
-$ELSE{$RETURN "F" + $SA_PARAM_GET();};
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Afraid"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
\(END)

\(BEGIN)
name = isBarkskinned
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()) {$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7, "Barkskin"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isBarkskinned") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";} $ELSE {$RETURN "N";};
[SaveVsBW_Save] = $RETURN $GET_HOOK_PARAM(0) -# 1;
[SaveVsPPDM_Save] = $RETURN $GET_HOOK_PARAM(0) -# 1;
[SaveVsPP_Save] = $RETURN $GET_HOOK_PARAM(0) -# 1;
[SaveVsRSW_Save] = $RETURN $GET_HOOK_PARAM(0) -# 1;
[SaveVsSp_Save] = $RETURN $GET_HOOK_PARAM(0) -# 1;
\(END)

\(BEGIN)
name = isBestowedCurse
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()){$SA_REMOVE();};
-$SET_HOOK_PARAM( 7, "Curse Bestowed"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[Dispel] = $VAR tgt; // target
-tgt = $IndexOf($TargetContext()); $SA_REMOVE(); $SetFriendly(tgt,$GET_COMBATANT_SA($TargetContext(),"side"));
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($AttackerContext(),"isBestowedCurse") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 4);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)) {$RETURN "Y";}
-$ELSE {$RETURN "N";};
[SaveVsBW_Save] = $RETURN $GET_HOOK_PARAM(0) +# 4;
[SaveVsPPDM_Save] = $RETURN $GET_HOOK_PARAM(0) +# 4;
[SaveVsPP_Save] = $RETURN $GET_HOOK_PARAM(0) +# 4;
\(END)

\(BEGIN)
name = isBlessed
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Blessed"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($AttackerContext(),"isBlessed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)) {$RETURN "Y";} $ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isBlind
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Blind"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isBlind") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 4);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)) {$RETURN "Y";} $ELSE {$RETURN "N";};
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isBlindPyrotechnics
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Blind");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"IsBlindPyrotechnics") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 4);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
[IsCombatReady] = $RETURN "N";
[StartCombatRound] = $VAR exp; $VAR time;
-exp = $SA_PARAM_GET(); time = $GET_PARTY_TIME();
-$IF (time ># exp) {$DELETE_COMBATANT_SA($CombatantContext(),"IsBlindPyrotechnics");};
\(END)

\(BEGIN)
name = isBlinking
[CanCastSpells] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET())
-	{
-		$DELETE_COMBATANT_SA($CharacterContext(),"isBlinking1"); $DELETE_COMBATANT_SA($CharacterContext(),"isBlinking2");
-		$DELETE_CHARACTER_SA($CharacterContext(),"blinking"); $SA_REMOVE();
-	};
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Blinking "); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[spawn] = $SET_COMBATANT_SA($Myself(),"isBlinking1",1);
\(END)

\(BEGIN)
name = isBlinking1
[OnStartCombatantAction] = $SET_COMBATANT_SA($CharacterContext(),"isBlinking2",1);
[StartCombatRound] = $DELETE_COMBATANT_SA($CharacterContext(),"isBlinking2");
\(END)

\(BEGIN)
name = isBlinking2
[IsValidTarget] = $IF ($GET_MONSTERTYPE_SA($GET_CHAR_NAME($IndexOf($AttackerContext())),"monsterSeeEthereal") != "-?-?-"){$RETURN "Y";};
-$IF ($GET_CHARACTER_SA($AttackerContext(),"isBlinking") != "-?-?-"){$RETURN "Y";};
-$IF ($GET_CHARACTER_SA($AttackerContext(),"isBlinkingRing") != "-?-?-"){$RETURN "Y";};
-$RETURN "N";
\(END)

\(BEGIN)
name = isBlinkingRing
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Blinking "); $SET_HOOK_PARAM( 6,""); $RETURN 1;
\(END)

\(BEGIN)
name = isBlurred
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Blurred"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $VAR par5; $VAR par6;
-$IF ($GET_COMBATANT_SA($TargetContext(),"blurFirst") == "-?-?-")
-	{$SET_COMBATANT_SA($TargetContext(),"blurFirst",1); par5 = $GET_HOOK_PARAM(5) -# 4;};
-par5 = $GET_HOOK_PARAM(5) -# 2; par6 = $GET_HOOK_PARAM(6); $IF (par5 >=# par6){$RETURN "Y";} $ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isBrave
[Dispel] = $SA_REMOVE();
[DoesSpellAttackSucceed] = $VAR sav; $VAR rdm;
-sav = $SkillAdj($CharacterContext(),"Save Vs Spell","","F","") -# 4;
-rdm = $RANDOM(20) +# 1;
-$IF ($GET_SPELL_SA($SpellContext(),"DamageMagical") == "fear")
-	{
-		$IF (sav <# rdm) {$RETURN "Y";}
-		$ELSE {$RETURN "N";};
-	};
\(END)

\(BEGIN)
name = isCarrionStenched
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Retching"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($AttackerContext(),"isCarrionStenched") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)) {$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isCharmed
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Charmed "); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $VAR clev; $VAR dlev; $VAR cls; $VAR pct;
-clev = $SA_PARAM_GET(); cls  = $SA_SPELL_GET("spell_Dispel"); dlev = $GET_CHAR_Lvl($IndexOf($AttackerContext()),cls);
-$IF ($GET_CHARACTER_SA($TargetContext(),"z-IsGlobedMinor") != "-?-?-" && cls != "druid") {$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"z-IsGlobed") != "-?-?-") {$RETURN;};
-$IF (cls == "paladin"){dlev = dlev -#8;}; $IF (clev ># dlev) {pct = 50 -# ((clev -# dlev) *# 2);}
-$ELSE {pct = 50 +# ((dlev -# clev) *# 5);};
-$IF ($RANDOM(100) +# 1 <=# pct)
-	{$SetFriendly($IndexOf($TargetContext()),$GET_COMBATANT_SA($TargetContext(),"side")); $SA_REMOVE();};
\(END)

\(BEGIN)
name = isCharmResistant
\(END)

\(BEGIN)
name = isCharmResistantMin
\(END)

\(BEGIN)
name = isCloakDisplaced
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isCloakDisplaced") != "-?-?-" && $GET_COMBATANT_SA($TargetContext(),"displaceMiss") == "-?-?-")
-	{$SET_COMBATANT_SA($TargetContext(),"displaceMiss",1); $SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[SaveVsBW_Save] = $RETURN $GET_HOOK_PARAM(0) -# 2;
[SaveVsPPDM_Save] = $RETURN $GET_HOOK_PARAM(0) -# 2;
[SaveVsPP_Save] = $RETURN $GET_HOOK_PARAM(0) -# 2;
[SaveVsRSW_Save] = $RETURN $GET_HOOK_PARAM(0) -# 2;
[SaveVsSp_Save] = $RETURN $GET_HOOK_PARAM(0) -# 2;
\(END)

\(BEGIN)
name = isConfused
[CanCastSpells] = $RETURN "N";
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Confused"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[GetAdjMaxMovement] = $RETURN "0";
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isConfusedExtended
[Dispel] = $SA_REMOVE();
[StartCombatRound] = $VAR save; $VAR rnd; $VAR opr; $VAR com;
-com = $IndexOf($CombatantContext()); opr = $GET_COMBATANT_SA($CombatantContext(),"oncePerRnd");
-$IF (opr ==# 0)
-	{
-		$DELETE_COMBATANT_SA($CharacterContext(),"isConfused"); save = $SkillAdj($CombatantContext(), "Save Vs SP", "", "F", "");
-		rnd = $RANDOM(20) -# 1;
-		$IF (save <# rnd){$DELETE_COMBATANT_SA($CharacterContext(),"ConfusionSA");$RETURN;};
-		rnd = $RANDOM(10) +# 1;
-		$IF (rnd ==# 1){$SetFriendly(com,1);$RETURN;};
-		$IF (rnd <=# 6){$SET_COMBATANT_SA($CombatantContext(),"isConfused","Confused");$RETURN;};
-		$IF (rnd ==# 7){$SetFriendly(com,1);$RETURN;}; $IF (rnd ==# 8){$SetFriendly(com,2);$RETURN;};
-		$SetFriendly(com,2); $RETURN;
-	};
\(END)

\(BEGIN)
name = isCursed
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7, "Cursed"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($AttackerContext(),"isCursed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";} $ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isDarkBlinded
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Blind in the dark");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"IsDarkBlinded") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 4);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isDetectedEvil
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,$SA_PARAM_GET()); $SET_HOOK_PARAM( 6,""); $RETURN 1;
\(END)

\(BEGIN)
name = isDetectedUndead
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Undead"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
\(END)

\(BEGIN)
name = isDetectIllusion
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Detecting Illusion"); $SET_HOOK_PARAM( 6,""); $RETURN "1";
\(END)

\(BEGIN)
name = isDetectingMagic
[CanCastSpells] = $VAR exp; exp = $SA_PARAM_GET(); $IF ($GET_PARTY_TIME() ># exp){$SA_REMOVE();};
[CanCharacterDetectMagic] = $VAR exp; exp = $SA_PARAM_GET(); $IF ($GET_PARTY_TIME() ># exp){$SA_REMOVE();}; $RETURN "Y";
[Dispel] = $SA_REMOVE();
\(END)

\(BEGIN)
name = isDiseased
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,$SA_PARAM_GET()); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[ComputeDamage] = $VAR tgt; $VAR spell; $VAR spellCount; $VAR preCHA; $VAR adj;
-tgt = $IndexOf($CharacterContext());
-spell = "$Cure Light Wounds$Cure Serious Wounds$Cure Critical Wounds$Cure Light Wounds|Priest$Cure Serious Wounds|Priest$Cure Critical Wounds|Priest";
-spellCount = $DelimitedStringCount(spell); preCHA = $GET_CHAR_LIMITED_CHA(tgt); adj = preCHA -# 2;
-$SET_CHARACTER_SA($CharacterContext(),"diseasedCHA",preCHA);
-$MODIFY_CHAR_ATTRIBUTE(tgt,"CHA",adj, "MINUTES", 999999999, "disease","isDiseased");
-$IF ($SpellContext() == $DelimitedStringSubstring(spell,spellCount)){$RETURN 0;};
-$IF ($SpellContext() == "Cure Disease")
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(), "isDiseased");
-		$REMOVE_CHAR_MODIFICATION(tgt,"isDiseased.");
-		$DELETE_CHARACTER_SA($CharacterContext(), "diseasedCHA");
-	};
\(END)

\(BEGIN)
name = isDiseasedSpell
[CanCastSpells] = $VAR chr; $VAR t10; $VAR t60; $VAR str;
-chr = $IndexOf($CharacterContext());
-$IF ($GET_CHARACTER_SA($CharacterContext(),"IDSTimer10") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"IDSTimer10",$GET_PARTY_TIME() +# 10);
-		$SET_CHARACTER_SA($CharacterContext(),"IDSTimer60",$GET_PARTY_TIME() +# 60);
-	};
-t10 = $GET_CHARACTER_SA($CharacterContext(),"IDSTimer10");
-t60 = $GET_CHARACTER_SA($CharacterContext(),"IDSTimer60");
-$IF ($GET_CHAR_HITPOINTS(chr) ># $GET_CHARACTER_SA($CharacterContext(),"minhp"))
-	{
-		$IF ($GET_PARTY_TIME() ># t10)
-			{
-				$SET_CHARACTER_SA($CharacterContext(),"IDSTimer10",$GET_PARTY_TIME() +# 10);
-				$SET_CHAR_HITPOINTS(chr,$GET_CHAR_HITPOINTS(chr) -# 1);
-			};
-	};
-str = $GET_CHAR_LIMITED_STR(chr);
-$IF (str ># 3)
-	{
-		$IF ($GET_PARTY_TIME() ># t60)
-			{
-				$SET_CHARACTER_SA($CharacterContext(),"IDSTimer60",$GET_PARTY_TIME() +# 60);
-				$MODIFY_CHAR_ATTRIBUTE(chr,"STR",-1,"MINUTES".999999999,"Diseased STR reduction","SPELL Disease");
-				$IF (str <# 4) {$SET_CHAR_MAXMOVE(chr,2);};
-			};
-	};
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Diseased "); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[IsCombatReady] = $IF ($GET_CHAR_LIMITED_STR($IndexOf($CharacterContext())) <# 4){$RETURN "N";};
\(END)

\(BEGIN)
name = isDispellingEvil
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Dispelling Evil"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isDispellingEvil") != "-?-?-")
-	{
-		$IF ($AlignmentGood($AttackerContext()) == "" && $GET_COMBATANT_SA($AttackerContext(),"homePlane") != "-?-?-")
-			{
-				$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 7);
-			};
-	}
-$ELSE
-	{
-		$IF ($AlignmentGood($TargetContext()) == "" && $GET_COMBATANT_SA($TargetContext(),"homePlane") != "-?-?-" && $GET_HOOK_PARAM(6) <# $GET_HOOK_PARAM(5) && $GET_CHARACTER_SA($AttackerContext(),"canDispel") != "-?-?-")
-			{
-				$CastSpellOnTargetAs($TargetContext(),"Banish",$AttackerContext());
-				$DELETE_CHARACTER_SA($AttackerContext(),"canDispel"); $RETURN;
-			};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isDispellingGood
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Dispelling Good"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isDispellingGood") != "-?-?-")
-	{
-		$IF ($AlignmentEvil($AttackerContext()) == "" && $GET_COMBATANT_SA($AttackerContext(),"homePlane") != "-?-?-")
-			{
-				$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 7);
-			};
-	}
-$ELSE
-	{
-		$IF ($AlignmentEvil($TargetContext()) == "" && $GET_COMBATANT_SA($TargetContext(),"homePlane") != "-?-?-" && $GET_HOOK_PARAM(6) <# $GET_HOOK_PARAM(5) && $GET_CHARACTER_SA($AttackerContext(),"canDispel") != "-?-?-")
-			{
-				$CastSpellOnTargetAs($TargetContext(),"Banish",$AttackerContext());
-				$DELETE_CHARACTER_SA($AttackerContext(),"canDispel"); $RETURN;
-			};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isDragonAdj
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Nervous"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($AttackerContext(),"isDragonAdj") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[IsCombatReady] = $VAR me; $VAR sideset; $VAR foe; $VAR i;
-me = $IndexOf($CharacterContext());
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE {sideset = 5;};
-foe = 0;
-i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_ASL(i,"FearAdj")) {foe = foe +# 1;};
-		i = $NextCreatureIndex(i,sideset);
-	};
-$IF (foe == 0){$SA_REMOVE();};
\(END)

\(BEGIN)
name = isDragonFear
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Paralyzed with fear"); $SET_HOOK_PARAM( 6,"");
 $RETURN 1;
[IsCombatReady] = $VAR me; $VAR sideset; $VAR foe; $VAR i;
-me = $IndexOf($CharacterContext());
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE {sideset = 5;};
-foe = 0; i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_ASL(i,"FearAdj")){foe = foe +# 1;};
-		i = $NextCreatureIndex(i,sideset);
-	};
-$IF (foe == 0) {$SA_REMOVE(); $RETURN "Y";};
-$RETURN "N";
\(END)

\(BEGIN)
name = isDragonFlee
[AutoAction] = $RETURN "F" + $SA_PARAM_GET();
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Fleeing Dragon");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
[IsCombatReady] = $VAR me;
-$VAR sideset;
-$VAR foe;
-$VAR i;
-me = $IndexOf($CharacterContext());
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE {sideset = 5;};
-foe = 0;
-i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_ASL(i,"FearAdj")){foe = foe +# 1;};
-		i = $NextCreatureIndex(i,sideset);
-	};
-$IF (foe == 0){$SA_REMOVE();};
\(END)

\(BEGIN)
name = isDrained
[TrainingCharacter] = $SA_REMOVE();
\(END)

\(BEGIN)
name = isElf
[CreateMonsterCombatant] = $VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$SET_CHARACTER_SA($CharacterContext(),"isElf",$SA_PARAM_GET());
-$SET_CHAR_RACE(chr,"Elf");
[DoesAttackSucceed] = $VAR wpn;
-wpn = $GET_CHAR_Ready($AttackerContext(),"WEAPON",0);
-$IF ($GET_CHARACTER_SA($AttackerContext(),"isElf") != "-?-?-" && $GET_ITEM_SA(wpn,"item_ElfBonus") != "-?-?-")
-	{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[DoesSpellAttackSucceed] = $VAR atk; $VAR caster; $VAR caster1; $VAR caster2; $VAR level; $VAR base;
-$IF ($SA_SPELL_GET("DamageMagical") != "charm"){$RETURN;};
-atk = $IndexOf($AttackerContext()); caster = $SA_SPELL_GET("Caster");
-caster1 = $DelimitedStringSubstring(caster,0); caster2 = $DelimitedStringSubstring(caster,1);
-$IF (caster1 == "monster")
-	{level =  $GET_MONSTERTYPE_SA($GET_CHAR_NAME(atk),"monsterLevel"); base = 11;}
-$ELSE
-	{
-		$IF (caster1 == "item") {level = caster2; base = 11;}
-		$ELSE {level = $GET_CHAR_Lvl(atk,caster1); base = caster2;};
-	};
-$IF ($RANDOM(100) <# 90 -# 5 *# (level -# base))
-	{$SET_HOOK_PARAM(5,$GET_CHAR_NAME($IndexOf($TargetContext())) +" is unaffected" ); $RETURN "N";};
\(END)

\(BEGIN)
name = isEnervated
[CanCureOrWhatever] = $VAR time; $VAR exp; $VAR max; $VAR cls; $VAR lvl; $VAR xCls; $VAR xp;
-time = $GET_PARTY_TIME(); exp = $GET_CHARACTER_SA($CharacterContext(),"IsEvervatedExp");
-$IF (time <# exp) {$RETURN;};
-tgt = $IndexOf($CharacterContext()); xCls = $GET_CHAR_CLASS(tgt);
-max = $GET_CHARACTER_SA($TargetContext(),"isEnervatedPreMaxHP");
-cls = $DelimitedStringSubstring($GET_CHARACTER_SA($TargetContext(),"isEnervatedPreLvl"),0);
-lvl = $DelimitedStringSubstring($GET_CHARACTER_SA($TargetContext(),"isEnervatedPreLvl"),1);
-xp = $GET_CHARACTER_SA($TargetContext(),"isEnervatedPreXP");
-$SA_REMOVE(); $SET_CHAR_MAXHITPOINTS(tgt,max); $SET_CHAR_Lvl(tgt,cls,lvl); $SET_CHAR_Exp(tgt,xCls,xp);
[TrainingCharacter] = $SA_REMOVE(); $DELETE_CHARACTER_SA($TargetContext(),"isEnervatedPreMaxHP");
-$DELETE_CHARACTER_SA($TargetContext(),"isEnervatedPreLvl"); $DELETE_CHARACTER_SA($TargetContext(),"isEnervatedPreXP");
\(END)

\(BEGIN)
name = isEnfeebled
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Enfeebled"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($AttackerContext(),"isEnfeebled") != "-?-?-")
-  {$SET_COMBATANT_SA($TargetContext(),"isEnfeebledHit",1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isEnfeebledHit
[ComputeDamage] = $IF ($GET_COMBATANT_SA($AttackerContext(),"isEnfeebled") != "-?-?-")
-  {
-   $SET_HOOK_PARAM(5,($GET_HOOK_PARAM(5) *# $GET_COMBATANT_SA($AttackerContext(),"enfeebled")) /# 100);
-   $IF ($GET_HOOK_PARAM(5) == 0) {$SET_HOOK_PARAM(5,1);};
-  };
-$SA_REMOVE();
\(END)

\(BEGIN)
name = isEnlarged
[CanCastSpells] = $VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_PARTY_TIME() ># $GET_CHARACTER_SA($CharacterContext(),"enlarged"))
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"enlarged");
-		$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-		$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-		$SA_REMOVE();
-	};
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Enlarged");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
[Dispel] = $VAR me;
-me = $IndexOf($CharacterContext()); $DELETE_CHARACTER_SA($CharacterContext(),"enlarged");
-$REMOVE_CHAR_MODIFICATION(me,"SPELL Enlarge *");
-$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE"); $SA_REMOVE();
[Dispel enlarged] = $VAR me;
-me = $IndexOf($CharacterContext());
-$DELETE_CHARACTER_SA($CharacterContext(),"enlarged");
-$REMOVE_CHAR_MODIFICATION(me,"SPELL Enlarge *");
-$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-$SA_REMOVE();
\(END)

\(BEGIN)
name = isEntangled0
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Entangled by Vines");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
[ComputeDamage] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
[Dispel] = $SA_REMOVE();
[GetAdjMaxMovement] = $RETURN "0";
[IsCombatReady] = $VAR exp; // expiration time
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() >=# exp) {$SA_REMOVE(); $RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isEntangled1
[CharDisplayStatus] = $RUN_AREA_SE_SCRIPTS("Entangled1", $IndexOf($CharacterContext()));
-$SET_HOOK_PARAM( 7, $GET_HOOK_PARAM(8));
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
[Dispel] = $SA_REMOVE();
[GetAdjMaxMovement] = $VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$SET_HOOK_PARAM(6, $GET_HOOK_PARAM(5));
-$RUN_AREA_SE_SCRIPTS("MovementAdjustments", chr);
-$RETURN $GET_HOOK_PARAM(5);
\(END)

\(BEGIN)
name = isFalseSeeing
[CanCastSpells] = $VAR rndm;
-rndm = $RANDOM(3);
-$IF (rndm ==# 0){$RETURN "N";};
[DoesAttackSucceed] = $VAR IFS; $VAR p5; $VAR p6;
-IFS = $GET_CHARACTER_SA($AttackerContext(),"IsFalseSeeing");
-p5 = $GET_HOOK_PARAM(5); p6 = $GET_HOOK_PARAM(6);
-$IF (IFS == "-?-?-"){$RETURN;};
-$IF ((p5 -# 5) ># p6){$RETURN "Y";};
[StartCombatRound] = $VAR exp;
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() ># exp){$SA_REMOVE();};
\(END)

\(BEGIN)
name = isFast
[AdjustInitiative] = $RETURN -2;
[CharDisplayStatus] = $VAR exp; // expiration time
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() >=# exp){$SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Hasted"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[GetAdjMaxMovement] = $RETURN $GET_HOOK_PARAM(5) *# 2;
[GetNumberOfAttacks] = $RETURN 2;
\(END)

\(BEGIN)
name = isFastBoots
[GetAdjMaxMovement] = $RETURN $GET_HOOK_PARAM(5) *# 2;
\(END)

\(BEGIN)
name = isFeebleminded
[CanCastSpells] = $RETURN "N";
[CanKnowSpell] = $RETURN "N";
[CanMemorizeSpells] = $RETURN "N";
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isFieryCloudy
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Partially blinded by smoke"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $VAR p5; $VAR p6;
-p5 = $GET_HOOK_PARAM(5); p6 = $GET_HOOK_PARAM(6);
-$IF (p5 ># (p6 -# 4)) {$RETURN "Y";};
[OnEndCombat] = $SA_REMOVE();
-$DELETE_CHARACTER_SA($CombatantContext(),"FieryLevel"); $DELETE_CHARACTER_SA($CombatantContext(),"FierySave");
[StartCombatRound] = $VAR prm; $VAR rnd; $VAR lvl; $VAR tgt; $VAR hp; $VAR save; $VAR roll;
-prm = $SA_PARAM_GET(); rnd = $GetCombatRound(); lvl = $SA_CHARACTER_GET("FieryLevel"); roll = $RANDOM(20) +# 1;
-tgt = $IndexOf($TargetContext()); hp = $GET_CHAR_HITPOINTS(tgt); save = $SA_CHARACTER_GET("FierySave");
-$IF ((rnd -# prm) ==# 3) {$RETURN $SET_CHAR_HITPOINTS(tgt,hp -# (lvl /# 2));};
-$IF ((rnd -# prm) ==# 4) {$IF (roll <=# save) {$SA_REMOVE(); $RETURN $SET_CHAR_HITPOINTS(tgt,hp -# lvl);};};
-$IF ((rnd -# prm) ==# 5) {$IF (roll <=# save) {$SA_REMOVE(); $RETURN $SET_CHAR_HITPOINTS(tgt,hp -# (lvl /# 2));};};
\(END)

\(BEGIN)
name = isFleeing
[AutoAction] = $RETURN "F" + $IndexOf($LEAST_DAMAGED_FRIENDLY());
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

\(BEGIN)
name = isFumbling
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()) {$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Fumbling "); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[GetAdjMaxMovement] = $RETURN "0";
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isGeasFlee
[AutoAction] = $RETURN "F" + $SA_PARAM_GET();
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Geased Fleeing"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
\(END)

\(BEGIN)
name = isGrowthAcid
[DoesSpellAttackSucceed] = $VAR tgt; $VAR hp; $VAR nm; $VAR item; $VAR spell;
-item = $SA_ITEM_GET("damageAcid"); spell = $SA_SPELL_GET("damageAcid");
-$IF (item != "-?-?-" || spell != "-?-?-")
-	{
-		tgt = $IndexOf($TargetContext()); hp = $RANDOM(8) +# 1; nm = $GET_CHAR_NAME(tgt);
-		$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) +# hp); $SET_CHAR_HITPOINTS(tgt,$GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt,$GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(nm,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,nm +" grows");
-		$RETURN "N";
-	};
\(END)

\(BEGIN)
name = isGrowthCold
[DoesSpellAttackSucceed] = $VAR tgt; $VAR hp; $VAR nm; $VAR item; $VAR spell;
-item = $SA_ITEM_GET("damageCold"); spell = $SA_SPELL_GET("damageCold");
-$IF (item != "-?-?-" || spell != "-?-?-")
-	{
-		tgt = $IndexOf($TargetContext()); hp = $RANDOM(8) +# 1; nm = $GET_CHAR_NAME(tgt);
-		$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) +# hp); $SET_CHAR_HITPOINTS(tgt,$GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt,$GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(nm,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,nm +" grows");
-		$RETURN "N";
-	};
\(END)

\(BEGIN)
name = isGrowthElectricity
[DoesSpellAttackSucceed] = $VAR tgt; $VAR hp; $VAR nm; $VAR item; $VAR spell;
-item = $SA_ITEM_GET("damageElectricity"); spell = $SA_SPELL_GET("damageElectricity");
-$IF (item != "-?-?-" || spell != "-?-?-")
-	{
-		tgt = $IndexOf($TargetContext()); hp = $RANDOM(8) +# 1; nm = $GET_CHAR_NAME(tgt);
-		$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) +# hp); $SET_CHAR_HITPOINTS(tgt,$GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt,$GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(nm,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,nm +" grows");
-		$RETURN "N";
-	};
\(END)

\(BEGIN)
name = isGrowthFire
[DoesSpellAttackSucceed] = $VAR tgt; $VAR hp; $VAR nm; $VAR item; $VAR spell;
-item = $SA_ITEM_GET("damageFire"); spell = $SA_SPELL_GET("damageFire");
-$IF (item != "-?-?-" || spell != "-?-?-")
-	{
-		tgt = $IndexOf($TargetContext()); hp = $RANDOM(8) +# 1; nm = $GET_CHAR_NAME(tgt);
-		$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) +# hp); $SET_CHAR_HITPOINTS(tgt,$GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt,$GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(nm,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,nm +" grows");
-		$RETURN "N";
-	};
\(END)

\(BEGIN)
name = isHeld
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Held"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"isHeld") != "-?-?-")
-	{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[GetItemTargetHitBonus] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 15;
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isHelpless
[CanCastSpells] = $RETURN "N";
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Helpless"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[GetAdjMaxMovement] = $RETURN "0";
\(END)

\(BEGIN)
name = isHolyDeafened
[CanCastSpells] = $VAR rdm;
-rdm = $RANDOM(2);
-$IF (rdm ==# 1) {$RETURN "N";};
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Deagened"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $VAR p5; $VAR p6;
-p5 = $GET_HOOK_PARAM(5) -# 2;
-p6 = $GET_HOOK_PARAM(6);
-$IF (p5 <=# p6) {$RETURN "N";};
[GetAdjMaxMovement] = $VAR p5;
-p5 = $SA_PARAM_GET(5);
-$RETURN p5 /# 4 *# 3;
[StartCombatRound] = $VAR exp;
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() ># exp){$SA_REMOVE();$RETURN;};
\(END)

\(BEGIN)
name = isHolyStunned
[CanCastSpells] = $RETURN "N";
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Stunned"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $VAR p5; $VAR p6;
-p5 = $GET_HOOK_PARAM(5) -# 4;
-p6 = $GET_HOOK_PARAM(6);
-$IF (p5 <=# p6) {$RETURN "N";};
[GetAdjMaxMovement] = $VAR p5;
-p5 = $SA_PARAM_GET(5);
-$RETURN p5 /# 2;
[StartCombatRound] = $VAR exp;
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() ># exp){$SA_REMOVE();$RETURN;};
\(END)

\(BEGIN)
name = isHugged
[CanCastSpells] = $VAR com; // combatant
-com = $IndexOf($CombatantContext());
-$IF ($GET_CHAR_HITPOINTS(com) <# 1)  {$SA_REMOVE(); $RETURN;};
-$RETURN "N";
[GetAdjMaxMovement] = $RETURN 0;
\(END)

\(BEGIN)
name = isImmuneAcid
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Acid"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR immune;
-item = $SA_ITEM_GET("damageAcid"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneAcid");
-$IF (item == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR spell;$VAR immune;
-spell = $SA_SPELL_GET("damageAcid"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneAcid");
-$IF (spell == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneCold
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Cold"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR immune;
-item = $SA_ITEM_GET("damageCold"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneCold");
-$IF (item == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR spell;$VAR immune;
-spell = $SA_SPELL_GET("damageCold"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneCold");
-$IF (spell == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneDB
[Dispel] = $SA_REMOVE();
[DoesSpellAttackSucceed] = $VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($SA_SPELL_GET("DragonBreath") != "-?-?-")
-	{$SET_HOOK_PARAM(5,$GET_CHAR_NAME(tgt) +" is unaffected");  $RETURN "N";};
\(END)

\(BEGIN)
name = isImmuneDisease
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Disease"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR immune;
-item = $SA_ITEM_GET("damageDisease"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneDisease");
-$IF (item == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR spell;$VAR immune;
-spell = $SA_SPELL_GET("damageDisease"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneDisease");
-$IF (spell == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneElectricity
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Electricity"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR immune;
-item = $SA_ITEM_GET("damageElectricity"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneElectricity");
-$IF (item == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR spell;$VAR immune;
-spell = $SA_SPELL_GET("damageElectricity"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneElectricity");
-$IF (spell == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneFear
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Fear"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR immune;
-item = $SA_ITEM_GET("damageFear"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneFear");
-$IF (item == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR spell;$VAR immune;
-spell = $SA_SPELL_GET("damageFear"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneFear");
-$IF (spell == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneFire
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Fire"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR immune;
-item = $SA_ITEM_GET("damageFire"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneFire");
-$IF (item == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR spell;$VAR immune;
-spell = $SA_SPELL_GET("damageFire"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneFire");
-$IF (spell == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneGas
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Gas"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR immune;
-item = $SA_ITEM_GET("damageGas"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneGas");
-$IF (item == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR spell;$VAR immune;
-spell = $SA_SPELL_GET("damageGas"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmuneGas");
-$IF (spell == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneNormalMissiles
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()) {$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Protected from Normal Missiles"); $SET_HOOK_PARAM( 6,"3"); $RETURN 1;
[Dispel] = $SA_REMOVE();
[ComputeDamage] = $VAR tgt; $VAR atk;
-tgt = $IndexOf($TargetContext()); atk = $IndexOf($AttackerContext());
-$IF ($VisualDistance(tgt,atk) ># 1) {$RETURN;};
-$IF ($SA_ITEM_GET("item_MagicalWeapon") != "-?-?-") {$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"isImmuneNormalMissiles") == "-?-?-") {$RETURN;};
-$IF (($SA_ITEM_GET("item_HurledWeapon") != "-?-?-") || (($SA_ITEM_GET("item_MissileWeapon") != "-?-?-")){$RETURN "N";};
\(END)

\(BEGIN)
name = isImmunePoison
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Poison"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR immune;
-item = $SA_ITEM_GET("damagePoison"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmunePoison");
-$IF (item == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR spell;$VAR immune;
-spell = $SA_SPELL_GET("damagePoison"); immune = $GET_CHARACTER_SA($TargetContext(), "isImmunePoison");
-$IF (spell == "-?-?-") {$IF (immune != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneSpells
[Dispel] = $SA_REMOVE();
[DoesSpellAttackSucceed] = $VAR spLvl; $VAR spAtk;
-spLvl = $GET_SPELL_Level($SpellContext());
-spAtk = $GET_SPELL_SA($SpellContext(),"spell_Attack");
-$IF (spLvl <=# 4){$IF (spAtk != "-?-?-"){$RETURN "N";};};
\(END)

\(BEGIN)
name = isImmuneSpellsMinor
[Dispel] = $SA_REMOVE();
[DoesSpellAttackSucceed] = $VAR spLvl; $VAR spAtk;
-spLvl = $GET_SPELL_Level($SpellContext());
-spAtk = $GET_SPELL_SA($SpellContext(),"spell_Attack");
-$IF (spLvl <=# 3){$IF (spAtk != "-?-?-"){$RETURN "N";};};
\(END)

\(BEGIN)
name = isImmuneWeapon
[ComputeDamage] = 
[DoesAttackSucceed] = $VAR item; $VAR slvr; $VAR iron; $VAR imm; $VAR vSlvr; 
-item = $SA_ITEM_GET("itemMagicalWeapon"); slvr = $SA_ITEM_GET("itemSilverWeapon"); iron = $SA_ITEM_GET("itemIronWeapon");
-imm = $GET_CHARACTER_SA($TargetContext(),"isImmuneWeapon); vSlvr = $GET_CHARACTER_SA($TargetContext(),"isVulnerableSilver);
-$IF ((vSlvr == "-?-?-") || ((vSlvr != "-?-?-") && (slvr == "-?-?-")) &&  (vIron == "-?-?-") || ((vIron != "-?-?-") && (iron == "-?-?-")))
-	{$IF (item == "-?-?-") [$RETURN "0";}; $IF (imm != "-?-?-") {$IF (item <=# imm) [$RETURN "0";};};};
\(END)

\(BEGIN)
name = isImmuneWeaponBludgeoning
[ComputeDamage] = $VAR item;$VAR imm;
-item = $SA_ITEM_GET("damageBludgeoning"); imm = $GET_CHARACTER_SA($TargetContext(), "isImmuneWeaponBludgeoning");
-$IF (item == "-?-?-") {$IF (imm != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR item;$VAR imm;
-item = $SA_ITEM_GET("damageBludgeoning"); imm = $GET_CHARACTER_SA($TargetContext(), "isImmuneWeaponBludgeoning");
-$IF (item == "-?-?-") {$IF (imm != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneWeaponPiercing
[ComputeDamage] = $VAR item;$VAR imm;
-item = $SA_ITEM_GET("damagePiercing"); imm = $GET_CHARACTER_SA($TargetContext(), "isImmuneWeaponPiercing");
-$IF (item == "-?-?-") {$IF (imm != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR item;$VAR imm;
-item = $SA_ITEM_GET("damagePiercing"); imm = $GET_CHARACTER_SA($TargetContext(), "isImmuneWeaponPiercing");
-$IF (item == "-?-?-") {$IF (imm != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isImmuneWeaponSlashing
[ComputeDamage] = $VAR item;$VAR imm;
-item = $SA_ITEM_GET("damageSlashing"); imm = $GET_CHARACTER_SA($TargetContext(), "isImmuneWeaponSlashing");
-$IF (item == "-?-?-") {$IF (imm != "-?-?-") {$RETURN 0; };};
[ComputeSpellDamage] = $VAR item;$VAR imm;
-item = $SA_ITEM_GET("damageSlashing"); imm = $GET_CHARACTER_SA($TargetContext(), "isImmuneWeaponSlashing");
-$IF (item == "-?-?-") {$IF (imm != "-?-?-") {$RETURN 0; };};
\(END)

\(BEGIN)
name = isInsectFlee
[AutoAction] = $RETURN "F" + $SA_PARAM_GET();
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Fleeing insects"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
\(END)

\(BEGIN)
name = isInvisible
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($AttackerContext(),"isInvisible") != "-?-?-")
-	{
-		$DELETE_CHARACTER_SA($AttackerContext(),"isInvisibleSpell");
-		$DELETE_COMBATANT_SA($AttackerContext(),"isInvisible");
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[IsValidTarget] = $IF ($SA_COMBATANT_GET("isSeeingInvisible") != "-?-?-"){$RETURN "Y";};
-$IF ($GET_CHARACTER_SA($TargetContext(),"isFaerieFire") != "-?-?-"){$RETURN;}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isInvisiblePotion
[CharDisplayStatus] = $IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{$SET_HOOK_PARAM(7,"Invisible, Potion"); $SET_HOOK_PARAM(6,""); $RETURN 1;};
[Dispel] = $SA_REMOVE();
[spawn] = $SET_COMBATANT_SA($CharacterContext(),"isInvisible",1);
\(END)

\(BEGIN)
name = isInvisibleRing
[CharDisplayStatus] = $IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{$SET_HOOK_PARAM(7,"Invisible, Ring"); $SET_HOOK_PARAM(6,""); $RETURN 1;};
[Dispel] = $SA_REMOVE();
[OnStartCombatantAction] = $SET_COMBATANT_SA($CharacterContext(),"isInvisible",1);
[spawn] = $SET_COMBATANT_SA($CharacterContext(),"isInvisibleRing",1);
-$SET_COMBATANT_SA($CharacterContext(),"isInvisible",1);
\(END)

\(BEGIN)
name = isInvisibleSpell
[CharDisplayStatus] = $IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{$SET_HOOK_PARAM(7,"Invisible, spell"); $SET_HOOK_PARAM(6,2); $RETURN 1;};
[Dispel] = $SA_REMOVE();
[spawn] = $SET_COMBATANT_SA($CharacterContext(),"isInvisible",1);
\(END)

\(BEGIN)
name = isInvisibleStalker
[IsValidTarget] = $IF ($SA_COMBATANT_GET("isSeeingInvisible") != "-?-?-"){$RETURN "Y";};
-$IF ($GET_CHARACTER_SA($TargetContext(),"isFaerieFire") != "-?-?-"){$RETURN;}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isInvisibleToAnimals
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Invisible to Animals"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[IsValidTarget] = $IF ($GET_ISANIMAL($AttackerContext()) <# 0){$RETURN "Y";};
-$IF ($SA_COMBATANT_GET("isSeeingInvisible") != "-?-?-") {$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isLichFear
[CanAim] = $RETURN "N";
[CanCastSpells] = $RETURN "N";
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Paralyzed with fear"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[ComputeDamage] = $VAR dmg; $VAR tgt;
-tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($TargetContext(),"isLichFear") != "-?-?-")
-	{
-		$SET_CHAR_ASL(tgt,"lichfear","");
-		$SET_HOOK_PARAM(5,$GET_CHAR_HITPOINTS(tgt) +# 10);
-		$RETURN $GET_HOOK_PARAM(5);
-	};
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"isLichFear") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[DrawMoveMenu] = $SET_HOOK_PARAM(1,0);
[GetAdjMaxMovement] = $DELETE_CHARACTER_SA($CharacterContext(),"isFastBoots");
-$RETURN 0;
[GetItemTargetHitBonus] = $DEBUG("ILF githb");
[IsCombatReady] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$RETURN "N";
\(END)

\(BEGIN)
name = isLightBlinded
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Blind in the light");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"IsLightBlinded") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 4);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isMassMorphed
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Morphed"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
\(END)

\(BEGIN)
name = isMirrored
[CanCastSpells] = $IF ($IS_AFFECTED_BY_SPELL($CharacterContext(),"Mirror Image") == "")
-  {$SA_REMOVE();};
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,$SA_PARAM_GET() + " mirror images"); $SET_HOOK_PARAM( 6,"");
-$RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $VAR remain;
-$IF ($GET_CHARACTER_SA($TargetContext(),"isMirrored") != "-?-?-")
-	{
-		remain = $SA_PARAM_GET();
-		$IF ($RANDOM(remain +# 1) !=# 0)
-			{  // Image targeted
-				$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-					{ // Removing image
-						$SA_PARAM_SET(remain -# 1);
-						$IF ($GET_CHARACTER_SA($TargetContext(),"isMirrored") <# 1)
-							{ // Images depleted
-								$SA_REMOVE();
-							};
-					};
-				$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);
-			};
-	};  // Caster targeted
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isMummyDiseased
[CanCastSpells] = $VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_PARTY_DAYS() >=# $SA_PARAM_GET())
-	{
-		$SA_PARAM_SET($GET_PARTY_DAYS() +# 30);
-		$MODIFY_CHAR_ATTRIBUTE(me,"CHA",-2, "MINUTES", 9999999, "Mummy Disease","MONSTER Disease");
-		$SET_CHARACTER_SA($CharacterContext(),"pcCHA",$GET_CHAR_CHA(me));
-		$SET_CHARACTER_SA($CharacterContext(),"rot",$GET_CHARACTER_SA($CharacterContext(),"rot") +# 17);
-		$IF ($RANDOM(100) <= $GET_CHARACTER_SA($CharacterContext(),"rot"))
-			{
-				$SET_CHAR_HITPOINTS(me,0); $SET_CHAR_STATUS(me,5);
-			};
-		$IF ($GET_CHAR_LIMITED_CHA(me) <# 6) {$SET_CHAR_STATUS(me,5);};
-	};
-$IF ($GET_CHAR_STATUS(me) ==# 2 && $GET_CHARACTER_SA($CharacterContext(),"isMummyRotting") == "-?-?-")
-	{$SET_CHARACTER_SA($CharacterContext(),"isMummyRotting",$GET_PARTY_TIME() +# 60);};
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Has Mummy Rot"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesSpellAttackSucceed] = $VAR dm;
-dm = $SA_SPELL_GET("DamageMagical");
-$IF ($SA_SOURCE_NAME() == "Heal" || dm == "cureDis"){$RETURN $SA_REMOVE();};
-$IF ((dm == "wound" && $SA_SPELL_GET("spell_Attack") == "-?-?-") || dm == "raise"){$RETURN "N";};
\(END)

\(BEGIN)
name = isMummyFear
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Paralyzed with fear"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"isParalyzed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[GetItemTargetHitBonus] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
[IsCombatReady] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET())
-	{
-		$SET_COMBATANT_SA($CombatantContext(),"isOverMummy","");
-		$SA_REMOVE();}; $RETURN;
-	};
-$RETURN "N";
\(END)

\(BEGIN)
name = isMummyRotting
[CanCastSpells] = $VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_PARTY_TIME() ># $SA_PARAM_GET())
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"isMummyDiseased"); $SA_REMOVE();
-		$SET_CHAR_HITPOINTS(me,0); $SET_CHAR_STATUS(me,5);
-	};
[DoesSpellAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isMummyDiseased") == "-?-?-" && $SA_SPELL_GET("DamageMagical") == "raise")
-	{ $SA_REMOVE(); $RETURN "Y";};
\(END)

\(BEGIN)
name = isOsyluthFear
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Paralyzed with fear"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"isParalyzed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[GetItemTargetHitBonus] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
[IsCombatReady] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET())
-	{
-		$SET_COMBATANT_SA($CombatantContext(),"isOverOsyluth","");
-		$SA_REMOVE(); $RETURN "1";
-	};
-$RETURN "N";
\(END)

\(BEGIN)
name = isPaladinImmuneDisease
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Immune to Disease"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[DoesSpellAttackSucceed] = $IF ($SA_SPELL_GET("damageDisease") == "-?-?-" || $SA_SPELL_GET("damageDisease") != "-?-?-"){$RETURN "N";};
\(END)

\(BEGIN)
name = isPaladinProtectedFromEvil
[CharDisplayStatus] = $SET_HOOK_PARAM(7,"Protected From Evil"); $SET_HOOK_PARAM(6,""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isPaladinProtectedFromEvil") != "-?-?-")
-	{
-		$IF ($GET_COMBATANT_SA($AttackerContext(),"homePlane") != "-?-?-")
- 			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);};
-		$IF ($AlignmentEvil($AttackerContext()))
-			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[SaveVsBW_Save] = $IF ($AlignmentEvil($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
[SaveVsPPDM_Save] = $IF ($AlignmentEvil($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
[SaveVsPP_Save] = $IF ($AlignmentEvil($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
[SaveVsRSW_Save] = $IF ($AlignmentEvil($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
[SaveVsSp_Save] = $IF ($AlignmentEvil($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
\(END)

\(BEGIN)
name = isParalyzationed
[CanCastSpells] = $RETURN "N";
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Paralyzed"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"isParalyzationed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";} $ELSE {$RETURN "N";};
[GetAdjMaxMovement] = $RETURN "0";
[GetItemTargetHitBonus] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isParalyzed
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Paralyzed"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"isParalyzed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[GetItemTargetHitBonus] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isPerson
Parameters = "brownies, dryads, dwarves, elves, gnolls, gnomes, goblins, half-elves, halflings, half-orcs, hobgoblins, humans, kobolds, lizard men, nixies, orcs, pixies, sprites, troglodytes";
\(END)

\(BEGIN)
name = isPetrified
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Petrified"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isPitFiendFear
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Paralyzed with fear"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"isParalyzed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
[GetItemTargetHitBonus] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
[IsCombatReady] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET())
-	{$SET_COMBATANT_SA($CombatantContext(),"isOverPitFiend",""); $SA_REMOVE(); $RETURN "1";};
-$RETURN "N";
\(END)

\(BEGIN)
name = isPlant
\(END)

\(BEGIN)
name = isPoisoned
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Poisoned");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

\(BEGIN)
name = isPraying
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Praying"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
\(END)

\(BEGIN)
name = isProtectedEvil
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()) {$RETURN $SA_REMOVE();};
-$IF ($GET_HOOK_PARAM(5) == "DISPLAY") {$SET_HOOK_PARAM( 7,"Protected from Evil"); $SET_HOOK_PARAM( 6,"");};
-$RETURN 1;
[Dispel] = $SA_REMOVE();
-$SkillAdj($TargetContext(),"Save Vs BR","protectedEvil","D","");
-$SkillAdj($TargetContext(),"Save Vs PP","protectedEvil","D","");
-$SkillAdj($TargetContext(),"Save Vs PPDM","protectedEvil","D","");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedEvil","D","");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedEvil","D","");
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isProtectedEvil") != "-?-?-")
-	{
-		$IF ($GET_COMBATANT_SA($AttackerContext(),"Summoned") != "-?-?-") {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);};
-		$IF ($AlignmentEvil($AttackerContext())) {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = isProtectedGood
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$IF ($GET_HOOK_PARAM(5) == "DISPLAY") {$SET_HOOK_PARAM( 7,"Protected from Good"); $SET_HOOK_PARAM( 6,"");}; $RETURN 1;
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"isProtectedGood") != "-?-?-")
-	{
-		$IF ($GET_COMBATANT_SA($AttackerContext(),"Summoned") != "-?-?-") {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);};
-		$IF ($AlignmentGood($AttackerContext())) {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";} $ELSE {$RETURN "N";};
[SaveVsBW_Save] = $IF ($AlignmentGood($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
[SaveVsPPDM_Save] = $IF ($AlignmentGood($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
[SaveVsPP_Save] = $IF ($AlignmentGood($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
[SaveVsRSW_Save] = $IF ($AlignmentGood($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
[SaveVsSp_Save] = $IF ($AlignmentGood($AttackerContext())){$RETURN $GET_HOOK_PARAM(0) -# 2;};
\(END)

\(BEGIN)
name = isReduced
[CanCastSpells] = $VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_PARTY_TIME() ># $GET_CHARACTER_SA($CharacterContext(),"reduced"))
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"reduced");
-		$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-		$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-		$SA_REMOVE();
-	};
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Reduced"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[Dispel] = $VAR me;
-me = $IndexOf($CharacterContext());
-$DELETE_CHARACTER_SA($CharacterContext(),"reduced");
-$REMOVE_CHAR_MODIFICATION(me,"SPELL Reduce *");
-$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-$SA_REMOVE();
[Dispel reduced] = $VAR me;
-me = $IndexOf($CharacterContext());
-$DELETE_CHARACTER_SA($CharacterContext(),"reduced");
-$REMOVE_CHAR_MODIFICATION(me,"SPELL Reduce *");
-$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-$SA_REMOVE();
[GetAdjMaxMovement] = $RETURN $GET_HOOK_PARAM(5) /# 2;
\(END)

\(BEGIN)
name = isReflecting
[RedirectSpell] = $VAR atk; $VAR tgt; $VAR cName; $VAR tName; $VAR list; $VAR num; $VAR reflect;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); cName = $GET_CHAR_NAME (atk); tName = $GET_CHAR_NAME (tgt);
-list = "$its gaze|monsterCharmGaze$its gaze|monsterConfusionGaze$its gaze|monsterPetrifyGaze";
-num = $DelimitedStringCount(list);
-$WHILE (num ># 0)
-	{
-		num = num -# 1;
-		reflect = $DelimitedStringSubstring(list,num);
-		$IF ($SpellContext() == reflect)
-			{
-				$SET_HOOK_PARAM(5,$IndexOf($AttackerContext()));
-				$SET_HOOK_PARAM(6, tName + " reflects " + reflect  + " back at " + cName);
-			};
-	};
\(END)

\(BEGIN)
name = isResistantAcid
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Acid Resistant"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR resist;
-item = $SA_ITEM_GET("damageAcid"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantAcid");
-$IF (item == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
[ComputeSpellDamage] = $VAR spell;$VAR resist;
-spell = $SA_SPELL_GET("damageAcid"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantAcid");
-$IF (spell == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
\(END)

\(BEGIN)
name = isResistantCold
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Cold Resistant"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR resist;
-item = $SA_ITEM_GET("damageCold"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantCold");
-$IF (item == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
[ComputeSpellDamage] = $VAR spell;$VAR resist;
-spell = $SA_SPELL_GET("damageCold"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantCold");
-$IF (spell == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
\(END)

\(BEGIN)
name = isResistantElectricity
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Electricity Resistant"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR resist;
-item = $SA_ITEM_GET("damageElectricity"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantElectricity");
-$IF (item == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
[ComputeSpellDamage] = $VAR spell;$VAR resist;
-spell = $SA_SPELL_GET("damageElectricity"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantElectricity");
-$IF (spell == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
\(END)

\(BEGIN)
name = isResistantFire
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Fire Resistant"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[ComputeDamage] = $VAR item;$VAR resist;
-item = $SA_ITEM_GET("damageFire"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantFire");
-$IF (item == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
[ComputeSpellDamage] = $VAR spell;$VAR resist;
-spell = $SA_SPELL_GET("damageFire"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantFire");
-$IF (spell == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
\(END)

\(BEGIN)
name = isResistantGas
[ComputeDamage] = $VAR item;$VAR resist;
-item = $SA_ITEM_GET("damageGas"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantGas");
-$IF (item == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
[ComputeSpellDamage] = $VAR spell;$VAR resist;
-spell = $SA_SPELL_GET("damageGas"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantGas");
-$IF (spell == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
\(END)

\(BEGIN)
name = isResistantPoison
[ComputeDamage] = $VAR item;$VAR resist;
-item = $SA_ITEM_GET("damagePoison"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantPoison");
-$IF (item == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
[ComputeSpellDamage] = $VAR spell;$VAR resist;
-spell = $SA_SPELL_GET("damagePoison"); resist = $GET_CHARACTER_SA($TargetContext(), "isResistantPoison");
-$IF (spell == "-?-?-") {$IF (resist != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2; };};
\(END)

\(BEGIN)
name = isRingImmuneElectricity
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Immune to Electricity"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[ComputeDamage] = $VAR immune; immune = $SA_ITEM_GET("damageElectricity"); $IF (immune != "-?-?-"){$RETURN 0;};
[ComputeSpellDamage] = $VAR immune; immune = $SA_ITEM_GET("damageElectricity"); $IF (immune != "-?-?-"){$RETURN 0;};
\(END)

\(BEGIN)
name = isRingResistantCold
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Cold Resistant"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[ComputeDamage] = $VAR resist; resist = $SA_ITEM_GET("damageCold"); $IF (resist != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) /# 2;};
[ComputeSpellDamage] = $VAR resist; resist = $SA_ITEM_GET("damageCold"); $IF (resist != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) /# 2;};
\(END)

\(BEGIN)
name = isRingResistantFire
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Fire Resistant"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[ComputeDamage] = $VAR resist; resist = $SA_ITEM_GET("damageFire"); $IF (resist != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) /# 2;};
[ComputeSpellDamage] = $VAR resist; resist = $SA_ITEM_GET("damageFire"); $IF (resist != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) /# 2;};
\(END)

\(BEGIN)
name = isRingWizardry
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, "Wearing Wizard Ring"); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
\(END)

\(BEGIN)
name = isSeeingIllusions
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Sees illusions"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
\(END)

](BEGIN)
name = isSeeingInvisible
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Seeing Invisible"); $SET_HOOK_PARAM( 6,""); $RETURN "1";
\(END)

\(BEGIN)
name = isShielded
[CharDisplayStatus] = $IF ($GET_PARTY_TIME() ># $SA_PARAM_GET()){$SA_REMOVE();};
-$IF ($GET_HOOK_PARAM(5) == "DISPLAY") {$SET_HOOK_PARAM( 7,"Shield"); $SET_HOOK_PARAM( 6,"1");}; $RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $VAR atk; $VAR tgt; $VAR par5;
-$IF ($GET_CHARACTER_SA($TargetContext(),"isShielded") == "-?-?-"){$RETURN;};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); par5 = $GET_HOOK_PARAM(5);
-$IF ($SA_ITEM_GET("item_HurledWeapon") != "-?-?-" && $VisualDistance(atk,tgt) ># 1) {$SET_HOOK_PARAM(5,par5 -# 8);}
-$ELSE
-	{
-		$IF ($SA_ITEM_GET("item_MissileWeapon") != "-?-?-"){$SET_HOOK_PARAM(5,$GET_HOOK_PARAM(5) -# 7);}
-		$ELSE {$SET_HOOK_PARAM(5,par5 -# 6);};
-	};
-$IF ($GET_HOOK_PARAM(5) <# $GET_HOOK_PARAM(6)){$RETURN "N";};
[DoesSpellAttackSucceed] = $IF ($SA_SOURCE_NAME() == ("Magic Missile" || "Magic Missile|Ranger")){$RETURN "N";};
\(END)

\(BEGIN)
name = isSilenced
[CanCastSpells] = $VAR exp; // expiration time
-exp = $SA_PARAM_GET(); $IF ($GET_PARTY_TIME() >=# exp){$SA_REMOVE();}; $RETURN "N";
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Silenced"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
\(END)

\(BEGIN)
name = isSleeping
[CanCastSpells] = $RETURN "N";
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Sleeping"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $RETURN "Y";
[GetAdjMaxMovement] = $RETURN 0;
[GetItemTargetHitBonus] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 15;
[IsCombatReady] = $RETURN "N";
\(END)

\(BEGIN)
name = isSleepResistant
\(END)

\(BEGIN)
name = isSleepResistantMin
\(END)

\(BEGIN)
name = isSlow
[Dispel] = $SA_REMOVE();
[GetAdjMaxMovement] = $VAR exp;
-exp = $SA_PARAM_GET(); $IF ($GET_PARTY_TIME() >=# exp){$SA_REMOVE();}; $RETURN $GET_HOOK_PARAM(5) /# 2;
[GetNumberOfAttacks] = $VAR attackNum;
-attackNum = $GET_HOOK_PARAM(5);
-$IF ((attackNum %# 2) ==# 0){$RETURN attackNum /# 2;}
-$ELSE
-	{
-		$IF (($GetCombatRound() %# 2) ==# 0){$RETURN (attackNum +# 1) /# 2;}
-		$ELSE{$RETURN (attackNum -# 1) /# 2;};
-	};
\(END)

\(BEGIN)
name = isSlowedPoison
[CanCastSpells] = $VAR exp; $VAR time; $VAR chr; $VAR hp;
-exp = $SA_PARAM_GET(); time = $GET_PARTY_TIME(); chr = $IndexOf($CharacterContext()); hp = $GET_CHAR_HITPOINTS(chr);
-$IF (time ># exp) {$SA_REMOVE(); $SET_CHAR_STATUS(chr,2); $SET_CHAR_HITPOINTS(chr,-11); $RETURN;};
-$SET_CHAR_STATUS(chr,1); $IF  (hp <# 1){$SET_CHAR_HITPOINTS(chr,1);};
\(END)

\(BEGIN)
name = isSlowingAcid
[GetAdjMaxMovement] = $VAR item;$VAR spell;$VAR slow;
-item = $SA_ITEM_GET("damageAcid"); spell = $SA_SPELL_GET("damageAcid");
-slow = $GET_CHARACTER_SA($TargetContext(), "isSlowingAcid");
-$IF ((item == "-?-?-") || (spell == "-?-?-")){$IF (slow != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2;};};
\(END)

\(BEGIN)
name = isSlowingCold
[GetAdjMaxMovement] = $VAR item;$VAR spell;$VAR slow;
-item = $SA_ITEM_GET("damageCold"); spell = $SA_SPELL_GET("damageCold");
-slow = $GET_CHARACTER_SA($TargetContext(), "isSlowingCold");
-$IF ((item == "-?-?-") || (spell == "-?-?-")){$IF (slow != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2;};};
\(END)

\(BEGIN)
name = isSlowingElectricity
[GetAdjMaxMovement] = $VAR item;$VAR spell;$VAR slow;
-item = $SA_ITEM_GET("damageElectricity"); spell = $SA_SPELL_GET("damageElectricity");
-slow = $GET_CHARACTER_SA($TargetContext(), "isSlowingElectricity");
-$IF ((item == "-?-?-") || (spell == "-?-?-")){$IF (slow != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2;};};
\(END)

\(BEGIN)
name = isSlowingFire
[GetAdjMaxMovement] = $VAR item;$VAR spell;$VAR slow;
-item = $SA_ITEM_GET("damageFire"); spell = $SA_SPELL_GET("damageFire");
-slow = $GET_CHARACTER_SA($TargetContext(), "isSlowingFire");
-$IF ((item == "-?-?-") || (spell == "-?-?-")){$IF (slow != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 2;};};
\(END)

\(BEGIN)
name = isSnake
\(END)

\(BEGIN)
name = isSnakeCharmed
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Charmed"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[GetAdjMaxMovement] = $RETURN "0";
[GetItemTargetHitBonus] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 15;
[IsCombatReady] = $VAR exp; exp = $SA_PARAM_GET(); $IF ($GET_PARTY_TIME() >=# exp){$SA_REMOVE();}; $RETURN "N";
\(END)

\(BEGIN)
name = isStinkingCloudy
[CanCastSpells] = $RUN_AREA_SE_SCRIPTS("StinkAdjust", $IndexOf($CharacterContext()));
-$RETURN $GET_HOOK_PARAM(6);
[CharDisplayStatus] = $RUN_AREA_SE_SCRIPTS("StinkingCloudy", $IndexOf($CharacterContext()));
-$SET_HOOK_PARAM( 7,"Coughing"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
\(END)

\(BEGIN)
name = isStinkingStuck
[CharDisplayStatus] = $RUN_AREA_SE_SCRIPTS("StinkingStuck", $IndexOf($CharacterContext()));
-$SET_HOOK_PARAM( 7,"Stuck"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[ComputeDamage] = $IF ($GET_COMBATANT_SA($TargetContext(),"isStinkingStuck") != "-?-?-")
-  {$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext()));};
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $IF ($GET_COMBATANT_SA($TargetContext(),"isStinkingStuck") != "-?-?-") {$RETURN "Y";};
[IsCombatReady] = $RUN_AREA_SE_SCRIPTS("StinkAdjust", $IndexOf($CharacterContext())); $RETURN $GET_HOOK_PARAM(6);
\(END)

\(BEGIN)
name = isStunned
[CanCastSpells] = $RETURN "N";
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Stunned"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[Dispel] = $SA_REMOVE();
[GetAdjMaxMovement] = $VAR exp; $VAR rnd;
-exp = $SA_PARAM_GET(); rnd = $GetCombatRound(); $IF (rnd >=# exp){$SA_REMOVE();$RETURN;}; $RETURN "0";
[IsCombatReady] = $VAR exp; $VAR rnd;
-exp = $SA_PARAM_GET(); rnd = $GetCombatRound(); $IF (rnd >=# exp){$SA_REMOVE();$RETURN;}; $RETURN "N";
\(END)

\(BEGIN)
name = isSweeping
[CombatSpecialAction] = $VAR damage; $VAR distance; $VAR atk; $VAR tgt;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($AttackerContext(),"isInvisible") != "-?-?-")
-	{
-		$DELETE_CHARACTER_SA($AttackerContext(),"isInvisibleSpell");
-		$DELETE_COMBATANT_SA($AttackerContext(),"isInvisible");
-	};
-$IF (tgt ==# -#2){$SET_HOOK_PARAM(5,"Sweeps");$RETURN;}; // first call
-$IF (tgt ==# -#1){$SET_HOOK_PARAM(5,"Sweeps");$RETURN;}; // last call
-distance = $VisualDistance(atk, tgt); damage = $ComputeAttackDamage(atk, tgt);
-$IF(distance ># 1) {$RETURN;};
-$IF ($GET_MONSTERTYPE_SA($GET_CHAR_NAME(tgt),"monster_Swept") != "-?-?-")
-	{$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) -# damage);};
\(END)

\(BEGIN)
name = isSymbolHopelessnessed
[AutoAction] = $VAR atk;
-atk = $SA_PARAM_GET();
-$RETURN "F" + atk;
\(END)

\(BEGIN)
name = isSymbolHopelessnessedDone
[StartCombatRound] = $VAR exp;
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() ># exp)
-	{$SA_REMOVE(); $DELETE_COMBATANT_SA($CombatantContext(),"IsSymbolHopelessnessed");};
\(END)

\(BEGIN)
name = isSymbolPained
[DoesAttackSucceed] = $VAR p5;
-p5 = $GET_HOOK_PARAM(5);
-$RETURN p5 -# 4;
[StartCombatRound] = $VAR exp; $VAR tgt;
-exp = $SA_PARAM_GET(); tgt = $IndexOf($TargetContext());
-$IF ($GET_PARTY_TIME() ># exp){$SA_REMOVE();$REMOVE_CHAR_MODIFICATION(tgt,"Symbol of Pain");};
\(END)

\(BEGIN)
name = isSymbolPersuaded
[StartCombatRound] = $VAR me; $VAR exp; $VAR sd; $VAR fsd;
-me = $IndexOf($CombatantContext());
-exp = $SA_PARAM_GET();
-sd = $GET_COMBATANT_SA($Myself(),"side")
-$IF (sd ==# 1){fsd = "2";};
-$IF (sd ==# 2){fsd = "1";};
-$IF ($GET_PARTY_TIME() ># exp){$SA_REMOVE();$SetFriendly(me,fsd);};
\(END)

\(BEGIN)
name = isVulnerableAcid
[ComputeDamage] = $VAR item;$VAR vuln;
-item = $SA_ITEM_GET("damageAcid"); vuln = $GET_CHARACTER_SA($TargetContext(),"isVulnerableAcid");
-$IF (item == "-?-?-"){$IF (vuln != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) *# 2;};};
[ComputeSpellDamage] = $VAR spell;$VAR vuln;
-spell = $SA_SPELL_GET("damageAcid"); vuln = $GET_CHARACTER_SA($TargetContext(),"isVulnerableAcid");
-$IF (spell == "-?-?-"){$IF (vuln != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) *# 2;};};
\(END)

\(BEGIN)
name = isVulnerableCold
[ComputeDamage] = $VAR item;$VAR vuln;
-item = $SA_ITEM_GET("damageCold"); vuln = $GET_CHARACTER_SA($TargetContext(),"isVulnerableCold");
-$IF (item == "-?-?-"){$IF (vuln != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) *# 2;};};
[ComputeSpellDamage] = $VAR spell;$VAR vuln;
-spell = $SA_SPELL_GET("damageCold"); vuln = $GET_CHARACTER_SA($TargetContext(),"isVulnerableCold");
-$IF (spell == "-?-?-"){$IF (vuln != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) *# 2;};};
\(END)

\(BEGIN)
name = isVulnerableElectricity
[ComputeDamage] = $VAR item;$VAR vuln;
-item = $SA_ITEM_GET("damageElectricity"); vuln = $GET_CHARACTER_SA($TargetContext(),"isVulnerableElectricity");
-$IF (item == "-?-?-"){$IF (vuln != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) *# 2;};};
[ComputeSpellDamage] = $VAR spell;$VAR vuln;
-spell = $SA_SPELL_GET("damageElectricity"); vuln = $GET_CHARACTER_SA($TargetContext(),"isVulnerableElectricity");
-$IF (spell == "-?-?-"){$IF (vuln != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) *# 2;};};
\(END)

\(BEGIN)
name = isVulnerableFire
[ComputeDamage] = $VAR item;$VAR vuln;
-item = $SA_ITEM_GET("damageFire"); vuln = $GET_CHARACTER_SA($TargetContext(),"isVulnerableFire");
-$IF (item == "-?-?-"){$IF (vuln != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) *# 2;};};
[ComputeSpellDamage] = $VAR spell;$VAR vuln;
-spell = $SA_SPELL_GET("damageFire"); vuln = $GET_CHARACTER_SA($TargetContext(),"isVulnerableFire");
-$IF (spell == "-?-?-"){$IF (vuln != "-?-?-"){$RETURN $GET_HOOK_PARAM(5) *# 2;};};
\(END)

\(BEGIN)
name = isWebbed
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Stuck in Webbing");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
[ComputeDamage] = $RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
[Dispel] = $SA_REMOVE();
[DoesAttackSucceed] = $VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "fire") 
-	{
-		$SA_REMOVE();
-		$DELETE_CHARACTER_SA($Myself(),"IsWebbedTime");
-	};
[DoesSpellAttackSucceed] = $VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "fire")
-	{
-		$SA_REMOVE();
-		$DELETE_CHARACTER_SA($Myself(),"IsWebbedTime");
-	};
[GetAdjMaxMovement] = $RETURN "0";
[IsCombatReady] = $VAR exp; $VAR chr; $VAR str; $VAR rnd;
-exp = $SA_PARAM_GET();
-chr = $MyIndex();
-str = $GET_CHAR_LIMITED_STR(chr);
-rnd = $SA_CHARACTER_GET("IsWebbedTime");
-$IF (str ># 12 && str <# 18) 
-	{
-		$IF ($GET_PARTY_TIME() >=# (rnd +# 10))
-			{
-				$SA_REMOVE();
-				$DELETE_CHARACTER_SA($Myself(),"IsWebbedTime");
-				$RETURN "Y";
-			};
-	};
-$IF (str ># 17) 

-	{
-		$IF ($GET_PARTY_TIME() >=# (rnd +# 1))
-			{
-				$SA_REMOVE();
-				$DELETE_CHARACTER_SA($Myself(),"IsWebbedTime");
-				$RETURN "Y";
-			};
-	};
-$IF ($GET_PARTY_TIME() >=# exp) {$SA_REMOVE(); $RETURN "Y";}
-$ELSE {$RETURN "N";};
[StartCombatRound] = $VAR time; $VAR now; $VAR n; $VAR rnd; $VAR tgt;
-time = $SA_CHARACTER_GET("IsWebbedTime");
-now = $GET_PARTY_TIME();
-n = "10";
-rnd = $RANDOM(20);
-tgt = $MyIndex();
-$IF (now -# time ># n)
-	{
-		$IF (((now -# time) %# n ==# 0) && (rnd ==# 0))
-			{
-				$SET_CHAR_HITPOINTS(tgt,-11);
-				$SET_CHAR_STATUS(tgt,"2");
-	};
\(END)

\(BEGIN)
name = isWithered
[DoesAttackSucceed]= $VAR p5;
-p5 = $GET_HOOK_PARAM(5);
-$RETURN p5 -# 4;
\(END)
// this represents the withering of the weapon hand or arm

\(BEGIN)
name = itemAntidote
[InvokeSpellOnTarget] = $VAR tgt;
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(), "isPoisoned") == "-?-?-"){$RETURN;};
-$DELETE_CHARACTER_SA($CharacterContext(),"isPoisoned");
-$IF ($GET_CHAR_HITPOINTS(tgt) <=# 0) {$SET_CHAR_HITPOINTS(tgt, "1"); $SET_CHAR_STATUS(tgt, "0");};
\(END)

\(BEGIN)
name = itemBootsOfSpeed
[OnReady] = $SET_CHARACTER_SA($CharacterContext(),"isFastBoots","1");
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(),"isFastBoots");
\(END)

\(BEGIN)
name = itemCloakOfDisplacement
[OnReady] = $SET_CHARACTER_SA($CharacterContext(),"isCloakDisplaced",1);
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(),"isCloakDisplaced");
\(END)

\(BEGIN)
name = itemCombatAim
[CanAim] = $VAR p5;
-$IF ($GET_HOOK_PARAM(6))
-	{p5 = $GET_HOOK_PARAM(5); $IF(p5 == "Bow" || p5 ==  "Crossbow" || p5 ==  "Sling (no ammo needed)"){$RETURN "N";};};
\(END)

\(BEGIN)
name = itemDrowEquipment
[itemDrowEquipment] = $TAKE_CHAR_ITEM($CharacterContext(), $ItemContext());
-$RETURN "2";
\(END)

\(BEGIN)
name = itemFineLongBow
[DoesAttackSucceed] = $VAR par6; $VAR param;
-par6 = $GET_HOOK_PARAM(6); param = $SA_PARAM_GET(); $SET_HOOK_PARAM(6, par6 -# param);
\(END)

\(BEGIN)
name = itemGauntletsOgrePower
[OnReady] = $VAR tgt; $VAR str; $VAR strMod;
-tgt = $IndexOf($CharacterContext()); str = $GET_CHAR_LIMITED_STR(tgt); strMod = $GET_CHAR_LIMITED_STRMOD(tgt);
-$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",18 -# str, "MINUTES", 999999999, "Ogre Strength","ITEM Ogre Strength");
-$IF (strMod ># 0) {$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",100 -# strMod, "MINUTES", 999999999, "","ITEM Ogre Strength");};
[OnUnReady] = $VAR tgt; tgt = $IndexOf($CharacterContext()); $REMOVE_CHAR_MODIFICATION(tgt,"ITEM Ogre Strength");
\(END)

\(BEGIN)
name = itemGirdleGiantStrength
[OnReady] = $VAR tgt; $VAR str; $VAR strMod;
-tgt = $IndexOf($Myself()); str = $GET_CHAR_LIMITED_STR(tgt); strMod = $GET_CHAR_LIMITED_STRMOD(tgt);
-$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",$SA_PARAM_GET() -# str,"MINUTES",999999999,"Giant Strength","ITEM Giant Strength");
-$IF (strMod ># 0) {$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",-strMod,"MINUTES",999999999,"","ITEM Giant Strength");};
[OnUnReady] = $VAR tgt; tgt = $IndexOf($Myself()); $REMOVE_CHAR_MODIFICATION(tgt,"ITEM Giant Strength");
\(END)

\(BEGIN)
name = itemHolyWater
\(END)

\(BEGIN)
name = itemHurledWeapon
[ComputeDamage] = $VAR par0; $VAR par5; $VAR dmg; $VAR atk; $VAR tgt;
-par0 = $GET_HOOK_PARAM(0); par5 = $GET_HOOK_PARAM(5); dmg = par0; $IF (dmg == ""){dmg = par5;};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$IF ($VisualDistance(atk,tgt) <# 2) {dmg = dmg +# $GET_CHAR_DAMAGEBONUS(atk);}; $RETURN dmg;
[DoesAttackSucceed] = $VAR atk; $VAR par5; $VAR par6; $VAR bonus;
-atk = $IndexOf($AttackerContext()); par5 = $GET_HOOK_PARAM(5); par6 = $GET_HOOK_PARAM(6); bonus = $GET_CHAR_HITBONUS(atk);
-$IF ($VisualDistance(atk,$IndexOf($TargetContext())) <# 2) {$SET_HOOK_PARAM(6,par6 +# bonus);};
-$IF (par5 >=# par6){$RETURN "Y";} $ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = itemLongSwordVsGiants
[ComputeDamage] = $VAR tgt; $VAR par5; $VAR nm;
-tgt = $IndexOf($TargetContext()); par5 = $GET_HOOK_PARAM(5); nm = $GET_CHAR_NAME(tgt);
-$IF ($GET_ISGIANT($TargetContext())){$SET_HOOK_PARAM(5,(par5 *# 2) +# 1);};
-$IF ($GET_MONSTERTYPE_SA(nm,"subGiant") != "-?-?-"){$SET_HOOK_PARAM(5,par5 +# 1);};
[DoesAttackSucceed] = $VAR tgt; $VAR nm; $VAR par5; $VAR par6;
-tgt = $IndexOf($TargetContext()); nm = $GET_CHAR_NAME(tgt); par5 = $GET_HOOK_PARAM(5); par6 = $GET_HOOK_PARAM(6);
-$SET_HOOK_PARAM(7,2);
-$IF ($GET_MONSTERTYPE_SA(nm,"subGiant") != "-?-?-" || $GET_ISGIANT($TargetContext()))
-	{ $SET_HOOK_PARAM(6,par6 -# 1); $SET_HOOK_PARAM(7,3);};
-$IF (par5 >=# par6){$RETURN "Y";} $ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = itemMagicalWeapon
[ComputeDamage] = $VAR wpn; $VAR adj;
-wpn = $GET_CHAR_Ready($AttackerContext(), "WEAPON", 0);
-$IF ($GET_ITEM_SA(wpn,"itemFineWeapon") != "-?-?-") {adj = $GET_CHAR_DAMAGEBONUS($IndexOf($AttackerContext()));};
-$SET_HOOK_PARAM(5,$GET_HOOK_PARAM(5) +# adj);
[DoesAttackSucceed] = $VAR atk; $VAR adj; $VAR list; $VAR wpn;
-atk = $IndexOf($AttackerContext()); list = "$-3$-3$-3$-3$-2$-1$0$0$0$0$0$0$0$0$0$0$1$2$3$3$3$4$4$4$5$5";
-adj = $DelimitedStringSubstring(list, $GET_CHAR_LIMITED_DEX(atk)); wpn = $GET_CHAR_Ready($AttackerContext(), "WEAPON", 0);
-$IF ($GET_ITEM_SA(wpn,"itemFineWeapon") != "-?-?-") {adj = adj +# $GET_CHAR_HITBONUS(atk);};
-$SET_HOOK_PARAM(6, $GET_HOOK_PARAM(6) -# adj); $IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";} $ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = itemMissileWeapon
[ComputeDamage] = $VAR atk; $VAR wpn; $VAR adj;
-atk = $IndexOf($AttackerContext()); wpn = $GET_CHAR_Ready($AttackerContext(), "WEAPON", 0);
-$IF ($GET_ITEM_SA(wpn,"item_FineWeapon") != "-?-?-") {adj = $GET_CHAR_DAMAGEBONUS(atk);};
-$SET_HOOK_PARAM(5,$GET_HOOK_PARAM(5) +# adj);
[DoesAttackSucceed] = $VAR atk; $VAR adj; $VAR list; $VAR wpn;
-atk = $IndexOf($AttackerContext()); list = "$-3$-3$-3$-3$-2$-1$0$0$0$0$0$0$0$0$0$0$1$2$3$3$3$4$4$4$5$5";
-adj = $DelimitedStringSubstring(list,$GET_CHAR_DEX(atk)); wpn = $GET_CHAR_Ready($AttackerContext(), "WEAPON", 0);
-$IF ($GET_ITEM_SA(wpn,"item_FineWeapon") != "-?-?-"){adj = adj +# $GET_CHAR_HITBONUS(atk);};
-$SET_HOOK_PARAM(6, $GET_HOOK_PARAM(6) -# adj); $IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";};
Parameters = "1 - arrow, 2 - bolt, 3 - dart, 4 - javelin/spear, 5 - other";
\(END)

\(BEGIN)
name = itemNoisy
[CanReady] = $IF ($GET_COMBATANT_SA($CharacterContext(),"isSilenced") != "-?-?-"){$RETURN "N";};
\(END)

\(BEGIN)
name = itemPeriapt
[OnReady] = $SET_CHARACTER_SA($CharacterContext(), "isImmuneDisease", "1");
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(),"isImmuneDisease");
\(END)

\(BEGIN)
name = itemPoison
DoesAttackSucceed = $VAR tgt; $VAR time; $VAR par5; $VAR par6;
-tgt = $IndexOf($TargetContext()); time = $GET_PARTY_TIME(); par5 = $GET_HOOK_PARAM(5); par6 = $GET_HOOK_PARAM(6);
-$IF ($SA_CHARACTER_GET("isImmunePoison") != "-?-?-"){$RETURN;};
-$IF ($SA_CHARACTER_GET("isProtectedPoisonCaster") != "-?-?-"){$RETURN;};
-$IF ($SA_CHARACTER_GET("isProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-$IF (par5 ># par6)
-	{$SET_CHARACTER_SA($TargetContext(),"isPoisoned",time); $SET_CHAR_STATUS(tgt,2); $SET_CHAR_HITPOINTS(tgt,"-11");};
\(END)

\(BEGIN)
name = itemPotion
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
[ExamineOrWhatever] = $VAR char; $VAR item; $VAR newItem; $VAR rndm;
-char = $IndexOf($CharacterContext()); item = "Potion"; newItem = "Empty Bottle"; rndm = $RANDOM(4) +# $RANDOM(4) +# 4;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_HITPOINTS(char, $GET_CHAR_HITPOINTS(char) +# rndm);
-		$IF ($GET_CHAR_HITPOINTS(char) ># $GET_CHAR_MAXHITPOINTS(char)) {$SET_CHAR_HITPOINTS(char,$GET_CHAR_MAXHITPOINTS(char));};
-	};
\(END)

\(BEGIN)
name = itemPotion1
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" ); $SET_HOOK_PARAM( 6, 0 ); $RETURN "Y";
[ExamineOrWhatever] = $VAR char; $VAR item; $VAR newItem; $VAR rndm;
-char = $IndexOf($CharacterContext()); item = "Potion|1";
-newItem = "Potion|1a"; rndm = $RANDOM(4) +# $RANDOM(4) +# 4;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_HITPOINTS(char, $GET_CHAR_HITPOINTS(char) +# rndm);
-		$IF ($GET_CHAR_HITPOINTS(char) ># $GET_CHAR_MAXHITPOINTS(char))
-			{
-				$SET_CHAR_HITPOINTS(char,$GET_CHAR_MAXHITPOINTS(char));
-			};
-	};
\(END)

\(BEGIN)
name = itemPotion1a
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
[ExamineOrWhatever] = $VAR char;
-$VAR item;
-$VAR newItem;
-$VAR rndm;
-char = $IndexOf($CharacterContext());
-item = "Potion|1a";
-newItem = "Potion|1b";
-rndm = $RANDOM(4) +# $RANDOM(4) +# 4;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_HITPOINTS(char, $GET_CHAR_HITPOINTS(char) +# rndm);
-		$IF ($GET_CHAR_HITPOINTS(char) ># $GET_CHAR_MAXHITPOINTS(char))
-			{
-				$SET_CHAR_HITPOINTS(char,$GET_CHAR_MAXHITPOINTS(char));
-			};
-	};
\(END)

\(BEGIN)
name = itemPotion1b
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
[ExamineOrWhatever] = $VAR char;
-$VAR item;
-$VAR newItem;
-$VAR rndm;
-char = $IndexOf($CharacterContext());
-item = "Potion|1b";
-newItem = "Empty Bottle";
-rndm = $RANDOM(4) +# $RANDOM(4) +# 4;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_HITPOINTS(char, $GET_CHAR_HITPOINTS(char) +# rndm);
-		$IF ($GET_CHAR_HITPOINTS(char) ># $GET_CHAR_MAXHITPOINTS(char))
-			{
-				$SET_CHAR_HITPOINTS(char, $GET_CHAR_MAXHITPOINTS(char));
-			};
-	};
\(END)

\(BEGIN)
name = itemPotion2
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
[ExamineOrWhatever] = $VAR item;
-$VAR newItem;
-item = "Potion|2";
-newItem = "Empty Bottle";
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$CastSpellOnTarget($Myself(),"itemPotionInvisibility");
-	};
\(END)

\(BEGIN)
name = itemPotion3
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
[ExamineOrWhatever] = $VAR char;
-$VAR item;
-$VAR newItem;
-char = $IndexOf($CharacterContext());
-item = "Potion|3";
-newItem = "Empty Bottle";
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_AGE(char, $GET_CHAR_AGE(char) +# 1);
-		$CastSpellOnTarget($CharacterContext(),"itemPotionSpeed");
-	};
\(END)

\(BEGIN)
name = itemPotion4
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
[ExamineOrWhatever] = $VAR item;
-$VAR newItem;
-item = "Potion|4";
-newItem = "Empty Bottle";
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$CastSpellOnTarget($CharacterContext(),"itemPotionGiantStrength");
-	};
\(END)

\(BEGIN)
name = itemPotion5
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
[ExamineOrWhatever] = $VAR char;
-$VAR item;
-$VAR newItem;
-char = $IndexOf($CharacterContext());
-item = "Potion|5";
-newItem = "Empty Bottle";
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$IF ($GET_CHARACTER_SA($CharacterContext(), "isPoisoned") == "-?-?-"){$RETURN;};
-		$DELETE_CHARACTER_SA($CharacterContext(),"isPoisoned");
-		$IF ($GET_CHAR_HITPOINTS(char) <=# 0)
-			{
-				$SET_CHAR_HITPOINTS(char, "1");
-				$SET_CHAR_STATUS(char, "0");
-			};
-	};
\(END)

\(BEGIN)
name = itemPotion6
[CanExamineOrWhatever] = $SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
[ExamineOrWhatever] = $VAR me;
-$VAR item;
-$VAR newItem;
-$VAR age;
-$VAR rnd;
-$VAR result;
-me = $IndexOf($CharacterContext());
-item = "Potion|6";
-newItem = "Empty Bottle";
-rnd = $RANDOM(12) +# 1;
-age = $GET_CHAR_AGE(me);
-result = age -# rnd;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$IF (result <# 18){$RETURN $SET_CHAR_AGE(me, 18);}
-		$ELSE {$RETURN $SET_CHAR_AGE(me, result);};
-		};
\(END)

\(BEGIN)
name = itemPotionInvisibility
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($TargetContext(),"isInvisiblePotion",2);
[RemoveLinger] = $RETURN "TARGETS";
\(END)

\(BEGIN)
name = sitemRangedWeapon
[DoesAttackSucceed] = $VAR par5; $VAR par6; $VAR parM; $VAR parL;  $VAR tgt; $VAR atk; $VAR dist; $VAR hit;
-par5 = $GET_HOOK_PARAM(5); par6 = $GET_HOOK_PARAM(6); parM = $DelimitedStringSubstring($SA_PARAM_GET(),0);
-parL = $DelimitedStringSubstring($SA_PARAM_GET(),1); tgt = $IndexOf($TargetContext());
-atk = $IndexOf($AttackerContext()); dist = $VisualDistance(atk,tgt);
-$IF (dist ># parM){hit = par5 -# 2;};
-$IF (dist ># parL){hit = par5 -# 5;};
-$IF (hit ># par6){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = itemReflect
[OnReady] = $SET_CHARACTER_SA($CharacterContext(), "isReflecting", "1");
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(),"isReflecting");
\(END)

\(BEGIN)
name = itemRingOfBlinking
[OnReady] = $SET_CHARACTER_SA($CharacterContext(),"isBlinkingRing","1");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
-$IF ($GET_CHARACTER_SA($CharacterContext(),"side") != "-?-?-")
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"isBlinking1",1);
-		$SET_CHARACTER_SA($CharacterContext(),"isBlinking2",1);
-	};
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(),"isBlinkingRing");
-$DELETE_CHARACTER_SA($CharacterContext(),"isBlinking1");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
-$DELETE_CHARACTER_SA($CharacterContext(),"isBlinking2");
\(END)

\(BEGIN)
name = itemRingOfColdResistance
[OnReady] = $SET_CHARACTER_SA($CharacterContext(),"isRingResistantCold", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(), "isRingResistantCold");
\(END)

\(BEGIN)
name = itemRingOfElectricalImmunity
[OnReady] = $SET_CHARACTER_SA($CharacterContext(),"isRingImmuneElectricity", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(), "isRingImmuneElectricity");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

\(BEGIN)
name = itemRingOfFireResistance
[OnReady] = $SET_CHARACTER_SA($CharacterContext(),"isRingResistantFire", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(), "isRingResistantFire");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

\(BEGIN)
name = itemRingOfInvisibility
[OnReady] = $SET_CHARACTER_SA($CharacterContext(),"isInvisibleRing",1);
-$SET_COMBATANT_SA($CharacterContext(),"isInvisibleRing",1);
-$SET_COMBATANT_SA($CharacterContext(),"isInvisible",1);
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(),"isInvisibleRing");
-$DELETE_COMBATANT_SA($CharacterContext(),"isInvisibleRing");
-$DELETE_COMBATANT_SA($CharacterContext(),"isInvisible");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

\(BEGIN)
name = itemRingOfProtectionFromEvil
[OnReady] = $SET_CHARACTER_SA($CharacterContext(),"isProtectedEvil","1");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
[OnUnReady] = $DELETE_CHARACTER_SA($CharacterContext(),"isProtectedEvil");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

\(BEGIN)
name = itemRingOfWizardry
[OnReady] = $VAR lvl; $VAR actor;
-lvl = $SA_PARAM_GET(); $SpellAdj($CharacterContext(),"Magic User","ring",lvl,lvl,200,0);
-$SET_CHARACTER_SA($CharacterContext(),"isRingWizardry", lvl);
[OnUnReady] = $VAR lvl; $VAR actor;
-lvl = $SA_PARAM_GET(); $SpellAdj($CharacterContext(),"Magic User","ring",lvl,lvl,50,0);
-$DELETE_CHARACTER_SA($CharacterContext(),"isRingWizardry");
\(END)

\(BEGIN)
name = itemScroll
[OnReady] = $VAR nm; $VAR cls;
-nm = $MyIndex(); cls = $SA_PARAM_GET();
-$IF ($GET_CHAR_Lvl(nm,cls) <# 1 && $GET_CHAR_Lvl(nm,"thief") <# 10) {$SET_CHAR_Ready($CharacterContext(),WEAPON,"",0);};
\(END)

\(BEGIN)
name = itemSlotFingers
[CanReady] = $IF ($GET_HOOK_PARAM( 5 ) <# 2){$RETURN "Y";}
-$ELSE {$SET_HOOK_PARAM(6, "Sorry, you can't do that.");$RETURN "N";};
\(END)

\(BEGIN)
name = itemSlotPack
[CanReady] = $RETURN "Y";
\(END)

\(BEGIN)
name = itemSpiritualHammer
[OnReady] = $SET_ITEM_SA("Spiritual Hammer","itemMagicalWeapon",$GET_CHAR_Lvl($MyIndex(), $SA_PARAM_GET()) /# 3);
\(END)

\(BEGIN)
name = itemSpiritualHammerPaladin
[OnReady] = $SET_ITEM_SA("Spiritual Hammer|Paladin","itemMagicalWeapon",$GET_CHAR_Lvl($MyIndex(), $SA_PARAM_GET() -# 8) /# 3);
\(END)

\(BEGIN)
name = itemVorpalLongSword
[ComputeDamage] = $VAR roll; $VAR tgt; $VAR nm; $VAR dmg;
-$IF ($GET_HASVORPALIMMUNITY($TargetContext()) != "-?-?-"){$RETURN;};
-roll = $GET_COMBATANT_SA($TargetContext(),"vorp"); tgt = $IndexOf($TargetContext()); nm = $GET_CHAR_NAME(tgt);
-$IF ($GET_MONSTERTYPE_SA(nm,"MetalOrStone") != "-?-?-"){roll = roll -# 2;}
-$ELSE {$IF ($GET_CHAR_SIZE(tgt) == 2){roll = roll -# 1;};};
-$IF (roll ># 16)
-	{$SET_HOOK_PARAM(7,nm +" is beheaded"); $SET_HOOK_PARAM(5,$GET_CHAR_HITPOINTS(tgt) +# 11); $RETURN $GET_HOOK_PARAM(5);};
[DoesAttackSucceed] = $VAR par5; $VAR par6;
-par5 = $GET_HOOK_PARAM(5); par6 = $GET_HOOK_PARAM(6); $SET_COMBATANT_SA($TargetContext(),"vorp",par5);
-$IF (par5 >=# par6){$RETURN "Y";} $ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = itemWeaponType
Parameters = "blunt, piercing, slashing, piercing/slashing";
\(END)

\(BEGIN)
name = itemWhip
[OnReady] = $VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$IF ($GET_CHAR_Lvl(chr,"druid") <# 1 && $GET_CHAR_Lvl(chr,"fighter") <# 1 && $GET_CHAR_Lvl(chr,"paladin") <# 1 && $GET_CHAR_Lvl(chr,"ranger") <# 1 && $GET_CHAR_RACE(chr) != "Drow") {$SET_CHAR_Ready($CharacterContext(),0,"");};
\(END)

\(BEGIN)
name = monsterAuraDragon
[AURA_Create] = $VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$AURA_Attach("Combatant"); $AURA_Combatant(chr); $AURA_Size(0,10,0,360); $AURA_Shape("AnnularSector"); $AURA_Wavelength("Xray");
[AURA_Enter] = $VAR com; $VAR race; $VAR cLvl; $VAR mLvl; $VAR rndm; $VAR prm;
-com = $IndexOf($CombatantContext()); race = $GET_CHAR_NAME(com); cLvl = $GetHighestLevelBaseclass(com);
-mLvl = $GET_COMBATANT_SA($CombatantContext(),"monsterLevel"); rndm = $RANDOM(2); prm = $SA_PARAM_GET();
-$IF (race == "Dragon"){$RETURN;}; $IF (cLvl >=# 6){$RETURN;}; $IF (mLvl >=# 6){$RETURN;};
-$IF (cLvl >=# 3){$RETURN $SET_COMBATANT_SA($CombatantContext(),"isDragonAdj","");};
-$IF (rndm ==# 0){$SET_COMBATANT_SA($CombatantContext(),"isDragonFear","");};
-$IF (rndm ==# 1){$SET_COMBATANT_SA($CombatantContext(),"isDragonFlee",prm);};
[CreateMonsterCombatant] = $VAR prm;
-prm = $SA_PARAM_GET(); $AURA_Create("monsterAuraDragon",prm,0,0,0);
\(END)

\(BEGIN)
name = monsterAuraGhast
[AURA_Create] = $VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$AURA_Attach("Combatant"); $AURA_Combatant(chr); $AURA_Size(0,1,0,360); $AURA_Shape("AnnularSector"); $AURA_Wavelength("Xray");
[AURA_Enter] = $VAR save; $VAR rndm;
-save = $SkillAdj($CombatantContext(),"Save Vs PP","ghast","F",0); rndm = $RANDOM(20) +# 1;
-$IF (rndm <# save){$RETURN $SET_COMBATANT_SA($CombatantContext(),"isCarrionStenched","");};
[AURA_Exit] = $DELETE_COMBATANT_SA($CombatantContext(),"isCarrionStenched");
[CreateMonsterCombatant] = $VAR prm; // sa's parameter
-prm = $SA_PARAM_GET(); $AURA_Create("monsterAuraGhast",prm,0,0,0);
\(END)

\(BEGIN)
name = monsterAuraMummy
[AURA_Create] = $VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$AURA_Attach("Combatant"); $AURA_Combatant(chr); $AURA_Size(0,6,0,360); $AURA_Shape("AnnularSector"); $AURA_Wavelength("Xray");
[AURA_Enter] = $VAR com; $VAR race; $VAR save; $VAR rndm; $VAR time;
-$IF ($GET_COMBATANT_SA($CombatantContext(),"isOverMummy) != "-?-?-"){$RETURN;};
-com = $IndexOf($CombatantContext()); race = $GET_CHAR_NAME(com);
-save = $SkillAdj($CombatantContext(),"Save Vs PPDM","mummy","F",0); rndm = $RANDOM(20) +# 1; time = $GET_PARTY_TIME();
-$IF (race == "Human"){save = save +# 2;};
-$IF (rndm >=# save){$RETURN $SET_COMBATANT_SA($CombatantContext(),"isOverMummy","");}
-$ELSE ($RETURN $SET_COMBATANT_SA($CombatantContext(),"isMummyFear",time);};
[CreateMonsterCombatant] = $VAR prm; // sa's parameter
-prm = $GET_PARTY_TIME() +# $RANDOM(4) +# 1; $AURA_Create("monsterAuraMummy",prm,0,0,0);
\(END)

\(BEGIN)
name = monsterBearHug1
[InvokeSpellOnTarget] = $SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",1);
\(END)

\(BEGIN)
name = monsterBearHug2
[InvokeSpellOnTarget] = $VAR atk;$VAR tgt;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart") ==# 1)
-	{
-		$IF ($GET_CHARACTER_SA($TargetContext(),"isHugged") == "-?-?-")
-			{
-				$SET_COMBATANT_SA($AttackerContext(),"HugLink",tgt); $SET_CHARACTER_SA($TargetContext(),"isHugged",1);
-				$SET_COMBATANT_SA($AttackerContext(),"monsterBearHugging",tgt);
-				$SET_COMBATANT_SA($TargetContext(),"monsterBearHugged",atk); $SET_COMBATANT_SA($TargetContext(),"HugLink",atk); 
-			};
-	};
\(END)

\(BEGIN)
name = monsterBearHugged
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Hugged by Bear"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[OnStartCombatantAction] = $VAR atk;
-atk = $SA_PARAM_GET();
-$IF ($GET_CHAR_HITPOINTS(atk) <# 1)
-	{$DELETE_COMBATANT_SA($CombatantContext(),"HugLink"); $DELETE_CHARACTER_SA($CombatantContext(),"isHugged"); $SA_REMOVE();};
\(END)

\(BEGIN)
name = monsterBearHugging
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Hugging"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[GetAdjMaxMovement] = $RETURN 0;
[GetNumberOfAttacks] = $RETURN 0;
[OnStartCombatantAction] = $VAR Tgt; $VAR nm; $VAR dmg;
-Tgt = $SA_PARAM_GET();
-$IF ($GET_CHAR_HITPOINTS(Tgt) ># 0)
-	{
-		nm = $GET_CHAR_NAME($IndexOf($CombatantContext()));
-		$IF (nm == "Black Bear"){dmg = ($RANDOM(4) +# $RANDOM(4) +# 2);};
-		$IF (nm == "Brown Bear"||nm == "Grizzly Bear"){dmg = ($RANDOM(6) +# $RANDOM(6) +# 2);};
-		$IF (nm == "Cave Bear"||nm == "Owlbear"||nm == "Werebear" ){dmg = ($RANDOM(8) +# $RANDOM(8) +# 2);};
-		$IF (nm == "Northern Bear"){dmg = ($RANDOM(6) +# $RANDOM(6) +# $RANDOM(6) +# 3);};
-		$SET_CHAR_HITPOINTS(Tgt,$GET_CHAR_HITPOINTS(Tgt) -# dmg);
-	};
-$IF ($GET_CHAR_HITPOINTS(Tgt) <# 1) 
-	{
-		$IF ($GET_CHAR_HITPOINTS(Tgt) <# "-9")  {$SET_CHAR_STATUS(Tgt,2);} $ELSE {$SET_CHAR_STATUS(Tgt,9);};
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterBearHugging");
-	};
\(END)

\(BEGIN)
name = monsterBeholderAttacks
[StartCombatRound] = $GIVE_CHAR_ITEM( $Myself(), "monsterBeholderCharm" );
-$GIVE_CHAR_ITEM( $Myself(), "monsterBeholderSleep" ); $GIVE_CHAR_ITEM( $Myself(), "monsterBeholderFleshToStone" );
-$GIVE_CHAR_ITEM( $Myself(), "monsterBeholderFear" ); $GIVE_CHAR_ITEM( $Myself(), "monsterBeholderSlow" );
\(END)

\(BEGIN)
name = monsterDrainStrength
[InvokeSpellOnTarget] = $VAR tgt; $VAR dur; $VAR time; $VAR str; $VAR strMod;
-tgt = $IndexOf($TargetContext()); dur = ($RANDOM(4) +# $RANDOM(4) +# 2) *# 10; time = $GET_PARTY_TIME();
-str = $GET_CHAR_LIMITED_STR(tgt); strMod = $GET_CHAR_LIMITED_STRMOD(tgt);
-// SA lowStr used to circumvent Min/Max
-$IF (str <# 4 && $GET_COMBATANT_SA($TargetContext(),"lowStr") != "-?-?-")
-	{$SET_COMBATANT_SA($TargetContext(),"lowStr",$GET_COMBATANT_SA($TargetContext(),"lowStr") -# 1);}; 
-$IF (str <# 4 && $GET_COMBATANT_SA($TargetContext(),"lowStr") == "-?-?-") {$SET_COMBATANT_SA($TargetContext(),"lowStr",2);};
-$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",-1,"MINUTES",dur,"Weakened","MONSTER Drain Strength");
-$IF (strMod ># 0) {$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD,-strMod,"MINUTES",dur,"","MONSTER Drain Strength");};
-$IF ($GET_COMBATANT_SA($TargetContext(),"lowStr") ==# 0 || $GET_CHAR_HITPOINTS(tgt) <# 1)
-	{$SET_CHAR_HITPOINTS(tgt,"-10"); $RETURN $SET_CHAR_STATUS(tgt,5);	};
\(END)

\(BEGIN)
name = monsterEngulf1
[InvokeSpellOnTarget] = $SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",1);
\(END)

\(BEGIN)
name = monsterEngulf2
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart") ==# 1)
-	{
-		$IF ($GET_CHARACTER_SA($TargetContext(),"isHugged") == "-?-?-")
-			{
-				$SET_COMBATANT_SA($AttackerContext(),"HugLink",tgt); $SET_COMBATANT_SA($AttackerContext(),"monsterEngulfing",tgt);
-				$SET_COMBATANT_SA($AttackerContext(),"isHosed",$RANDOM(4) +# $RANDOM(4) +# 2);
-				$SET_COMBATANT_SA($TargetContext(),"monsterEngulfed",atk);
-				$SET_COMBATANT_SA($TargetContext(),"HugLink",atk); $SET_CHARACTER_SA($TargetContext(),"isHugged",1);
-			};
-	};
\(END)

\(BEGIN)
name = monsterEngulfed
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Engulfed"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[OnStartCombatantAction] = $VAR atk; 
-atk = $SA_PARAM_GET();
-$IF ($GET_CHAR_HITPOINTS(atk) <# 1)
-	{$DELETE_COMBATANT_SA($CombatantContext(),"HugLink"); $DELETE_CHARACTER_SA($CombatantContext(),"isHugged"); $SA_REMOVE();};
\(END)

\(BEGIN)
name = monsterEngulfing
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Engulfing"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[GetAdjMaxMovement] = $RETURN 0;
[GetNumberOfAttacks] = $RETURN 0;
[OnStartCombatantAction] = $VAR tgt; $VAR nm; $VAR count;
-tgt = $SA_PARAM_GET();
-$IF ($GET_CHAR_HITPOINTS(tgt) ># 0)
-	{
-		count = $GET_COMBATANT_SA($CombatantContext(),"isHosed") -#1;
-		$SET_COMBATANT_SA($CombatantContext(),"isHosed",count);
-		$IF (count <=# 0) {$SET_CHAR_STATUS(tgt,2); $SET_CHAR_HITPOINTS(tgt,0);};
-	};
-$IF ($GET_CHAR_HITPOINTS(tgt) <# 1)
-	{$DELETE_COMBATANT_SA($CombatantContext(),"monsterEngulfing"); $DELETE_COMBATANT_SA($CombatantContext(),"isHosed");};
\(END)

\(BEGIN)
name = monsterFireBatAttack
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR link;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$SET_COMBATANT_SA($AttackerContext(),"monsterFireBatDrain","");
-$IF ($GET_COMBATANT_SA($AttackerContext(),"monsterFireBatBloodCap") == "-?-?-")
-	{$SET_COMBATANT_SA($AttackerContext(),"monsterFireBatBloodCap",3);};
-$SET_COMBATANT_SA($AttackerContext(),"monsterFireBatLink",tgt);
-$SET_COMBATANT_SA($TargetContext(),"monsterFireBatDrainee","");
-$SET_CHARACTER_SA($TargetContext(),"isHugged",1);
-link = $GET_COMBATANT_SA($TargetContext(),"monsterFireBatLink");
-$IF (link == "-?-?-") {$SET_COMBATANT_SA($TargetContext(),"monsterFireBatLink","$255$" + atk);}
-$ELSE {link = link + "$" + atk; $SET_COMBATANT_SA($TargetContext(),"monsterFireBatLink",link);};
\(END)

\(BEGIN)
name = monsterFireBatDrain
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,$SA_PARAM_GET()); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[GetAdjMaxMovement] = $RETURN 0;
[GetNumberOfAttacks] = $RETURN 0;
[OnStartCombatantAction] = $VAR tgt;  $VAR nm; $VAR cap; $VAR dmg;
-tgt = $GET_COMBATANT_SA($CombatantContext(),"monsterFireBatLink"); nm = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHAR_STATUS(tgt) ==# 0) 
-	{
-		cap = $GET_COMBATANT_SA($CombatantContext(),"monsterFireBatBloodCap"); dmg = $RANDOM(4) +# 1; cap = cap -# 1;
-		$SET_COMBATANT_SA($CombatantContext(),"monsterFireBatBloodCap",cap);
-		$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) -# dmg);
-		$IF ($GET_CHAR_HITPOINTS(tgt) <# 1)
-			{
-				$SET_CHAR_STATUS(tgt,1); $DELETE_COMBATANT_SA($CombatantContext(),"monsterFireBatDrain");
-				$DELETE_COMBATANT_SA($CombatantContext(),"monsterFireBatLink");
-			};
-		$IF (cap <# 1)
-			{
-				$SET_CHAR_STATUS($MyIndex(),8);
-				$DELETE_COMBATANT_SA($CombatantContext(),"monsterFireBatDrain");
-				$DELETE_COMBATANT_SA($CombatantContext(),"monsterFireBatLink");
-				$SET_COMBATANT_SA($CombatantContext(),"isFleeing","Fleeing Fire Bat");
-				$DELETE_CHARACTER_SA($Name(nm),"isHugged");
-			};
-	}
-$ELSE
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterFireBatDrain");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterFireBatLink");
-	};
\(END)

\(BEGIN)
name = monsterFireBatDrainee
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Draining"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[OnStartCombatantAction] = $VAR atk; $VAR i; $VAR foes; $VAR alive;
-foes = $GET_COMBATANT_SA($Myself(),"monsterFireBatLink"); i = 1; alive = "-1"; atk = $DelimitedStringSubstring(foes, i);
-$WHILE (atk != "") {$IF ($GET_CHAR_STATUS(atk) ==# 0){alive = alive +# 1;}; i = i +# 1;};
-$IF (alive <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterFireBatDrainee");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterFireBatLink"); $DELETE_CHARACTER_SA($Myself(),"isHugged");
-	};
\(END)

\(BEGIN)
name = monsterGiantSlugSpit
[CheckProximity] = $VAR tgt; $VAR myself; $VAR range; $VAR distance;
-tgt = $GET_HOOK_PARAM(6); myself = $GET_HOOK_PARAM(5); range = $SA_PARAM_GET(); distance = $VisualDistance(tgt, myself);
-$SA_PARAM_SET(distance);
[DAS bak] = $VAR random; $VAR distance;
-random = $RANDOM(100); distance = $SA_PARAM_GET();
-$IF ($GetCombatRound() ==# 1) {$IF (random <# 10){$RETURN "Y";} $ELSE{$RETURN "N";};};
-$IF (random <# 110 -# (10 *# distance)){$RETURN "Y";} $ELSE{$RETURN "N";};
\(END)

\(BEGIN)
name = monsterGiantWeaselAttack
[InvokeSpellOnTarget] = $VAR atk;$VAR tgt; $VAR link;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$SET_COMBATANT_SA($AttackerContext(),"monsterGiantWeaselDrain","");
-$SET_COMBATANT_SA($AttackerContext(),"monsterGiantWeaselLink",tgt);
-$SET_COMBATANT_SA($TargetContext(),"monsterGiantWeaselDrainee",""); $SET_CHARACTER_SA($TargetContext(),"isHugged",1);
-link = $GET_COMBATANT_SA($TargetContext(),"monsterGiantWeaselLink");
-$IF (link == "-?-?-") {$SET_COMBATANT_SA($TargetContext(),"monsterGiantWeaselLink","$255$" + atk);}
-$ELSE {link = link + "$" + atk; $SET_COMBATANT_SA($TargetContext(),"monsterGiantWeaselLink",link);};
\(END)

\(BEGIN)
name = monsterGiantWeaselDrain
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Draining"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[GetAdjMaxMovement] = $RETURN 0;
[GetNumberOfAttacks] = $RETURN 0;
[OnStartCombatantAction] = $VAR tgt; $VAR nm; $VAR dmg; $VAR HP; 
-tgt = $GET_COMBATANT_SA($CombatantContext(),"monsterGiantWeaselLink"); nm = $GET_CHAR_NAME(tgt); HP = $GET_CHAR_HITPOINTS(tgt);
-$IF ($GET_CHAR_STATUS(tgt) ==# 0) 
-	{
-		dmg = ($RANDOM(6) +# 1) +# ($RANDOM(6) +# 1); $SET_CHAR_HITPOINTS(tgt,HP -# dmg);
-		$IF (HP <# 1)
-			{
-				$SET_CHAR_STATUS(tgt,1); $DELETE_COMBATANT_SA($CombatantContext(),"monsterGiantWeaselDrain");
-				$DELETE_COMBATANT_SA($CombatantContext(),"monsterGiantWeaselLink");
-			};
-	}
-$ELSE
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterGiantWeaselDrain");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterGiantWeaselLink");
-	};
\(END)

\(BEGIN)
name = monsterGiantWeaselDrainee
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,"Being Drained"); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[OnStartCombatantAction] = $VAR atk; $VAR i; $VAR foes; $VAR alive;
-foes = $GET_COMBATANT_SA($Myself(),"monsterGiantWeaselLink"); i = 1; alive = "-1"; atk = $DelimitedStringSubstring(foes, i);
-$WHILE (atk != "")
-	{atk = $DelimitedStringSubstring(foes, i); $IF ($GET_CHAR_STATUS(atk) ==# 0){alive = alive +# 1;}; i = i +# 1;};
-$IF (alive <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterGiantWeaselDrainee");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterGiantWeaselLink"); $DELETE_CHARACTER_SA($Myself(),"isHugged");
-	};
\(END)

\(BEGIN)
name = monsterGorgonBreath
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($TargetContext(),"isPetrified","Petrified");
\(END)

\(BEGIN)
name = monsterHellHoundAttack
[StartCombatRound] = $GIVE_CHAR_ITEM( $Myself(), "monsterHellHoundBreath" );
\(END)

\(BEGIN)
name = monsterImmuneSpellsGreenSlime
[ComputeDamage] = $IF (($SA_SPELL_GET("damageCold") != "-?-?-") || ($SA_SPELL_GET("damageFire") != "-?-?-")){ $RETURN "0";};
\(END)

\(BEGIN)
name = monsterImmuneSpellsIronGolem
[DoesSpellAttackSucceed] = $IF ($SA_SPELL_GET("damageElectricity") != "-?-?-")
-  {$SET_COMBATANT_SA($TargetContext(),"isSlow",$GET_PARTY_TIME() +# 3);}
-$ELSE {$RETURN "N";};
\(END)

\(BEGIN)
name = monsterLichFear
[CheckProximity] = $VAR me; $VAR it; $VAR nmMe; $VAR nmIt;
-me = $IndexOf($CombatantContext()); it = $GET_HOOK_PARAM(5); nmMe = $GET_CHAR_NAME(me); nmIt = $GET_CHAR_NAME(it);
-$IF ($GET_CHAR_ASL(me,"side") == $GET_CHAR_ASL(it,"side")){$RETURN;};
-$IF (nmMe != "Lich" && nmIt == "Lich")
-	{
-		$IF ($VisualDistance(me,it) <# 7 || $GET_CHAR_ASL(me,"lichfear") == 1)
-			{
-				$SET_COMBATANT_SA($CombatantContext(),"isLichFear",$GET_PARTY_TIME() +# $RANDOM(4) +# 1);
-				$SET_CHAR_ASL(me,"lichfear",""); $RETURN $SA_REMOVE();
-			};
-	};
-$IF (nmMe == "Lich" && nmIt != "Lich")
-	{
-		$IF ($VisualDistance(me,it) <# 7 && $GET_CHAR_NAME(it) != "Lich"){$SET_CHAR_ASL(it,"lichfear",1);};
-	};
[ComputeDamage] = $VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_ASL(tgt,"lichfear") == 1 && $GET_COMBATANT_SA($TargetContext(),"monsterLichFear") != "-?-?-")
-	{$SET_CHAR_ASL(tgt,"lichfear",""); $RETURN $GET_HOOK_PARAM(5) +# ($GET_CHAR_HITPOINTS(tgt));};
[DoesAttackSucceed] = $VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_ASL(tgt,"lichfear") == 1 && $GET_COMBATANT_SA($TargetContext(),"monsterLichFear") != "-?-?-")
-	{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";} $ELSE {$RETURN "N";};
[IsCombatReady] = $VAR me; $VAR i; $VAR sideset; $VAR set;
-me = $IndexOf($CombatantContext()); set = $GET_CHAR_ASL(me,"lichfear");
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE{sideset = 5;};
-i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_NAME(i) == "Lich" && $VisualDistance(me,i) <# 7){set = 1;};
-		$IF (set == 1)
-			{
-				$SET_COMBATANT_SA($CombatantContext(),"isLichFear",$GET_PARTY_TIME() +# $RANDOM(4) +# 1);
-				$SET_CHAR_ASL(me,"lichfear","");
-				$RETURN $SA_REMOVE();
-			};
-		i = $NextCreatureIndex(i,sideset);
-	};
\(END)

\(BEGIN)
name = monsterModronElementalResistance
[ComputeDamage] = $VAR $VAR acd; $VAR cld; $VAR fre;
-acd = $SA_ITEM_GET("damageAcid"); cld = $SA_ITEM_GET("damageCold"); fre = $SA_ITEM_GET("damageFire");
-$IF ((acd || cld || fre) != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 6 *# 5;};
[ComputeSpellDamage] = $VAR acd; $VAR cld; $VAR fre;
-acd = $SA_ITEM_GET("damageAcid"); cld = $SA_ITEM_GET("damageCold"); fre = $SA_ITEM_GET("damageFire");
-$IF ((acd || cld || fre) != "-?-?-") {$RETURN $GET_HOOK_PARAM(5) /# 6 *# 5;};
[DoesAttackSucceed] = $VAR acd; $VAR cld; $VAR fre; $VAR p5;
-acd = $SA_ITEM_GET("damageAcid"); cld = $SA_ITEM_GET("damageCold"); fre = $SA_ITEM_GET("damageFire"); p5 = $GET_HOOK_PARAM(5);
-$IF ((acd || cld || fre) != "-?-?-") {$SET_HOOK_PARAM(5,p5 =# 1);
\(END)

\(BEGIN)
name = monsterOsyluthFear
[AURA_Create] = $VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$AURA_Attach("Combatant"); $AURA_Combatant(chr); $AURA_Size(0,1,0,360); $AURA_Shape("AnnularSector"); $AURA_Wavelength("Xray");
[AURA_Enter] = $VAR com; $VAR race; $VAR save; $VAR rndm; $VAR time;
-$IF ($GET_COMBATANT_SA($CombatantContext(),"isOverOsyluth") != "-?-?-"){$RETURN;};
-com = $IndexOf($CombatantContext()); race = $GET_CHAR_NAME(com);
-save = $SkillAdj($CombatantContext(),"Save Vs PPDM","osyluth","F",0); rndm = $RANDOM(20) +# 1; time = $GET_PARTY_TIME();
-$IF (race == "Human"){save = save +# 2;};
-$IF (rndm >=# save){$RETURN $SET_COMBATANT_SA($CombatantContext(),"isOverOsyluth","");}
-$ELSE {$RETURN $SET_COMBATANT_SA($CombatantContext(),"isOsyluthFear",time);};
[CreateMonsterCombatant] = $VAR prm; // sa's parameter
-prm = $GET_PARTY_TIME() +# $RANDOM(4) +# 1; $AURA_Create("monsterOsyluthFear",prm,0,0,0);
\(END)

\(BEGIN)
name = monsterPitFiendFear
[AURA_Create] = $VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$AURA_Attach("Combatant"); $AURA_Combatant(chr); $AURA_Size(0,2,0,360); $AURA_Shape("AnnularSector"); $AURA_Wavelength("Xray");
[AURA_Enter] = $VAR com; $VAR race; $VAR save; $VAR rndm; $VAR time;
-$IF ($GET_COMBATANT_SA($CombatantContext(),"isOverPitFiend") != "-?-?-"){$RETURN;};
-com = $IndexOf($CombatantContext()); race = $GET_CHAR_NAME(com);
-save = $SkillAdj($CombatantContext(),"Save Vs PPDM","pit fiend","F",0); rndm = $RANDOM(20) +# 1; time = $GET_PARTY_TIME();
-$IF (race == "Human"){save = save +# 2;};
-$IF (rndm >=# save){$RETURN $SET_COMBATANT_SA($CombatantContext(),"isOverPitFiend","");}
-$ELSE {$RETURN $SET_COMBATANT_SA($CombatantContext(),"isPitFiendFear",time);};
[CreateMonsterCombatant] = $VAR prm; // sa's parameter
-prm = $GET_PARTY_TIME() +# $RANDOM(4) +# 1; $AURA_Create("monsterPitFiendFear",prm,0,0,0);
\(END)

\(BEGIN)
name = monsterPlayerControl
[AutoAction] = $RETURN "CP";
\(END)

\(BEGIN)
name = monsterPoison
[InvokeSpellOnTarget] = $VAR time; $VAR tgt;
-time = $GET_PARTY_TIME(); tgt = $IndexOf($TargetContext());
-$IF ($SA_CHARACTER_GET("isImmunePoison") != "-?-?-"){$RETURN;};
-$IF ($SA_CHARACTER_GET("isProtectedPoisonCaster") != "-?-?-"){$RETURN;};
-$IF ($SA_CHARACTER_GET("isProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"isPoisoned",time); $SET_CHAR_STATUS(tgt,2); $SET_CHAR_HITPOINTS(tgt,"-11");
\(END)

\(BEGIN)
name = monsterProtectionFromEvil
[CharDisplayStatus] = $IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{
-		$SET_HOOK_PARAM( 7,"Protected from Evil");
-		$SET_HOOK_PARAM( 6,"");
-	};
-$RETURN 1;
[DoesAttackSucceed] = $IF ($GET_CHARACTER_SA($TargetContext(),"monsterProtectionFromEvil") != "-?-?-")
-	{
-		$IF ($GET_COMBATANT_SA($AttackerContext(),"Summoned") != "-?-?-")
-			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);};
-		$IF ($AlignmentEvil($AttackerContext()))
-			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
[OnStartCombat] = $SkillAdj($TargetContext(),"Save Vs BR","monsterProtectionFromEvil","-","2");
-$SkillAdj($TargetContext(),"Save Vs PP","monsterProtectionFromEvil","-","2");
-$SkillAdj($TargetContext(),"Save Vs PPDM","monsterProtectionFromEvil","-","2");
-$SkillAdj($TargetContext(),"Save Vs RSW","monsterProtectionFromEvil","-","2");
-$SkillAdj($TargetContext(),"Save Vs SP","monsterProtectionFromEvil","-","2");
\(END)

\(BEGIN)
name = monsterRearClawRake1
[InvokeSpellOnTarget] = $SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",1);
\(END)

\(BEGIN)
name = monsterRearClawRake2
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR HP; $VAR nm; $VAR dmg; $VAR i; $VAR AC; $VAR TH;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); HP = $GET_CHAR_HITPOINTS(tgt); $IF (HP <# 1) {$RETURN;};
-$IF ($GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart") ==# 1)
-	{
- 		i = 0; AC = $GET_CHAR_AC(tgt); TH = $GET_CHAR_THAC0(atk);
-		$WHILE (i <# 2)
-			{
-				$IF($RANDOM(20) +# 1 >=# TH -# AC)
-					{
-						nm = $GET_CHAR_NAME(atk);
-						$IF (nm == "Giant Lynx"){dmg = ($RANDOM(3) +# 1);};
-						$IF (nm == "Leopard"||nm == "Mountain Lion"){dmg = ($RANDOM(4) +# 1);};
-						$IF (nm == "Jaguar"||nm == "Weretiger"){dmg = ($RANDOM(4) +# 2);};
-						$IF (nm == "Lion"){dmg = ($RANDOM(6) +# 2);};
-						$IF (nm == "Spotted Lion"||nm == "Tiger"||nm == "Smilodon"){dmg = ($RANDOM(4) +# $RANDOM(4) +# 2);};
-						$SET_CHAR_HITPOINTS(tgt,HP -# dmg);
-					};
-				i = i +# 1;
-			};
-		$IF (HP<# 1) {$IF (HP <# "-9"){$SET_CHAR_STATUS(tgt,2);} $ELSE{$SET_CHAR_STATUS(tgt,9);};};
-	};
\(END)

\(BEGIN)
name = monsterRegeneration
[StartCombatRound] = $VAR chr; $VAR hp;
-chr = $IndexOf($CharacterContext()); hp = $GET_CHAR_HITPOINTS(chr);
-$IF (hp >=# $GET_CHAR_MAXHITPOINTS(chr)){$RETURN;}; $SET_CHAR_HITPOINTS(chr, hp +# $SA_PARAM_GET());
\(END)

\(BEGIN)
name = monsterRevulsion
[CheckProximity] = $VAR tgt; $VAR myself; $VAR range; $VAR distance; $VAR saveVsPoison; $VAR roll;
-$IF ($GET_CHAR_NAME($MyIndex()) == "Troglodyte"){$RETURN;};
-$IF ($SA_COMBATANT_GET("ImmuneRevulsion") != "-?-?-"){$RETURN;};
-tgt = $GET_HOOK_PARAM(5); myself = $GET_HOOK_PARAM(6); range = $SA_PARAM_GET(); distance = $VisualDistance(tgt, myself);
-$IF (range <# distance) {$RETURN;};
-saveVsPoison = $SkillAdj($CombatantContext(), "Save Vs PPDM", "monster", "G", ""); roll = $RANDOM(20) +# 1;
-$IF (saveVsPoison ># roll){$SET_CHAR_THAC0(tgt,($GET_CHAR_THAC0(tgt) +# 2));}
-$ELSE{$SET_COMBATANT_SA($CombatantContext(), "ImmuneRevulsion", 4);};
\(END)

\(BEGIN)
name = monsterSpellImmunity
Parameters = "parameter is delimited string";
\(END)

\(BEGIN)
name = monsterStirgeAttack
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR link;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-// Attacker
-$SET_COMBATANT_SA($AttackerContext(),"monsterStirgeDrain","");
-$IF ($GET_COMBATANT_SA($AttackerContext(),"monsterStirgeBloodCap") == "-?-?-")
-	{$SET_COMBATANT_SA($AttackerContext(),"monsterStirgeBloodCap",12);};
-$SET_COMBATANT_SA($AttackerContext(),"monsterStirgeLink",tgt);
-// Target
-$SET_COMBATANT_SA($TargetContext(),"monsterStirgeDrainee",""); $SET_CHARACTER_SA($TargetContext(),"isHugged",1);
-// Link
-link = $GET_COMBATANT_SA($TargetContext(),"monsterStirgeLink");
-$IF (link == "-?-?-"){$SET_COMBATANT_SA($TargetContext(),"monsterStirgeLink","$255$" + atk);}
-$ELSE {link = link + "$" + atk; $SET_COMBATANT_SA($TargetContext(),"monsterStirgeLink",link);};
\(END)

\(BEGIN)
name = monsterStirgeDrain
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,$SA_PARAM_GET()); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[GetAdjMaxMovement] = $RETURN 0;
[GetNumberOfAttacks] = $RETURN 0;
[OnStartCombatantAction] = $VAR tgt; $VAR nm; $VAR cap; $VAR dmg;
-// Test Target and Compute & Apply Drain
-tgt = $GET_COMBATANT_SA($CombatantContext(),"monsterStirgeLink"); nm = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHAR_STATUS(tgt) ==# 0) 
-  {
-    cap = $GET_COMBATANT_SA($CombatantContext(),"monsterStirgeBloodCap"); dmg = $RANDOM(4) +# 1;
-    $IF (cap <# dmg) {dmg = cap;}; cap = cap -# dmg; $SET_COMBATANT_SA($CombatantContext(),"monsterStirgeBloodCap",cap);
-    $SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) -# dmg);
-// is Target Dead?
-    $IF ($GET_CHAR_HITPOINTS(tgt) <# 1)
-      {
-// Target
-        $SET_CHAR_STATUS(tgt,1);
-// Attacker
-        $DELETE_COMBATANT_SA($CombatantContext(),"monsterStirgeDrain");
-        $DELETE_COMBATANT_SA($CombatantContext(),"monsterStirgeLink");
-      };
-// Am I Full?
-    $IF (cap <# 1)
-      {
-        $SET_CHAR_STATUS($MyIndex(),8);
-        $DELETE_COMBATANT_SA($CombatantContext(),"monsterStirgeDrain");
-        $DELETE_COMBATANT_SA($CombatantContext(),"monsterStirgeLink");
-        $SET_COMBATANT_SA($CombatantContext(),"isFleeing","Fleeing Stirge");
-// Target
-        $DELETE_CHARACTER_SA($Name(nm),"isHugged");
-      };
-  }
-$ELSE
-  {
-// Someone Else Killed It
-// Attacker
-    $DELETE_COMBATANT_SA($CombatantContext(),"monsterStirgeDrain");
-    $DELETE_COMBATANT_SA($CombatantContext(),"monsterStirgeLink");
-  };
\(END)

\(BEGIN)
name = monsterStirgeDrainee
[CharDisplayStatus] = $SET_HOOK_PARAM( 7,$SA_PARAM_GET()); $SET_HOOK_PARAM( 6,""); $RETURN 1;
[OnStartCombatantAction] = $VAR atk; $VAR i; $VAR foes; $VAR alive;
-foes = $GET_COMBATANT_SA($Myself(),"monsterStirgeLink"); i = 1; alive = "-1"; atk = $DelimitedStringSubstring(foes, i);
-$WHILE (atk != "")
-	{atk = $DelimitedStringSubstring(foes, i); $IF ($GET_CHAR_STATUS(atk) ==# 0){alive = alive +# 1;}; i = i +# 1;};
-// alive = alive -# 1;
-$IF (alive <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterStirgeDrainee");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monsterStirgeLink"); $DELETE_CHARACTER_SA($Myself(),"isHugged");
-	};
\(END)

\(BEGIN)
name = monsterSummonSlaad
[StartCombatRound] = $VAR round;
-round = $GetCombatRound(); $IF (round ==# 3) {$AddCombatant("Red Slaad","1");};
\(END)

\(BEGIN)
name = monsterTrollGetUp
[StartCombatRound] = $VAR cbt; $VAR hp; $VAR round; $VAR getUp; $VAR nm; $VAR nt; $VAR x; $VAR y; $VAR mhp; $VAR i; $VAR n;
-cbt = $SA_PARAM_GET(); hp = $GET_CHAR_HITPOINTS(cbt);
-$IF (hp <=# 0)
-	{
-		nm = $GET_CHAR_NAME(cbt); round = $GetCombatRound();
-		$IF ($GET_COMBATANT_SA($CombatantContext(),"timeToRise") == "-?-?-")
-			{
-				getUp = ($RANDOM(6) +# $RANDOM(6) +# $RANDOM(6) +# 3);
-				$SET_COMBATANT_SA($CombatantContext(),"timeToRise", round +# getUp);
-			};
-		$IF (round ==# ($SA_COMBATANT_GET("timeToRise")))
-			{
-				i = $NextCreatureIndex("",0);
-				$WHILE (i != "") {n = i; i = $NextCreatureIndex(i,0);};
-				nt = n +# 1; x = $CombatantLocation(cbt,"X"); y = $CombatantLocation(cbt,"Y"); mhp = $GET_CHAR_MAXHITPOINTS(cbt);
-				$AddCombatant(nm,0); $TeleportCombatant(nt,x,y); $SET_CHAR_MAXHITPOINTS(nt,mhp);  $SET_CHAR_HITPOINTS(nt,mhp);
-			};
-	};
\(END)

\(BEGIN)
name = monsterTrollRegeneration
[StartCombatRound] = $VAR tgt; $VAR currHP; $VAR round;
-tgt = $IndexOf($Myself()); currHP = $GET_CHAR_HITPOINTS(tgt); round = $GetCombatRound();
-$IF (currHP <# 42)
-	{$IF ($SA_COMBATANT_GET("timeToRegen") == "-?-?-") {$SET_COMBATANT_SA($Myself(),"timeToRegen",round +# 3);};};
-$IF (round ==# $SA_COMBATANT_GET("timeToRegen"))
-	{$RETURN $SET_COMBATANT_SA($Myself(),"monsterRegeneration",$SA_PARAM_GET());};
\(END)

\(BEGIN)
name = monsterVulnerableToHolyWater
[ComputeDamage] = $VAR vulnHolyWater;
-vulnHolyWater = $SA_ITEM_GET("itemHolyWater"); $IF (vulnHolyWater >=# 0){$RETURN $RANDOM(4) +# $RANDOM(4) +# 2;};
\(END)

\(BEGIN)
name = monsterWeaponDamageOnlyOne
[ComputeDamage] = $VAR oneDamage;
-oneDamage = $SA_ITEM_GET("itemMagicalWespon"); $IF (oneDamage >=# 3){$RETURN "1";};
\(END)

\(BEGIN)
name = monsterWeaponResistance
[ComputeDamage] = $VAR atk; // attacker
-$VAR item;
-atk = $IndexOf($AttackerContext());
-item = $SA_ITEM_GET("itemMagicalWeapon");
-$IF ($GET_CHAR_TYPE(char) != "@PC@" && $GET_CHAR_TYPE(char) != "@NPC@") {$RETURN;};
-$IF (item == "-?-?-")
-	{
-		$IF (item <# $SA_PARAM_GET()){$RETURN $GET_HOOK_PARAM(5) /# 2;};
-	};
[CreateMonsterCombatant] = $SET_COMBATANT_SA($CharacterContext(),"monsterWeaponResistance",$SA_PARAM_GET());
\(END)

\(BEGIN)
name = monsterWeaponResistanceType
[ComputeDamage] = $VAR weapon;
-weapon = $SA_ITEM_GET("itemWeaponType");
-$IF (weapon == $SA_PARAM_GET()){$RETURN $GET_HOOK_PARAM(5) /# 2;};
[CreateMonsterCombatant] = $SET_COMBATANT_SA($CharacterContext(),"monsterWeaponResistanceType",$SA_PARAM_GET());
\(END)

\(BEGIN)
name = raceElf
[PostCreateCharacter] = $SET_CHARACTER_SA($CharacterContext(),"isElf",1);
\(END)

\(BEGIN)
name = raceHalfElf
[PostCreateCharacter] = $SET_CHARACTER_SA($CharacterContext(),"isCharmResistantMin","Half-Elf");
-$SET_CHARACTER_SA($CharacterContext(),"isSleepResistantMin","Half-Elf");
\(END)

\(BEGIN)
name = raceSuppress
[SelectCharacterRace] = $RETURN "Y";
\(END)

\(BEGIN)
name = spellAnimateDead
[InvokeSpellOnTarget] = $VAR tgt;
-tgt = $IndexOf($TargetContext()); $SET_CHAR_STATUS(tgt,5); $AddCombatant("Zombie","1");
[IsValidTarget] = $VAR tgt; $VAR stts;
-tgt = $IndexOf($TargetContext()); $IF ($IsUndead != ""){$RETURN "N";};
-stts = $GET_CHAR_STATUS(tgt); $IF (stts != 2 || stts != 9){$RETURN "N";};
\(END)

\(BEGIN)
name = spellAttack
[InvokeSpellOnTarget] = $IF ($GET_COMBATANT_SA($AttackerContext(),"isInvisible"))
-  {
-   $DELETE_CHARACTER_SA($AttackerContext(),"isInvisibleSpell");
-   $DELETE_CHARACTER_SA($AttackerContext(),"isInvisiblePotion");
-   $DELETE_COMBATANT_SA($AttackerContext(),"isInvisible");
-  };
\(END)

\(BEGIN)
name = spellBarkskin
[InvokeSpellOnTarget] = $VAR cls;
-$VAR atk; // attacker
-$VAR lvl;
-cls = $SA_PARAM_GET();
-atk = $IndexOf($AttackerContext());
-lvl = $GET_CHAR_Lvl(atk,cls);
-$IF (cls == "ranger") {lvl = lvl -# 7;};
-$SET_CHARACTER_SA($TargetContext(),"isBarkskinned",$GET_PARTY_TIME() +# lvl +# 4);
\(END)

\(BEGIN)
name = spellBless
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR mySide;
-$VAR tgt; // target
-mySide = $GET_COMBATANT_SA($AttackerContext(),"side");
-tgt = $IndexOf($TargetContext());
-$IF (mySide != "-?-?-")
-	{
-		$IF (mySide !=# $GET_COMBATANT_SA($TargetContext(),"side")){$RETURN;};
-		$IF ($VisualDistance(tgt, $IndexOf($NEAREST_ENEMY_TO($TargetContext()))) <# 2){$RETURN;};
-		$SET_CHARACTER_SA($TargetContext(),"isBlessed",$GET_PARTY_TIME() +# 6);
-		$SET_COMBATANT_SA($TargetContext(),"isBlessed1",1);
-	}
-$ELSE {$SET_CHARACTER_SA($TargetContext(),"isBlessed",$GET_PARTY_TIME() +# 6);};
\(END)

\(BEGIN)
name = spellBlind
[InvokeSpellOnTarget] = $VAR atk; // attacker
-$VAR tgt; // target
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($RANDOM(20) +# 1 <# $GET_CHAR_THAC0(atk) -# $GET_CHAR_AC(tgt)){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"isBlind","Blind");
\(END)

\(BEGIN)
name = spellBlink
[InvokeSpellOnTarget] = $VAR atk; // attacker
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-lvl = $GET_CHAR_Lvl(atk,"magicUser");
-$SET_CHARACTER_SA($AttackerContext(),"isBlinking",$GET_PARTY_TIME() +# lvl);
-$IF ($GET_COMBATANT_SA($AttackerContext(),"side") != "-?-?-")
-	{
-		$SET_COMBATANT_SA($AttackerContext(),"isBlinking1",1);
-		$SET_COMBATANT_SA($AttackerContext(),"isBlinking2",1);
-	};
\(END)

\(BEGIN)
name = spellBlur
[InvokeSpellOnTarget] = $SET_COMBATANT_SA($TargetContext(),"isBlurred","");
\(END)

\(BEGIN)
name = spellCauseDisease
[InvokeSpellOnTarget] = $VAR atk; // attacker
-$VAR tgt; // target
-$VAR minhp;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved") == 1){$RETURN;};
-$IF ($RANDOM(20) +# 1 <# $GET_CHAR_THAC0(atk) -# $GET_CHAR_AC(tgt)){$RETURN;};
-// Need a better To-Hit check;
-$IF ($GET_CHARACTER_SA($TargetContext(),"pcSTR") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"pcSTR",$GET_CHAR_STR(tgt));
-		$SET_CHARACTER_SA($TargetContext(),"pcSTRMOD",$GET_CHAR_STRMOD(tgt));
-	};
-minhp = $GET_CHAR_MAXHITPOINTS(tgt) /# 10;
-$IF (minhp <# 1){minhp = 1;};
-$SET_CHARACTER_SA($TargetContext(),"minhp",minhp);
-$SET_CHARACTER_SA($TargetContext(),"isDiseasedSpell",$GET_PARTY_TIME() +# (($RANDOM(6) +# 1) *# 10));
\(END)

\(BEGIN)
name =spell_CauseFearCleric
[InvokeSpellOnTarget] = $VAR exp;
-exp = $GET_PARTY_TIME() +# 10;
-$SET_COMBATANT_SA($TargetContext(),"IsAfraid",exp);
\(END)

\(BEGIN)
name = spellCharm
[InvokeSpellOnTarget] = $IF ($GET_CHARACTER_SA($TargetContext(),"saved")) {$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) !=# 1){$RETURN;};
-$IF ($GET_COMBATANT_SA($TargetContext(),"monster_ImmuneCharm") != "-?-?-"){$RETURN;};
-$SetFriendly($IndexOf($TargetContext()), $GET_COMBATANT_SA($Myself(),"side"));
-$SET_COMBATANT_SA($TargetContext(),"IsCharmed","11");
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel","11");
\(END)

\(BEGIN)
name = spellCharmMonster
[InvokeSpellOnTarget] = $VAR side; $VAR atk; $VAR tgt; $VAR cLvl; $VAR tNom;$VAR tLvl; $VAR mLvl; $VAR cls;
-$VAR tcls; $VAR opr; $VAR rnd; $VAR tgtnum;
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) !=# 1){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($GET_COMBATANT_SA($TargetContext(),"monster_ImmuneCharm") != "-?-?-"){$RETURN;};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-opr = $GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart");
-$IF (opr == "-?-?-" || opr == 0)
-	{
-		$SET_CHARACTER_SA($AttackerContext(),"CombatRoundStart",5);
-		$SET_CHARACTER_SA($AttackerContext(),"tgtnum",0);
-		$SET_CHARACTER_SA($AttackerContext(),"PointPool",$RANDOM(4) +# $RANDOM(4) +# 2);
-	};
-rnd = $GET_CHARACTER_SA($AttackerContext(), "PointPool");
-$IF (rnd <# 1){$RETURN;};
-cls = $SA_PARAM_GET(); cLvl = $GET_CHAR_Lvl(atk,cls); side = $GET_CHARACTER_SA($AttackerContext(), "side");
-tNom = $GET_CHAR_NAME(tgt); mLvl = $GET_MONSTERTYPE_SA(tNom,"monsterLevel");
-$IF (mLvl != "-?-?-"){tLvl = mLvl;}
-$ELSE {tcls = $GetHighestLevelBaseclass(tgt); tLvl = $GetBaseclassLevel(tgt, tcls);};
-$SET_CHARACTER_SA($AttackerContext(), "tgtnum",$GET_COMBATANT_SA($AttackerContext(),"tgtnum") +# 1);
-tgtnum = $GET_CHARACTER_SA($AttackerContext(),"tgtnum");
-$IF (tgtnum != "-?-?-")
-	{
-		$IF (tLvl ># 3)
-			{
-				$SET_CHARACTER_SA($AttackerContext(),"PointPool",0);
-				$SetFriendly(tgt,side);
-				$SET_CHARACTER_SA($TargetContext(),"IsCharmed",cLvl);
-				$RETURN;
-			};
-	};
-$IF (tLvl ># rnd){$RETURN;}
-$ELSE
-	{
-		$SET_CHARACTER_SA($AttackerContext(),"PointPool",rnd -# tLvl);
-		$SetFriendly(tgt,side);
-		$SET_CHARACTER_SA($TargetContext(),"IsCharmed",cLvl);
-	};
\(END)

\(BEGIN)
name = spellCharmPerson
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR lvl;
-tgt = $IndexOf($TargetContext()); atk = $IndexOf($AttackerContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-$IF ($GET_COMBATANT_SA($TargetContext(),"monster_ImmuneCharm") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsPerson") == "-?-?-"){$RETURN;};
-cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls); $SetFriendly(tgt,$GET_COMBATANT_SA($Myself(),"side"));
-$SET_CHARACTER_SA($TargetContext(),"IsCharmed",lvl); $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

\(BEGIN)
name = spellCharmPersonOrMammal
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR tNom; $VAR cls; $VAR lvl;
-tgt = $IndexOf($TargetContext()); atk = $IndexOf($AttackerContext()); tNom = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved" )) {$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-$IF ($GET_COMBATANT_SA($TargetContext(),"monster_ImmuneCharm") != "-?-?-"){$RETURN;};
-$IF ($GET_MONSTERTYPE_SA(tNom,"monsterLevel") != "-?-?-")
-	{  //  MONSTERTYPE_SA checks go here
-		$IF ($GET_MONSTERTYPE_SA(tNom,"IsPerson") == "-?-?-" && $GET_ISMAMMAL($TargetContext()) != 1){$RETURN;};
-	};
-cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls); $SetFriendly(tgt,$GET_COMBATANT_SA($Myself(),"side"));
-$SET_CHARACTER_SA($TargetContext(),"IsCharmed",lvl); $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

\(BEGIN)
name = spellCharmPlant
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR tNom; $VAR cls; $VAR lvl;
-tgt = $IndexOf($TargetContext()); atk = $IndexOf($AttackerContext()); tNom = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved" )) {$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-$IF ($GET_COMBATANT_SA($TargetContext(),"monster_ImmuneCharm") != "-?-?-"){$RETURN;};
-$IF ($GET_MONSTERTYPE_SA(tNom,"monsterLevel") != "-?-?-")
-	{  //  MONSTERTYPE_SA checks go here
-		$IF ($GET_MONSTERTYPE_SA(tNom,"IsPlant") == "-?-?-"){$RETURN;};
-	};
-cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls); $SetFriendly(tgt,$GET_COMBATANT_SA($Myself(),"side"));
-$SET_CHARACTER_SA($TargetContext(),"IsCharmed",lvl); $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

\(BEGIN)
name = spellChontrolUndead
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR lvl;
-tgt = $IndexOf($TargetContext()); atk = $IndexOf($AttackerContext()); $IF ($IsUndead == ""){$RETURN;};};
-cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls); $SetFriendly(tgt,$GET_COMBATANT_SA($Myself(),"side"));
-$SET_COMBATANT_SA($TargetContext(),"isCharmed",lvl); $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

\(BEGIN)
name = spellCloudkill
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[SpellLingerBlockage] = $IF ($GET_HASPOISONIMMUNITY($CombatantContext()))
-  {$RETURN "N";};
\(END)

\(BEGIN)
\(BEGIN)
name = spellConfusion
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR monName; $VAR monLvl; $VAR opr; $VAR rnd; $VAR rnd2; $VAR cls;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); cls = $SA_PARAM_GET();
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel", $GET_CHAR_Lvl(atk,cls));
-$IF ($GET_CHAR_STATUS(tgt) != 0){$RETURN;}; monName = $GET_CHAR_NAME(tgt);
-$IF ($GET_MONSTERTYPE_SA(monName,"IsConfused") != "-?-?-" ||
-$GET_CHARACTER_SA($TargetContext(),"IsConfused") != "-?-?-"){$RETURN;};
-monLvl = $GET_MONSTERTYPE_SA(monName,"monsterLevel");
-$IF (monLvl != "-?-?-")
-	{
-		$IF (monLvl >=# 1){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 17 );};
-		$IF (monLvl >=# 3){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 16 );};
-		$IF (monLvl >=# 5){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 14 );};
-		$IF (monLvl >=# 7){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 13 );};
-		$IF (monLvl >=# 9){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 11 );};
-		$IF (monLvl >=# 11){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 10 );};
-		$IF (monLvl >=# 13){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 8 );};
-		$IF (monLvl >=# 15){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 7 );};
-		$IF (monLvl >=# 17){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 6 );};
-	};
-opr = $GET_CHARACTER_SA($AttackerContext(), "CombatRoundStart");
-$IF (opr  == "-?-?-")
-	{
-		$SET_CHARACTER_SA( $AttackerContext(), "CombatRoundStart",5);
-		rnd = (($RANDOM(4) +# 1) +# ($RANDOM(4) +# 1));
-		$SET_CHARACTER_SA( $AttackerContext(), "PointPool", rnd);
-	};
-opr = $GET_COMBATANT_SA($AttackerContext(), "CombatRoundStart");
-$IF (opr  <# 2)
-	{
-		$SET_CHARACTER_SA( $AttackerContext(), "CombatRoundStart", 3);
-		rnd = (($RANDOM(4) +# 1) +# ($RANDOM(4) +# 1));
-		$SET_CHARACTER_SA( $AttackerContext(), "PointPool", rnd);
-	};
-rnd = $GET_COMBATANT_SA( $AttackerContext(), "PointPool");
-$IF (rnd <# 1) {$RETURN;};
-rnd2 = ($RANDOM(20) +# 1);
-$IF ($SkillAdj($TargetContext(), "Save Vs SP", "spell", "F", "") ># rnd2)
-	{
-		$SET_CHARACTER_SA($TargetContext(),"IsConfusedExtended",1);
-		$SET_CHARACTER_SA($TargetContext(),"CombatRoundStart",1);
-	};
-rnd = $RANDOM(10) +# 1;
-$IF (rnd ==# 1){$SetFriendly(tgt,1);$RETURN;};
-$IF (rnd <=# 6){$SET_CHARACTER_SA($TargetContext(),"IsConfused","Confused");$RETURN;};
-$IF (rnd ==# 7){$SetFriendly(tgt,1);$RETURN;}; $IF (rnd ==# 8){$SetFriendly(tgt,2);$RETURN;}; $SetFriendly(tgt,2);
\(END)

\(BEGIN)
name = spellConjureAnimals
[InvokeSpellOnTarget] = $VAR list; $VAR count; $VAR n; $VAR caster; $VAR class; $VAR hd; $VAR string; $VAR monster; $VAR sCount;
-list = "#$Owl$1#$Wolf$2#$Brown Bear$5"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-caster = $IndexOf($AttackerContext()); class = $SA_PARAM_GET(); string = $DelimitedStringSubstring(list,n);
-monster = $DelimitedStringSubstring(string,0); hd = $DelimitedStringSubstring(string,1);
-sCount = $GET_CHAR_Lvl(caster,class) /# hd;
-$WHILE (sCount >=# 0) {$AddCombatant(monster,"1"); sCount = sCount -# 1;};
\(END)

\(BEGIN)
name = spellContagion
[InvokeSpellOnTarget] = $VAR tgt;
-tgt = $IndexOf($TargetContext()); $IF ($GET_CHAR_Lvl(tgt,"paladin") >=# 1){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"isImmuneDisease") != "-?-?-"){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"isDiseased","Diseased");
\(END)

\(BEGIN)
name = spellContinualDarknessCleric
[OverrideSpellTargeting] = $VAR p5; $VAR p6; $VAR lst; $VAR loc;
-p5 = $GET_HOOK_PARAM(5); p6 = $GET_HOOK_PARAM(6);
-$SET_HOOK_PARAM(1,"Select one of the following;");
-loc = "$"+p5+"$"+p6;
-lst = "$Map$Combatant";
-$SET_COMBATANT_SA($AttackerContext(),"ContinualDarknessClericTargetXY",loc);
-$RETURN lst;
[ProcessSpellTargetOverride] = $VAR p5; $VAR atk; $VAR tgt;
-p5 = $GET_HOOK_PARAM(5);
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$AURA_Create("spell_ContinualDarknessClericAURA",p5,atk,tgt,"");
\(END)

\(BEGIN)
name = spellContinualDarknessClericAURA
[AURA_Create] = $VAR atk; $VAR tgt; $VAR prm; $VAR pXY; $VAR X; $VAR Y;
-atk = $AURA_GetData(0);
-tgt = $AURA_GetData(1);
-prm = $SA_PARAM_GET();
-pXY = $SA_COMBATANT_GET("ContinualDarknessClericTargetXY");
-X = $DelimitedStringSubstring(pXY,0);
-Y = $DelimitedStringSubstring(pXY,1);
-$IF (prm == "Combatant") {$AURA_Attach("Combatant"); $AURA_Combatant(tgt);};
-$IF (prm == "Map") {$AURA_Attach("XY"); $AURA_Location(X,Y);};
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,6,0,360);
-$AURA_Spell("Continual Darkness|Priest");
-$AURA_Wavelength("Xray");
-$DELETE_COMBATANT_SA($IndexToActor(atk),"ContinualDarknessClericTargetXY");
[AURA_Enter] = $VAR IR; $VAR UV; $VAR pIR; $VAR pUV;
-IR = $GET_COMBATANT_SA($CombatantContext(),"monster_Infravision");
-UV = $GET_COMBATANT_SA($CombatantContext(),"monster_Ultravision");
-pIR = $SkillAdj($CharacterContext(),"Infravsion" , "", "F", 0 );
-pUV = $SkillAdj($CharacterContext(),"Ultravision" , "", "F", 0 );
-$IF (IR != "-?-?-"){$RETURN;}; $IF (UV != "-?-?-"){$RETURN;};
-$IF (pIR ># 0){$RETURN;}; $IF (pUV ># 0){$RETURN;};
-$SET_COMBATANT_SA($CombatantContext(),"IsDarkBlinded","");
[AURA_Exit] = $DELETE_COMBATANT_SA($CombatantContext(),"IsDarkBlinded");
[Dispel] = $AURA_Destroy(); $DELETE_COMBATANT_SA($CombatantContext(),"IsDarkBlinded");
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellContinualLightCleric
[OverrideSpellTargeting] = $VAR p5; $VAR p6; $VAR lst; $VAR loc;
-p5 = $GET_HOOK_PARAM(5); p6 = $GET_HOOK_PARAM(6);
-$SET_HOOK_PARAM(1,"Select one of the following;");
-loc = "$"+p5+"$"+p6;
-lst = "$Map$Combatant";
-$SET_COMBATANT_SA($AttackerContext(),"ContinualLightClericTargetXY",loc);
-$RETURN lst;
[ProcessSpellTargetOverride] = $VAR p5; $VAR atk; $VAR tgt;
-p5 = $GET_HOOK_PARAM(5);
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$AURA_Create("spell_ContinualLightClericAURA",p5,atk,tgt,"");
\(END)

\(BEGIN)
name = spellContinualLightClericAURA
[AURA_Create] = $VAR atk; $VAR tgt; $VAR prm; $VAR pXY; $VAR X; $VAR Y;
-$DEBUG ("Light - AURA_Create");
-atk = $AURA_GetData(0);
-tgt = $AURA_GetData(1);
-prm = $SA_PARAM_GET();
-pXY = $SA_COMBATANT_GET("ContinualLightClericTargetXY");
-X = $DelimitedStringSubstring(pXY,0);
-Y = $DelimitedStringSubstring(pXY,1);
-$DEBUG ("choice made = " +prm);
-$IF (prm == "Combatant") {$AURA_Attach("Combatant"); $AURA_Combatant(tgt);};
-$IF (prm == "Map") {$AURA_Attach("XY"); $AURA_Location(X,Y);};
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,6,0,360);
-$AURA_Spell("Continual Light|Priest");
-$AURA_Wavelength("Xray");
-$DELETE_COMBATANT_SA($IndexToActor(atk),"ContinualLightClericTargetXY");
[AURA_Enter] = $VAR sus;
-sus = $GET_COMBATANT_SA($CombatantContext(),"monster_LightSusceptible");
-$IF (sus == "-?-?-"){$RETURN;};
-$SET_COMBATANT_SA($CombatantContext(),"IsLightBlinded","");
[AURA_Exit] = $DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");
[Dispel] = $AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellContinualLightMage
[OverrideSpellTargeting] = $VAR p5; $VAR p6; $VAR lst; $VAR loc;
-p5 = $GET_HOOK_PARAM(5); p6 = $GET_HOOK_PARAM(6);
-$SET_HOOK_PARAM(1,"Select one of the following;");
-loc = "$"+p5+"$"+p6;
-lst = "$Map$Combatant";
-$SET_COMBATANT_SA($AttackerContext(),"ContinualLightMageTargetXY",loc);
-$RETURN lst;
[ProcessSpellTargetOverride] = $VAR p5; $VAR atk; $VAR tgt;
-p5 = $GET_HOOK_PARAM(5);
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$AURA_Create("spell_ContinualLightMageAURA",p5,atk,tgt,"");
\(END)

\(BEGIN)
name = spellContinualLightMageAURA
[AURA_Create] = $VAR atk; $VAR tgt; $VAR prm; $VAR pXY; $VAR X; $VAR Y;
-$DEBUG ("Light - AURA_Create");
-atk = $AURA_GetData(0);
-tgt = $AURA_GetData(1);
-prm = $SA_PARAM_GET();
-pXY = $SA_COMBATANT_GET("ContinualLightMageTargetXY");
-X = $DelimitedStringSubstring(pXY,0);
-Y = $DelimitedStringSubstring(pXY,1);
-$DEBUG ("choice made = " +prm);
-$IF (prm == "Combatant") {$AURA_Attach("Combatant"); $AURA_Combatant(tgt);};
-$IF (prm == "Map") {$AURA_Attach("XY"); $AURA_Location(X,Y);};
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,6,0,360);
-$AURA_Spell("Continual Light|Wizard");
-$AURA_Wavelength("Xray");
-$DELETE_COMBATANT_SA($IndexToActor(atk),"ContinualLightMageTargetXY");
[AURA_Enter] = $VAR sus;
-sus = $GET_COMBATANT_SA($CombatantContext(),"monster_LightSusceptible");
-$IF (sus == "-?-?-"){$RETURN;};
-$SET_COMBATANT_SA($CombatantContext(),"IsLightBlinded","");
[AURA_Exit] = $DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");
[Dispel] = $AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellCurse
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$IF ($RANDOM(20) +# 1 <# $GET_CHAR_THAC0(atk) -# $GET_CHAR_AC(tgt)){$RETURN;};
-cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-exp = $GET_PARTY_TIME() +# (10 *# lvl); $SET_CHARACTER_SA($TargetContext(),"isBestowedCurse",exp);
\(END)

\(BEGIN)
name = spellCurseMinor
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR mySide;
-mySide = $GET_COMBATANT_SA($AttackerContext(),"side");
-$IF (mySide ==# $GET_COMBATANT_SA($TargetContext(),"side")){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"isCursed",$GET_PARTY_TIME() +# 6);
\(END)

\(BEGIN)
name = spellDarkness15RadiusMage
[OverrideSpellTargeting] = $VAR p5; $VAR p6; $VAR lst; $VAR loc;
-p5 = $GET_HOOK_PARAM(5); p6 = $GET_HOOK_PARAM(6);
-$SET_HOOK_PARAM(1,"Select one of the following;");
-loc = "$"+p5+"$"+p6;
-lst = "$Map$Combatant";
-$SET_COMBATANT_SA($AttackerContext(),"Darkness15RadiusMageTargetXY",loc);
-$RETURN lst;
[ProcessSpellTargetOverride] = $VAR p5; $VAR atk; $VAR tgt;
-$VAR cls; $VAR lvl; $VAR adj; $VAR exp;
-p5 = $GET_HOOK_PARAM(5);
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-cls = $GET_CHAR_CLASS(atk); lvl = $GET_CHAR_Lvl(atk,cls) +# 10;
-adj = $DelimitedStringSubstring($SA_SPELL_GET("casterLevel"),1);
-exp = $GET_PARTY_TIME() +# lvl -# adj;
-$AURA_Create("spell_Darkness15RadiusMageAURA",p5,atk,tgt,exp);
\(END)

\(BEGIN)
name = spellDarkness15RadiusMageAURA
[AURA_Create] = $VAR atk; $VAR tgt; $VAR prm; $VAR pXY; $VAR X; $VAR Y;
-$DEBUG ("Light - AURA_Create");
-atk = $AURA_GetData(0);
-tgt = $AURA_GetData(1);
-prm = $SA_PARAM_GET();
-pXY = $SA_COMBATANT_GET("Darkness15RadiusMageTargetXY");
-X = $DelimitedStringSubstring(pXY,0);
-Y = $DelimitedStringSubstring(pXY,1);
-$IF (prm == "Combatant") {$AURA_Attach("Combatant"); $AURA_Combatant(tgt);};
-$IF (prm == "Map") {$AURA_Attach("XY"); $AURA_Location(X,Y);};
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,1,0,360);
-$AURA_Spell("Darkness 15' Radius|Wizard");
-$AURA_Wavelength("Xray");
-$DELETE_COMBATANT_SA($IndexToActor(atk),"Darkness15RadiusMageTargetXY");
[AURA_Enter] = $SET_COMBATANT_SA($CombatantContext(),"IsDarkBlinded","");
[AURA_Exit] = $DELETE_COMBATANT_SA($CombatantContext(),"IsDarkBlinded");
[AURA_Round] = $VAR exp;
-exp = $AURA_GetData(2);
-$IF ($GET_PARTY_TIME() ># exp)
-	{$AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsDarkBlinded");};
[Dispel] = $AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsDarkBlinded");
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellDarknessCleric
[OverrideSpellTargeting] = $VAR p5; $VAR p6; $VAR lst; $VAR loc;
-p5 = $GET_HOOK_PARAM(5); p6 = $GET_HOOK_PARAM(6);
-$SET_HOOK_PARAM(1,"Select one of the following;");
-loc = "$"+p5+"$"+p6;
-lst = "$Map$Combatant";
-$SET_COMBATANT_SA($AttackerContext(),"DarknessClericTargetXY",loc);
-$RETURN lst;
[ProcessSpellTargetOverride] = $VAR p5; $VAR atk; $VAR tgt;
-$VAR cls; $VAR lvl; $VAR adj; $VAR exp;
-p5 = $GET_HOOK_PARAM(5);
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-cls = $GET_CHAR_CLASS(atk); lvl = $GET_CHAR_Lvl(atk,cls) *# 10;
-adj = $DelimitedStringSubstring($SA_SPELL_GET("casterLevel"),1) *# 10;
-exp = $GET_PARTY_TIME() +# lvl -# adj;
-$AURA_Create("spell_DarknessClericAURA",p5,atk,tgt,exp);
\(END)

\(BEGIN)
name = spellDarknessClericAURA
[AURA_Create] = $VAR atk; $VAR tgt; $VAR prm; $VAR pXY; $VAR X; $VAR Y;
-$DEBUG ("Light - AURA_Create");
-atk = $AURA_GetData(0);
-tgt = $AURA_GetData(1);
-prm = $SA_PARAM_GET();
-pXY = $SA_COMBATANT_GET("DarknessClericTargetXY");
-X = $DelimitedStringSubstring(pXY,0);
-Y = $DelimitedStringSubstring(pXY,1);
-$DEBUG ("choice made = " +prm);
-$IF (prm == "Combatant") {$AURA_Attach("Combatant"); $AURA_Combatant(tgt);};
-$IF (prm == "Map") {$AURA_Attach("XY"); $AURA_Location(X,Y);};
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,2,0,360);
-$AURA_Spell("Darkness|Priest");
-$AURA_Wavelength("Xray");
-$DELETE_COMBATANT_SA($IndexToActor(atk),"DarknessClericTargetXY");
[AURA_Enter] = $VAR IR; $VAR UV; $VAR pIR; $VAR pUV;
-IR = $GET_COMBATANT_SA($CombatantContext(),"monster_Infravision");
-UV = $GET_COMBATANT_SA($CombatantContext(),"monster_Ultravision");
-pIR = $SkillAdj($CharacterContext(),"Infravsion" , "", "F", 0 );
-pUV = $SkillAdj($CharacterContext(),"Ultravision" , "", "F", 0 );
-$IF (IR != "-?-?-"){$RETURN;};
-$IF (UV != "-?-?-"){$RETURN;};
-$IF (pIR ># 0){$RETURN;};
-$IF (pUV ># 0){$RETURN;};
-$SET_COMBATANT_SA($CombatantContext(),"IsDarkBlinded","");
[AURA_Exit] = $DELETE_COMBATANT_SA($CombatantContext(),"IsDarkBlinded");
[AURA_Round] = $VAR exp;
-exp = $AURA_GetData(2);
-$IF ($GET_PARTY_TIME() ># exp)
-	{$AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsDarkBlinded");};
[Dispel] = $AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsDarkBlinded");
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellDeathSpell
[InvokeSpellOnTarget] = $VAR atk; $VAR lvl;
-atk = $IndexOf($AttackerContext()); lvl = $GET_CHAR_Lvl(atk,$SA_PARAM_GET());
-$SET_CHARACTER_SA($TargetContext(),"isDispellingEvil",$GET_PARTY_TIME() +# lvl);
-$SET_CHARACTER_SA($TargetContext(),"CanDispel",1);
\(END)

\(BEGIN)
name = spellDemiShadowMagic
[OverrideSpellSelection] = $RETURN "$Demi-Shadow Magic Missile$Demi-Shadow Fireball$Demi-Shadow Lightning Bolt$Demi-Shadow Cone of Cold$Demi-Shadow Cloudkill";
\(END)

\(BEGIN)
name = spellDetectMagic
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($TargetContext(),"isDetectingMagic",$GET_PARTY_TIME() +# $SA_SPELL_GET("time"));
\(END)

\(BEGIN)
name = spellDetectMagicMage
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR lvl; $VAR adj;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET();
-adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"isDetectingMagic",$GET_PARTY_TIME() +# (lvl *# 2));
\(END)

\(BEGIN)
name = spellDetectundead
[InvokeSpellOnTarget] = $VAR tgt;$VAR nm; $VAR monUn;
-tgt = $IndexOf($TargetContext()); nm = $GET_CHAR_NAME(tgt); monUn = $GET_CHAR_UNDEAD(tgt);
-$IF (monUn != ""){$SET_COMBATANT_SA($TargetContext(),"isDetectedUndead",nm);};
\(END)

\(BEGIN)
name = spellDimensionDoor
[InvokeSpellOnTarget] = $VAR atk;
-atk = $IndexOf($AttackerContext());
-$TeleportCombatant(atk,$GET_HOOK_PARAM(5),$GET_HOOK_PARAM(6));
[IsValidTarget] = $VAR me; $VAR x0; $VAR y0; $VAR x1; $VAR y1;
-me = $IndexOf($Myself()); x1 = $GET_HOOK_PARAM(5); y1 = $GET_HOOK_PARAM(6); x0 = $CombatantLocation(me,"X");
-y0 = $CombatantLocation(me,"Y"); $IF ($IsLineOfSight(x0,y0,x1,y1,1) != "1"){$RETURN "N";} $ELSE{$RETURN "";};
\(END)

\(BEGIN)
name = spellDisease
[InvokeSpellOnTarget] = $VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_Lvl(tgt,"paladin") >=# 1){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"isImmuneDisease") != "-?-?-"){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"isDiseased","Diseased");
\(END)

\(BEGIN)
name = spellDispel
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR nm; $VAR cls; $VAR cLvl; $VAR iLvl; $VAR dLvl; $VAR percent; $VAR rndm;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-nm = $GET_CHAR_NAME(tgt); cls = $SA_PARAM_GET(); cLvl = $GET_CHARACTER_SA($TargetContext(),"DispelLevel");
-iLvl = $GET_CHARACTER_SA($TargetContext(),"DispelLevelItem"); dLvl = $GET_CHAR_Lvl(atk,cls); rndm = $RANDOM(100) +# 1;
-// potions
-$IF (dLvl ># 21){$ForEachPossession($CharacterContext(),"itemPotion");};
-$IF (iLvl != "-?-?-"){cLvl = iLvl;};
-$IF (dLvl ># cLvl){percent = (dLvl -# cLvl) *# 5 +# 50;}
-$ELSE{percent = 50 -# (cLvl -# dLvl) *# 2;};
-$IF (rndm <=# percent){$ForEachPossession($CharacterContext(),"itemPotion");};
-// spells and spell effects
-$IF (dLvl ># cLvl){percent = (dLvl -# cLvl) *# 5 +# 50;}
-$ELSE{percent = 50 -# (cLvl -# dLvl) *# 2;};
-$IF (rndm <=# percent)
-	{
-		$RUN_CHAR_SCRIPTS(tgt,"Dispel");
-		$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
-		$SET_SPELL_SA($SpellContext(),"Dispelled","yes");
-		$RETURN;
-	};
[SpellLingeringScripts] = $VAR cLvl; $VAR dLvl; $VAR percent; $VAR rndm;
-$IF ($GET_SPELL_SA($SpellContext(),"Dispelled") != "-?-?-"){ $RETURN "RemoveLinger"; };
-cLvl = $GET_HOOK_PARAM(7); dLvl = $GET_HOOK_PARAM(6); rndm = $RANDOM(100) +# 1;
-$IF (dLvl ># cLvl){percent = (dLvl -# cLvl) *# 5 +# 50;}
-$ELSE{percent = 50 -# (cLvl -# dLvl) *# 2;};
-$IF (rndm <=# percent){$RETURN "RemoveLinger";};
\(END)

\(BEGIN)
name = spellDispelEvil
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; -$VAR lvl;
-atk = $IndexOf($AttackerContext()); lvl = $GET_CHAR_Lvl(atk,$SA_PARAM_GET());
-$SET_CHARACTER_SA($TargetContext(),"isDispellingEvil",$GET_PARTY_TIME() +# lvl);
-$SET_CHARACTER_SA($TargetContext(),"CanDispel",1);
\(END)

\(BEGIN)
name = spellDispelGood
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR lvl;
-atk = $IndexOf($AttackerContext()); lvl = $GET_CHAR_Lvl(atk,$SA_PARAM_GET());
-$SET_CHARACTER_SA($TargetContext(),"isDispellingGood",$GET_PARTY_TIME() +# lvl);
-$SET_CHARACTER_SA($TargetContext(),"CanDispel",1);
\(END)

\(BEGIN)
name = spellDrain
[InvokeSpellOnTarget] = $VAR tgt; $VAR bName; $VAR bLvl; $VAR bDie $VAR bNum; $VAR nm; $VAR monHit; $VAR rand;
-$VAR drain; $VAR prevDrain;
-tgt = $IndexOf($TargetContext()); bName = $GetHighestLevelBaseclass(tgt); bLvl = $GetBaseclassLevel(tgt,bName);
-nm = $GET_CHAR_NAME(tgt); $SET_CHAR_Lvl(tgt,bName,bLvl -# 1);
-$IF ((bLvl -# 1) <=# 0)
-	{$SET_CHAR_HITPOINTS(tgt,-11); $SET_CHAR_MAXHITPOINTS(tgt,-11); $SET_CHAR_STATUS(tgt,5); $RETURN ;};
-bDie = $RollHitPointDice(bName,bLvl,bLvl); 
-bNum = $DelimitedStringCount($GET_CHARACTER_SA($TargetContext(),"class_baseName"));
-$IF (bNum <# 1){bNum = 1;}; rand = $RANDOM(bDie) +# 1; drain = rand /# bNum;
-$IF (drain <# 1){drain = 1;};
-$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) -# drain);
-$IF ($GET_CHARACTER_SA($TargetContext(),"isDrained") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"isDrained","#$" + bName + "$" + bLvl + "$" + drain + "#$99");}
-$ELSE
-	{
-		prevDrain = $GET_CHARACTER_SA($TargetContext(),"isDrained");
-		$SET_CHARACTER_SA($TargetContext(),"isDrained","#$" + bName + "$" + bLvl + "$" + drain + prevDrain);
-	};
-$SET_CHAR_Exp(tgt,bName,$DAT_Baseclass_Experience(bName,bLvl -# 1));
\(END)

\(BEGIN)
name = spellDrainVamp
[InvokeSpellOnTarget] = $VAR trgt; $VAR bName; $VAR bLvl; $VAR bDie; $VAR bNum; $VAR nm; $VAR monHit; $VAR rand;
-$VAR drain; $VAR prevDrain;
-trgt = $IndexOf($TargetContext()); bName = $GetHighestLevelBaseclass(trgt); bLvl = $GetBaseclassLevel(trgt,bName);
-nm = $GET_CHAR_NAME(trgt); $SET_CHAR_Lvl(trgt,bName,bLvl -# 2);
-$IF ((bLvl -# 2) <=# 0)
-	{$SET_CHAR_HITPOINTS(trgt,-11); $SET_CHAR_MAXHITPOINTS(trgt,-11); $SET_CHAR_STATUS(trgt,5); $RETURN;};
-bDie = $RollHitPointDice(bName,bLvl,bLvl);  bNum = $DelimitedStringCount($GET_CHARACTER_SA($TargetContext(),"class_baseName"));
-$IF (bNum <# 1){bNum = 1;}; rand = $RANDOM(bDie) +# 1; drain = rand /# bNum; $IF (drain <# 1){drain = 1;};
-$SET_CHAR_MAXHITPOINTS(trgt,$GET_CHAR_MAXHITPOINTS(trgt) -# drain);
-$IF ($GET_CHARACTER_SA($TargetContext(),"isDrained") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"isDrained","#$" + bName + "$" + bLvl + "$" + drain + "#$99");}
-$ELSE
-	{
-		prevDrain = $GET_CHARACTER_SA($TargetContext(),"isDrained");
-		$SET_CHARACTER_SA($TargetContext(),"isDrained","#$" + bName + "$" + bLvl + "$" + drain + prevDrain);
-	};
-$SET_CHAR_Exp(trgt,bName,$DAT_Baseclass_Experience(bName,bLvl -# 1));
\(END)

\(BEGIN)
name = spellEnfeeble
[InvokeSpellOnTarget] = $VAR atk; $VAR lvl; $VAR cls;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_COMBATANT_SA($TargetContext(),"enfeebled",100 -# (22 +# lvl));
-$SET_COMBATANT_SA($TargetContext(),"isEnfeebled",$GET_PARTY_TIME() +# lvl);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

\(BEGIN)
name = spellEnlarge
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(), $GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR str; $VAR strMod; $VAR adjStr; $VAR adjStrMod;
-$VAR cls; $VAR adj; $VAR lvl; $VAR list1; $VAR list2;
-$IF ($GET_CHARACTER_SA($TargetContext(),"reduced") != "-?-?-")
-	{$RETURN $RUN_CHAR_SCRIPTS(tgt,"Dispel reduced");};
-$IF ($GET_COMBATANT_SA($TargetContext(),"side") != $GET_COMBATANT_SA($AttackerContext(),"side"))
-	{$IF ($SkillAdj($TargetContext(), "Save Vs SP", "", "F", "") == 1) {$RETURN;};};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); str = $GET_CHAR_LIMITED_STR(tgt);
-strMod = $GET_CHAR_LIMITED_STRMOD(tgt); adjStr = 18 -# str; adjStrMod = 100 -# strMod; cls = $SA_PARAM_GET();
-adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$IF (lvl ># 10) {lvl =# 10;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"myStr") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"myStr",$GET_CHAR_STR(tgt));
-		$SET_CHARACTER_SA($TargetContext(),"myStrMod",$GET_CHAR_STRMOD(tgt));
-	};
-$IF ($GET_CHARACTER_SA($TargetContext(),"mySize") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"mySize",$GET_CHAR_SIZE(tgt));};
-list1 = "|$18$0|$18$0|$18$01|$18$51|$18$76|$18$91|$18$100|$19$0|$20$0|$21$0|$22$0";
-list2 = $DelimitedStringSubstring(list1,lvl);
-$IF (str <# $DelimitedStringSubstring(list2,0))
-	{$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",adjStr,"MINUTES",10 *# lvl,"Enlarge STR","SPELL Enlarge STR");};
-str = $GET_CHAR_LIMITED_STR(tgt);
-$IF (str ==# 18)
-	{
-		$IF (strMod <# $DelimitedStringSubstring(list2,1))
-			{$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",adjStrMod,"MINUTES",10 *# lvl,"Enlarge STRMOD","SPELL Enlarge STRMOD");};
-	}
-$ELSE {$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",strMod -# strMod,"MINUTES",10 *# lvl,"Enlarge STRMOD","SPELL Enlarge STRMOD");};
-$IF (lvl ># 4) {$SET_CHAR_SIZE(tgt,2);};
-$SET_CHARACTER_SA($TargetContext(),"isEnlarged",lvl); $SET_CHARACTER_SA($TargetContext(),"enlarged",1);
\(END)

\(BEGIN)
name = spellEntangle
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[Entangled1] = $RETURN $SET_HOOK_PARAM(8 ,"Slowed by Plants");
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR adj; $VAR lvl; $VAR exp; // expiration time
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); cls = $SA_PARAM_GET();
-adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj; exp = $GET_PARTY_TIME() +# 10;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$IF ($SkillAdj($TargetContext(), "Save Vs SP", "", "F", "") ># $RANDOM(20))
-  {$SET_COMBATANT_SA($TargetContext(),"isEntangled0",exp);}
-$ELSE{$SET_COMBATANT_SA($TargetContext(),"isEntangled1",$GET_CHAR_MAXMOVE(tgt) /# 2);};
[MovementAdjustments] = $VAR speed;
-speed = $GET_HOOK_PARAM(5); speed = speed /# 2; $SET_HOOK_PARAM(5, speed);
[RemoveLinger] = $RETURN "AREA";
[SpellLingerBlockage] = $IF ($GET_COMBATANT_SA($CombatantContext(),"isEntangled1") != "-?-?-"){$RETURN "N";};
\(END)

\(BEGIN)
name = spellFalseSeeing
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext());
-cls = $GetHighestLevelBaseclass(atk);
-lvl = $GET_CHAR_Lvl(atk,cls);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsFalseSeeing",exp);
\(END)

\(BEGIN)
name = spellFear
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$SET_COMBATANT_SA($TargetContext(),"isAfraid","");
\(END)

\(BEGIN)
name = spellFireResistant
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($TargetContext(),"isResistantFire",exp);
[RemoveLinger] = $RETURN "TARGETS";
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellFireShield
[OverrideSpellSelection] = $RETURN "$Cold Fire Shield$Hot Fire Shield";
\(END)

\(BEGIN)
name = spellFireShieldCold
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR exp; $VAR atk; $VAR cls; $VAR lvl;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl); exp = $GET_PARTY_TIME(); exp = exp +# 2 +# lvl;
-$RETURN $SET_CHARACTER_SA($TargetContext(),"isFireShieldedCold", exp);
[RemoveLinger] = $RETURN "TARGETS";
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellFireShieldHot
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR exp; $VAR atk; $VAR cls; $VAR lvl;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl); exp = $GET_PARTY_TIME(); exp = exp +# 2 +# lvl;
-$RETURN $SET_CHARACTER_SA($TargetContext(),"isFireShieldedHot", exp);
[RemoveLinger] = $RETURN "TARGETS";
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellFixBlind
[FixCharacter] = $VAR blind;
-blind = $GET_CHARACTER_SA($CharacterContext(),"isBlind");
-$RETURN blind != "-?-?-";
Info = "cure blindness, heal for FIX";
\(END)

\(BEGIN)
name = spellFixCure
[FixCharacter] = $VAR chr; $VAR HP; $VAR maxHP;
-chr = $IndexOf($CharacterContext()); HP = $GET_CHAR_HITPOINTS(chr); maxHP = $GET_CHAR_MAXHITPOINTS(chr);
-$RETURN maxHP ># HP;
Info = "cure light/serious/critical wounds, heal for FIX";
\(END)

\(BEGIN)
name = spellFixCurse
[FixCharacter] = $VAR curse;
-curse = $GET_CHARACTER_SA($CharacterContext(),"isCursed"); $RETURN curse != "-?-?-";
Info = "remove curse for FIX";
\(END)

\(BEGIN)
name = spellFixDisease
[FixCharacter] = $VAR disease;
-disease = $GET_CHARACTER_SA($CharacterContext(),"isDiseased"); $RETURN disease != "-?-?-";
Info = "cure disease, heal for FIX";
\(END)

\(BEGIN)
name = spellFixDrain
[FixCharacter] = $VAR drain;
-drain = $GET_CHARACTER_SA($CharacterContext(),"isDrained"); $RETURN drain != "-?-?-";
Info = "restoration for FIX";
\(END)

\(BEGIN)
name = spellFixFeeblemind
[FixCharacter] = $VAR feeblemind;
-feeblemind = $GET_CHARACTER_SA($CharacterContext(),"isFeebleminded"); $RETURN feeblemind != "-?-?-";
Info = "heal for FIX";
\(END)

\(BEGIN)
name = spellFixPoison
[FixCharacter] = $VAR poison;
-poison = $GET_CHARACTER_SA($CharacterContext(),"isPoisoned"); $RETURN poison != "-?-?-";
Info = "slow/neutralize poison for FIX";
\(END)

\(BEGIN)
name = spellFixRaise
[FixCharacter] = $VAR chr; $VAR status;
-chr = $IndexOf($CharacterContext()); status = $GET_CHAR_STATUS(chr); $RETURN status ==# 2;
Info = "raise dead, resurrection for FIX";
\(END)

\(BEGIN)
name = spellFumble
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl); exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(), "isFumbling",exp);
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellGazeReflection
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($CharacterContext(), "isReflecting", "1");
\(END)

\(BEGIN)
name = spellGeas
[OverrideSpellSelection] = $RETURN "$Attack Your Enemies|Geas$Flee Combat|Geas";
\(END)

\(BEGIN)
name = spellGeasAttack
[InvokeSpellOnTarget] = $VAR tgt; $VAR iq;
-tgt = $IndexOf($TargetContext()); iq = $GET_CHAR_LIMITED_INT(tgt);
-$IF (iq ># 1) {$SET_COMBATANT_SA($TargetContext(),"IsGeasAttack","F");};
-$SetFriendly(tgt, $GET_COMBATANT_SA($Myself(),"side"));
\(END)

\(BEGIN)
name = spellGeasFlee
[InvokeSpellOnTarget] = $VAR tgt; $VAR iq; $VAR me;
-tgt = $IndexOf($TargetContext()); iq = $GET_CHAR_LIMITED_INT(tgt); 
-me = $IndexOf($AttackerContext());
-$IF (iq ># 1) {$SET_COMBATANT_SA($TargetContext(),"IsGeasFlee",me);};
\(END)

\(BEGIN)
name = spellHarm
[InvokeSpellOnTarget] = $IF ($GET_CHAR_UNDEAD($IndexOf($TargetContext())) != "none"){$RETURN;};
-$CastSpellOnTarget($TargetContext(),"HarmDisease");
\(END)

\(BEGIN)
name = spellHarmDisease
[InvokeSpellOnTarget] = $VAR tgt; $VAR minhp;
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"pcSTR") == "-?-?-")
-  {
-   $SET_CHARACTER_SA($TargetContext(),"pcSTR",$GET_CHAR_STR(tgt));
-   $SET_CHARACTER_SA($TargetContext(),"pcSTRMOD",$GET_CHAR_STRMOD(tgt));
-  };
-minhp = $GET_CHAR_MAXHITPOINTS(tgt) /# 10; $IF (minhp <# 1){minhp = 1;}; $SET_CHARACTER_SA($TargetContext(),"minhp",minhp);
-$SET_CHARACTER_SA($TargetContext(),"isDiseasedSpell",$GET_PARTY_TIME() +# (($RANDOM(6) +# 1) *# 10));
\(END)

\(BEGIN)
name = spellHaste
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_COMBATANT_SA($TargetContext(),"isFast",exp);
\(END)

\(BEGIN)
name = spellHeal
[InvokeSpellOnTarget] = $VAR tgt; $VAR hp; $VAR maxHP;
-tgt = $IndexOf($TargetContext()); hp = $GET_CHAR_HITPOINTS(tgt); maxHP = $GET_CHAR_MAXHITPOINTS(tgt);
-$IF ($GET_CHAR_UNDEAD(tgt) != "none") {$RETURN;}; $IF ($GET_CHAR_STATUS(tgt) ># 1) {$RETURN;};
-$DELETE_CHARACTER_SA($TargetContext(),"isBlind"); $DELETE_CHARACTER_SA($TargetContext(),"isDiseased");
-$DELETE_CHARACTER_SA($TargetContext(),"isDiseasedSpell"); $DELETE_CHARACTER_SA($TargetContext(),"isMummyDiseased");
-$DELETE_CHARACTER_SA($TargetContext(),"isFeebleminded");
-$IF (hp <# (maxHP -# 4)) {$SET_CHAR_STATUS(tgt,0); $SET_CHAR_HITPOINTS(tgt,(maxHP -# ($RANDOM(4)+#1)));}
-$ELSE {$SET_CHAR_STATUS(tgt,0); $SET_CHAR_HITPOINTS(tgt,(maxHP));};
\(END)

\(BEGIN)
name = spellHoldAnimal
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF($GET_CANBEHELDORCHARMED($TargetContext()) == "" || $GET_ISANIMAL($TargetContext()) == ""){$RETURN;};
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; exp = $GET_PARTY_TIME() +# (lvl *# 2); $SET_COMBATANT_SA($TargetContext(),"isHeld",exp);
\(END)

\(BEGIN)
name = spellHoldMonster
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR lvl; $VAR exp;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls);
-exp = $GET_PARTY_TIME() +# lvl; $SET_COMBATANT_SA($TargetContext(),"isHeld",exp);
\(END)

\(BEGIN)
name = spellHoldPersonCleric
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR adj;  $VAR lvl; $VAR exp; $VAR nm;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); nm = $GET_CHAR_NAME(tgt);
-$IF ($GET_MONSTERTYPE_SA(nm,"monsterLevel") != "-?-?-")
-	{  //  MONSTERTYPE_SA checks go here
-		$IF ($GET_MONSTERTYPE_SA(nm,"isPerson") == "-?-?-") {$RETURN;};
-	};
-cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-exp = $GET_PARTY_TIME() +# 4 +# lvl; $SET_COMBATANT_SA($TargetContext(),"isHeld",exp);
\(END)

\(BEGIN)
name = spellHoldPersonMU
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR nm; $VAR cls; $VAR lvl; $VAR exp;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;}; $IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); nm = $GET_CHAR_NAME(tgt);
-$IF ($GET_MONSTERTYPE_SA(nm,"monsterLevel") != "-?-?-")
-	{  //  MONSTERTYPE_SA checks go here
-		$IF ($GET_MONSTERTYPE_SA(nm,"isPerson") == "-?-?-") {$RETURN;};
-	};
-cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls); exp = $GET_PARTY_TIME() +# (lvl *# 2);
-$SET_COMBATANT_SA($TargetContext(),"isHeld",exp);
\(END)

\(BEGIN)
name = spellHoldUndead
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF($GET_IsAUndead($TargetContext()) == ""){$RETURN;};
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; exp = $GET_PARTY_TIME() +# (lvl +# $RANDOM(4) +# 1);
-$SET_COMBATANT_SA($TargetContext(),"isHeld",exp);
\(END)

\(BEGIN)
name = spellHolyWord
[InvokeSpellOnTarget] = $VAR pln; $VAR evl; $VAR tgt; $VAR lvl; $VAR rD; $VAR rS; $VAR rP;
-pln = $GET_COMBATANT_SA($TargetContext(),"Summoned");
-evl = $GET_COMBATANT_SA($TargetContext(),"monster_CombatantAlignment");
-$IF (pln != "plane"){$RETURN;};
-$IF (evl != "evil"){$RETURN;};
-tgt = $IndexOf($TargetContext());
-lvl = $GetHighestLevelBaseclass(tgt);
-rD = $RANDOM(4) +# 1;
-rD = $RANDOM(4) +#$RANDOM(4) +# 2;
-rD = ($RANDOM(4) +# 1) *# 10;
-$IF (lvl ># 11){$RETURN $SET_COMBATANT_SA($TargetContext(),"IsHolyDeafened",rD);};
-$IF (lvl ># 7){$RETURN $SET_COMBATANT_SA($TargetContext(),"IsHolyStunned",rS);};
-$IF (lvl ># 3){$RETURN $SET_COMBATANT_SA($TargetContext(),"IsParalyzed",rP);};
-$SET_CHAR_HITPOINTS(tgt,-11); $SET_CHAR_STATUS(tgt,5);
\(END)

\(BEGIN)
name = spellImmuneDragonBreath
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR lvl;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl); $SET_COMBATANT_SA($CombatantContext(),"isImmuneDB","4");
\(END)

\(BEGIN)
name = spellImmuneNormalMissiles
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls); $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($TargetContext(), "isImmuneNormalMissiles",exp);
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellImmuneSpells
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($CharacterContext(),"isImmuneSpells",exp);
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellImmuneSpellsMinor
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($CharacterContext(),"isImmuneSpellsMinor",exp);
\(END)

\(BEGIN)
name = spellIncendiaryCloud
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR rnd;
-$IF ($GET_CHARACTER_SA($TargetContext(),"elemental_ImmuneFire") != "-?-?-"){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"IsProtectedFireCaster") != "-?-?-"){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"IsProtectedFireTarget") != "-?-?-"){$RETURN;};
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); rnd = $GetCombatRound();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$SET_CHARACTER_SA($TargetContext(),"FierySave",$SkillAdj($TargetContext(), "Save Vs Spell", "", "F", ""));
-$SET_CHARACTER_SA($TargetContext(),"IsFieryCloudy",rnd); $SET_CHARACTER_SA($TargetContext(),"FieryLevel",lvl);
[RemoveLinger] = $RETURN "AREA";
[SpellLingerBlockage] = $IF ($GET_CHARACTER_SA($CharacterContext(),"elemental_ImmuneFire") != "-?-?-" || $SA_CHARACTER_GET("IsProtectedFireCaster") != "-?-?-" || $SA_CHARACTER_GET("IsProtectedFireTarget") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($CombatantContext(),"FierySave") != "-?-?-") {$RETURN "N";};
\(END)

\(BEGIN)
name = spellInsectPlagueDruid
[CheckProximity] = $VAR atk; $VAR tgt; $VAR range; $VAR distance; $VAR sVS; $VAR roll; $VAR bCls; $VAR lvl;
-atk = $GET_HOOK_PARAM(5); tgt = $GET_HOOK_PARAM(6); range = $SA_PARAM_GET(); distance = $VisualDistance(tgt, atk);
-$IF (range <# distance) {$RETURN;}; sVS = $SkillAdj($TargetContext(), "Save Vs SP", "", "F", "");
-roll = $RANDOM(20) +# 1; bCls = $GetHighestLevelBaseclass(tgt); lvl = $GetBaseclassLevel(tgt,bCls);
-$IF (lvl <# 3){$SET_COMBATANT_SA($TargetContext(),"isInsectFlee",atk);};
-$IF (lvl <# 6){$IF (sVS ># roll){$SET_COMBATANT_SA($TargetContext(),"isInsectFlee",atk);};};
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[RemoveLinger] = $RETURN "AREA";
\(END)

\(BEGIN)
name = spellInvisible
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$SET_CHARACTER_SA($TargetContext(),"isInvisibleSpell",2); $SET_COMBATANT_SA($TargetContext(),"isInvisible",2);
[RemoveLinger] = $RETURN "TARGETS";
\(END)

\(BEGIN)
name = spellInvisibleToAnimals
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($TargetContext(),"isInvisibleToAnimals",exp);
[RemoveLinger] = $RETURN "TARGETS";
\(END)

\(BEGIN)
name = spellLightCleric
[InvokeSpellOnTarget] = $VAR X; $VAR Y; $VAR atk; $VAR tgt; $VAR cls; $VAR lvl; $VAR adj; $VAR exp;
-X = $GET_HOOK_PARAM(5); Y = $GET_HOOK_PARAM(6);
-$SET_COMBATANT_SA($AttackerContext(),"LightClericTargetXY","$"+X+"$"+Y);
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-cls = $GET_CHAR_CLASS(atk); lvl = $GET_CHAR_Lvl(atk,cls) *# 10;
-adj = $DelimitedStringSubstring($SA_SPELL_GET("casterLevel"),1) *# 10;
-exp = $GET_PARTY_TIME() +# lvl -# adj;
-$AURA_Create("spell_LightClericAURA","",atk,tgt,exp);
\(END)

\(BEGIN)
name = spellLightClericAURA
[AURA_Create] = $VAR atk; $VAR tgt; $VAR prm; $VAR pXY; $VAR X; $VAR Y;
-$DEBUG ("Light - AURA_Create");
-atk = $AURA_GetData(0);
-tgt = $AURA_GetData(1);
-prm = $SA_PARAM_GET();
-pXY = $SA_COMBATANT_GET("LightClericTargetXY");
-X = $DelimitedStringSubstring(pXY,0);
-Y = $DelimitedStringSubstring(pXY,1);
-$DEBUG ("choice made = " +prm);
-$IF (prm == "Combatant") {$AURA_Attach("Combatant"); $AURA_Combatant(tgt);};
-$IF (prm == "Map") {$AURA_Attach("XY"); $AURA_Location(X,Y);};
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,2,0,360);
-$AURA_Spell("Light|Priest");
-$AURA_Wavelength("Xray");
-$DELETE_COMBATANT_SA($IndexToActor(atk),"LightClericTargetXY");
[AURA_Enter] = $VAR sus;
-sus = $GET_COMBATANT_SA($CombatantContext(),"monster_LightSusceptible");
-$IF (sus == "-?-?-"){$RETURN;};
-$SET_COMBATANT_SA($CombatantContext(),"IsLightBlinded","");
[AURA_Exit] = $DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");
[AURA_Round] = $VAR exp;
-exp = $AURA_GetData(2);
-$IF ($GET_PARTY_TIME() ># exp)
-	{$AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");};
[Dispel] = $AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");};
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellLightMage
[InvokeSpellOnTarget] = $VAR X; $VAR Y; $VAR atk; $VAR tgt; $VAR cls; $VAR lvl; $VAR adj; $VAR exp;
-X = $GET_HOOK_PARAM(5); Y = $GET_HOOK_PARAM(6);
-$SET_COMBATANT_SA($AttackerContext(),"LightMageTargetXY","$"+X+"$"+Y);
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-cls = $GET_CHAR_CLASS(atk); lvl = $GET_CHAR_Lvl(atk,cls) *# 10;
-adj = $DelimitedStringSubstring($SA_SPELL_GET("casterLevel"),1) *# 10;
-exp = $GET_PARTY_TIME() +# lvl -# adj;
-$AURA_Create("spell_LightMageAURA","",atk,tgt,exp);
\(END)

\(BEGIN)
name = spellLightMageAURA
[AURA_Create] = $VAR atk; $VAR tgt; $VAR prm; $VAR pXY; $VAR X; $VAR Y;
-atk = $AURA_GetData(0); tgt = $AURA_GetData(1);
-prm = $SA_PARAM_GET(); pXY = $SA_COMBATANT_GET("LightMageTargetXY");
-X = $DelimitedStringSubstring(pXY,0); Y = $DelimitedStringSubstring(pXY,1);
-$AURA_Attach("XY");
-$AURA_Location(X,Y);
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,2,0,360);
-$AURA_Spell("Light|MonsterMage");
-$AURA_Wavelength("Xray");
-$DELETE_COMBATANT_SA($IndexToActor(atk),"LightMageTargetXY");
[AURA_Enter] = $VAR sus;
-sus = $GET_COMBATANT_SA($CombatantContext(),"monster_LightSusceptible");
-$IF (sus == "-?-?-"){$RETURN;};
-$SET_COMBATANT_SA($CombatantContext(),"IsLightBlinded","");
[AURA_Exit] = $DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");
[AURA_Round] = $VAR exp;
-exp = $AURA_GetData(2);
-$IF ($GET_PARTY_TIME() ># exp)
-	{$AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");};
[Dispel] = $AURA_Destroy();$DELETE_COMBATANT_SA($CombatantContext(),"IsLightBlinded");
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellMassCharm
[InvokeSpellOnTarget] = $VAR side; $VAR atk; $VAR tgt; $VAR clvl; 
-$VAR nm; $VAR lvl; $VAR tlvl; $VAR bCls; $VAR cls; $VAR opr; $VAR rnd;
-opr = $GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart");
-$IF (opr == "-?-?-" || opr ==# 0)
-	{
-		$SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",5);
-		$SET_COMBATANT_SA($AttackerContext(),"PointPool",clvl *# 2);
-	};
-rnd = $GET_COMBATANT_SA($AttackerContext(),"PointPool");
-$IF (rnd <# 1) {$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1) {$RETURN;};
-side = $GET_COMBATANT_SA($AttackerContext(), "side");
-$IF ($GET_COMBATANT_SA($TargetContext(), "side") ==# side) {$RETURN;};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); cls = $SA_PARAM_GET();
-clvl = $GET_CHAR_Lvl(atk,cls); nm = $GET_CHAR_NAME(tgt); tlvl = $GET_MONSTERTYPE_SA(nm,"monsterLevel");
-$IF (tlvl != "-?-?-") {lvl = tlvl;}
-$ELSE {bCls = $GetHighestLevelBaseclass(tgt); lvl = $GetBaseclassLevel(tgt,bCls);};
-$IF (lvl ># rnd) {$RETURN;}
-$ELSE
-	{
-		$SET_COMBATANT_SA($AttackerContext(),"PointPool",rnd -# lvl);
-		$IF ($GET_CHARACTER_SA($TargetContext(),"saved" )) {$RETURN;};
-		$SetFriendly(tgt,side);
-		$SET_COMBATANT_SA($TargetContext(),"isCharmed",clvl);
-	};
\(END)

\(BEGIN)
name = spellMassmorph
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($CharacterContext(),"isMassmorphed",$GET_PARTY_TIME());
\(END)

\(BEGIN)
name = spellMindBlast
[InvokeSpellOnTarget] = $VAR exp;
-exp = $GetCombatRound() +# $RANDOM(9) +# 4; $SET_COMBATANT_SA($TargetContext(),"isStunned","Stunned");
\(END)

\(BEGIN)
name = spellMirrorImage
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR rndm; $VAR images;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-rndm = $RANDOM(100) +# 1 +# lvl; $IF (rndm ># 75){images = 4;}
-$ELSE {$IF (rndm ># 50){images = 3;} $ELSE {$IF (rndm ># 25){images = 2;} $ELSE{images = 1;};};};
-$IF ($GET_CHARACTER_SA($AttackerContext(),"isMirrored") == "-?-?-")
-  {$SET_CHARACTER_SA($AttackerContext(),"isMirrored",0);};
-$SET_CHARACTER_SA($AttackerContext(),"isMirrored",$GET_CHARACTER_SA($AttackerContext(),"isMirrored") +# images);
[RemoveLinger] = $RETURN "TARGETS";
\(END)

\(BEGIN)
name = spellMummyRot
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($TargetContext(),"isMummyDiseased",$GET_PARTY_DAYS() +# 30);
\(END)

\(BEGIN)
name = spellNeutralizePoison
[InvokeSpellOnTarget] = $VAR tgt;
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(), "isPoisoned") == "-?-?-"){$RETURN;};
-$DELETE_CHARACTER_SA($CharacterContext(),"isPoisoned");
-$IF ($GET_CHAR_HITPOINTS(tgt) <=# 0) {$SET_CHAR_HITPOINTS(tgt, "1"); $SET_CHAR_STATUS(tgt, "0");};
\(END)

\(BEGIN)
name = spellParalysis
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR nm;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); nm = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHARACTER_SA($TargetContext(),"isImmuneParalysis") != "-?-?-"){$RETURN;};
-$IF ($GET_MONSTERTYPE_SA(nm,"monsterImmuneParalysis") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($GET_CHAR_NAME(atk) == "Ghoul" && $GET_CHAR_RACE(tgt) == "Elf"){$RETURN;};
-$SET_COMBATANT_SA($TargetContext(),"isParalyzed","Paralyzed");
\(END)

\(BEGIN)
name = spellParalyzation
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($CharacterContext(),"isParalyzationed",$GET_PARTY_TIME());
\(END)

\(BEGIN)
name = spellPetrify
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($TargetContext(),"isPetrified","Petrified");
\(END)

\(BEGIN)
name = spellPoison
[InvokeSpellOnTarget] = $VAR tgt; $VAR time;
-tgt = $IndexOf($TargetContext()); time = $GET_PARTY_TIME();
-$IF ($SA_CHARACTER_GET("isImmunePoison") != "-?-?-"){$RETURN;};
-$IF ($SA_CHARACTER_GET("isProtectedPoisonCaster") != "-?-?-"){$RETURN;};
-$IF ($SA_CHARACTER_GET("isProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"isPoisoned",time);
-$SET_CHAR_STATUS(tgt,2); $SET_CHAR_HITPOINTS(tgt,"-11");
\(END)

\(BEGIN)
name = spellPowerWordKill
[ComputeDamage] = $VAR tgt; $VAR tgtHP;
-tgt = $IndexOf($TargetContext()); tgtHP = $GET_CHAR_HITPOINTS(tgt);
-$IF (tgtHP <=# 60){$RETURN tgtHP +# 11;};
\(END)

\(BEGIN)
name = spellPowerWordStun
[InvokeSpellOnTarget] = $VAR exp;
-exp = $GET_PARTY_TIME() +# $RANDOM(4) +# $RANDOM(4) +# 2; $SET_COMBATANT_SA($TargetContext(),"isStunned",exp);
\(END)

\(BEGIN)
name = spellPrayer
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($TargetContext(),"isPraying",exp);
\(END)

\(BEGIN)
name = spellProtectionFromEvil
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($TargetContext(),"isProtectedEvil",exp);
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellProtectionFromFire
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($CTER_SA($CharacterContext(),"isPoisoned");
-$IF ($GET_CHAR_HITPOINTS(tgt) <=# 0) {$SET_CHAR_HITPOINTS(tgt, "1"); $SET_CHAR_STATUS(tgt, "0");};
\(END)

\(BEGIN)
name = spellProtectionFromGood
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($TargetContext(),"isProtectedGood",exp);
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellProtectionFromLightning
[Dispel] = $SA_REMOVE();$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); cls = $SA_PARAM_GET();
-adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl); exp = $GET_PARTY_TIME() +# lvl *# 10;
-$IF (atk ==# tgt)
-	{
-		$SET_CHARACTER_SA($TargetContext(),"isProtectedLightningCaster",exp);
-		$SET_CHARACTER_SA($TargetContext(),"FirePoints",lvl *# 12);
-	}
-$ELSE{$SET_CHARACTER_SA($TargetContext(),"isProtectedLightningTarget",exp);};
[RemoveLinger] = $RETURN "TARGETS";
\(END)

\(BEGIN)
name = spellPurpleWormBite
ComputeDamage = $IF ($SA_COMBATANT_GET("purpleBite") ==# 20)
-  {$SET_HOOK_PARAM(7,"Swalows it's victim whole!"); $RETURN "500";};
DoesAttackSucceed = $RETURN $SET_COMBATANT_SA($TargetContext(),"purpleBite",$GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellPyrotechnics
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR lvl; $VAR adj;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = 0;
-$IF (cls == "ranger"){adj = 8;};
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"IsBlindPyrotechnics",$GET_PARTY_TIME() +# lvl);
\(END)

\(BEGIN)
name = spellRaiseDead
[InvokeSpellOnTarget] = $VAR tgt; $VAR type; $VAR CON; $VAR raised; $VAR list; $VAR pct;
-tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($TargetContext(),"mummy") == 1)
-	{ // Mummy Swap
-		$AddCombatant("Ancient Fighter",0);
-		$TeleportCombatant($IndexOf($Name("Ancient Fighter")),$GET_HOOK_PARAM(5),$GET_HOOK_PARAM(6));
-		$DELETE_COMBATANT_SA($TargetContext(),"mummy"); $RETURN;
-	};
-$IF ($GET_CHAR_STATUS(tgt) !=# 2){$RETURN;};
-CON = $GET_CHAR_LIMITED_CON(tgt); raised = $GET_CHARACTER_SA($TargetContext(),"raised");
-$IF (raised == "-?-?-"){raised = CON;}
-$ELSE {raised = raised -# 1;};
-$IF (raised <# 1 || $GET_CHAR_RACE(tgt) == "Elf"){$RETURN $SET_CHAR_STATUS(tgt,5);};
-$SET_CHARACTER_SA($TargetContext(),"raised",raised);
-list = "$0$30$35$40$45$50$55$60$65$70$75$80$85$90$92$94$96$98$100$100$100$100$100$100$100$100";
-pct = $DelimitedStringSubstring(list,CON);
-$IF (pct <# $RANDOM(100) +# 1){$RETURN $SET_CHAR_STATUS(tgt,5);};
-$SET_CHAR_PERM_CON(tgt,CON -# 1); $SET_CHAR_HITPOINTS(tgt,1); $SET_CHAR_STATUS(tgt,1);
\(END)

\(BEGIN)
name = spellReadMagic
[CanIdentify] = $IF ($GET_ITEM_SA($ItemContext(), "itemScroll" ) != "-?-?-") {$RETURN "Y";};
[Identify] = $SA_REMOVE();
-$RETURN "Y";
\(END)

\(BEGIN)
name = spellReduce
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5 ));
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR adj; $VAR lvl; $VAR str; $VAR strMod; $VAR adjStr;
-$IF ($GET_CHARACTER_SA($TargetContext(),"enlarged") != "-?-?-") {$RETURN $RUN_CHAR_SCRIPTS(tgt,"Dispel enlarged");};
-$IF ($GET_COMBATANT_SA($TargetContext(),"side") != $GET_COMBATANT_SA($AttackerContext(),"side"))
-	{$IF ($SkillAdj($TargetContext(), "Save Vs SP", "", "F", "") == 1) {$RETURN;};};
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); cls = $SA_PARAM_GET();
-adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-str = $GET_CHAR_LIMITED_STR(tgt); strMod = $GET_CHAR_LIMITED_STRMOD(tgt); adjStr = str -# 6;
-$IF (lvl ># 10) {lvl =# 10;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"myStr") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"myStr",$GET_CHAR_STR(tgt));
-		$SET_CHARACTER_SA($TargetContext(),"myStrMod",$GET_CHAR_STRMOD(tgt));
-	};
-$IF ($GET_CHARACTER_SA($TargetContext(),"mySize") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"mySize",$GET_CHAR_SIZE(tgt));};
-$IF ($GET_CHAR_SIZE(tgt) ># 0){$SET_CHAR_SIZE(tgt, 0);};
-$IF ($GET_CHAR_LIMITED_STR(tgt) ># 6)
-	{
-		$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",adjStr,"MINUTES",10 *# lvl,"Reduce STR","SPELL Reduce STR");
-		$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",-strMod,"MINUTES",10 *# lvl,"Reduce STRMOD","SPELL Reduce STRMOD");
-	};
-$SET_CHARACTER_SA($TargetContext(),"isReduced",lvl); $SET_CHARACTER_SA($TargetContext(),"reduced",1);
\(END)

\(BEGIN)
name = spellRegenerate
[InvokeSpellOnTarget]= $VAR tgt; $VAR hp; $VAR maxHp;
-tgt = $IndexOf($TargetContext()); hp = $GET_CHAR_HITPOINTS(tgt); maxHp = $GET_CHAR_MAXHITPOINTS(tgt);
-$IF (hp <# maxHp) {$SET_CHAR_HITPOINTS(tgt,maxHp);};
-$DELETE_CHARACTER_SA($TargetContext(),"IsWithered");
-$DELETE_CHARACTER_SA($TargetContext(),"IsMissingFinger");
\(END)

\(BEGIN)
name = spellRemoveBlindness
[InvokeSpellOnTarget] = $DELETE_CHARACTER_SA($CharacterContext(),"isBlind");
\(END)

\(BEGIN)
name = spellRemoveDisease
[InvokeSpellOnTarget] = $DELETE_CHARACTER_SA($TargetContext(),"isDiseased");
\(END)

\(BEGIN)
name = spellRemoveFearCleric
[InvokeSpellOnTarget] = $VAR exp; $VAR afr;
-exp = $GET_PARTY_TIME() +# 10;
-afr = $GET_COMBATANT_SA($TargetContext(),"IsAfraid");
-$IF (afr != "-?-?-") {$RETURN $DELETE_COMBATANT_SA($TargetContext(),"IsAfraid");};
-$SET_COMBATANT_SA($TargetContext(),"IsBrave",exp);
\(END)

\(BEGIN)
name = spellRemoveFeeblemind
[InvokeSpellOnTarget] = $VAR tgt;
-tgt = $IndexOf($TargetContext()); $DELETE_CHARACTER_SA($TargetContext(),"isFeebleminded");
-$REMOVE_CHAR_MODIFICATION(tgt,"SPELL Feeblemind");
\(END)

\(BEGIN)
name = spellRemovePetrified
[InvokeSpellOnTarget] = $DELETE_CHARACTER_SA($CharacterContext(),"isPetrified");
\(END)

\(BEGIN)
name = spellRestoration
[InvokeSpellOnTarget] = $VAR tgt; $VAR feebled; $VAR drained; $VAR head; $VAR cls; $VAR level; $VAR
-hp; $VAR done; $VAR tHP; $VAR tMaxHP; tgt = $IndexOf($TargetContext()); done = 0;
-drained = $GET_CHARACTER_SA($TargetContext(),"isDrained");
-$IF (drained != "-?-?-")
-	{
-		tHP = $GET_CHAR_HITPOINTS(tgt); tMaxHP = $GET_CHAR_MAXHITPOINTS(tgt); $WHILE (done <# 1)
-			{
-				head = $DelimitedStringHead(drained); cls = $DelimitedStringSubstring(head,0);
-				$IF ($GET_CHAR_Lvl(tgt,cls) <# $DelimitedStringSubstring(head,1))
-					{
-						level = $DelimitedStringSubstring(head,1); $SET_CHAR_Lvl(tgt,cls,level);
-						$SET_CHAR_Exp(tgt,class,$DAT_Baseclass_Experience(cls,level)); hp = $DelimitedStringSubstring(head,2);
-						$SET_CHAR_MAXHITPOINTS(tgt,tMaxHP +# hp); $SET_CHAR_HITPOINTS(tgt,tHP +# hp);  done = 2;
-					};
-				$SET_CHARACTER_SA($TargetContext(),"isDrained",$DelimitedStringTail(drained));
-				$IF ($GET_CHARACTER_SA($TargetContext(),"isDrained") == "$|99")
-					{$DELETE_CHARACTER_SA($TargetContext(),"isDrained"); done = 3;};
-			};
-	};
\(END)

\(BEGIN)
name = spellResurrection
[InvokeSpellOnTarget] = $VAR tgt; $VAR monName; $VAR monLvl; $VAR CON; $VAR pct;
-tgt = $IndexOf($TargetContext());
-$IF ($InParty($Myself())){$SET_CHAR_AGE($MyIndex(), ($GET_CHAR_AGE($MyIndex()) +# 3));};
-monName = $GET_CHAR_NAME(tgt); monLvl = $GET_MONSTERTYPE_SA(monName,"monsterLevel"); 
-$IF (monLvl != "-?-?-") 
-	{
-		$IF (monName == "Ghast"||monName == "Ghoul"||monName == "Skeleton"||monName == "Wight"||monName == "Wraith"||monName == "Zombie")
-			{$SET_CHAR_STATUS(tgt, 2); $SET_CHAR_HITPOINTS(tgt, "-11"); $RETURN;};
-		$IF (monName == "Mummy")
-			{$SET_CHAR_HITPOINTS(tgt, "-11"); $SET_CHAR_STATUS(tgt, 2); $AddCombatant("Ancient Fighter", 0 );};
-	};
-$IF (monLvl == "-?-?-")
-	{
-		$IF ($GET_CHAR_RACE(tgt) == "Elf"){$RETURN;}; $IF ($GET_CHAR_STATUS(tgt) !=# 2){$RETURN;};
-		CON = $GET_CHAR_LIMITED_CON(tgt); pct = 0;
-		$IF (CON ># 0){pct = 30;}; $IF (CON ># 1){pct = 35;}; $IF (CON ># 2){pct = 40;}; $IF (CON ># 3){pct = 45;};
-		$IF (CON ># 4){pct = 50;}; $IF (CON ># 5){pct = 55;}; $IF (CON ># 6){pct = 60;}; $IF (CON ># 7){pct = 65;};
-		$IF (CON ># 8){pct = 70;}; $IF (CON ># 9){pct = 75;}; $IF (CON ># 10){pct = 80;}; $IF (CON ># 11){pct = 85;};
-		$IF (CON ># 12){pct = 90;}; $IF (CON ># 13){pct = 92;}; $IF (CON ># 14){pct = 94;}; $IF (CON ># 15){pct = 96;};
-		$IF (CON ># 16){pct = 98;}; $IF (CON ># 17){pct = 100;};
-		$IF (pct <# ($RANDOM(100) +# 1)){$SET_CHAR_STATUS(tgt, 5); $RETURN;}
-		$ELSE
-			{$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_MAXHITPOINTS(tgt)); $SET_CHAR_STATUS(tgt, 0); $RETURN;};
-	};
\(END)

\(BEGIN)
name = spellSeeIllusion
[InvokeSpellOnTarget] = $SET_CHARACTER_SA($TargetContext(),"isSeeingIllusions","");
\(END)

\(BEGIN)
name = spellSeeInvisible
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($TargetContext(),"isSeeingInvisible",exp);
\(END)

\(BEGIN)
name = spellShadowDoor
[AutoAction] = $RETURN "F + $IndexOf($LEAST_DAMAGED_ENEMY())";
[IsValidTarget] = $RETURN "N";
\(END)

\(BEGIN)
name = spellShadowMagic
[OverrideSpellSelection] = $RETURN "$Shadow Magic Missile$Shadow Fireball$Shadow Lightning Bolt$Shadow Cone of Cold";
\(END)

\(BEGIN)
name = spellShield
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl); exp = $GET_PARTY_TIME() +# lvl *# 5;
-$SET_CHARACTER_SA($TargetContext(),"isShielded",exp);
[RemoveLinger] = $RETURN "TARGETS";
\(END)

\(BEGIN)
name = spellSilence
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_COMBATANT_SA($TargetContext(), "isSilenced",exp);
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellSleep
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR nm; $VAR index; $VAR lvl; $VAR tLevel;
-$VAR bCls; $VAR opr; $VAR round; $VAR pv; $VAR adj;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_STATUS(tgt) != 0){$RETURN;}; $IF ($GET_CHAR_UNDEAD(tgt) != "none"){$RETURN;};
-nm = $GET_CHAR_NAME(tgt); $IF ($GET_MONSTERTYPE_SA(nm,"monsterImmuneSleep") != "-?-?-") {$RETURN;};
-$IF ($GET_COMBATANT_SA($TargetContext(),"isSleeping") != "-?-?-") {$RETURN;};
-opr = $GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart");
-$IF (opr  == "-?-?-" || opr  <# 2)
-	{
-		$SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",5);
-		round = ($RANDOM(4) +# $RANDOM(4) +# $RANDOM(4) +# $RANDOM(4) +# 4);
-		$SET_COMBATANT_SA( $AttackerContext(), "PointPool", round);
-	};
-round = $GET_COMBATANT_SA($AttackerContext(), "PointPool"); $IF (round <# 1){$RETURN;};
-tLevel = $GET_MONSTERTYPE_SA(nm,"monsterLevel"); $IF (tLevel != "-?-?-") {lvl = tLevel;}
-$ELSE {bCls = $GetHighestLevelBaseclass(tgt); lvl = $GetBaseclassLevel(tgt,bCls);};
-$IF (lvl ># 0){pv =# 1;}; $IF (lvl ># 1){pv =# 2;}; $IF (lvl ># 2){pv =# 4;};
-$IF (lvl ># 3){pv =# 6;}; $IF (lvl ># 4){pv = "";};
-$IF (pv != "" )
-	{
-		$IF ( round >=# pv )
-			{
-				round = round -# pv; $SET_COMBATANT_SA($AttackerContext(),"PointPool",round);
-				$SET_COMBATANT_SA($TargetContext(),"isSleeping","Sleeping");
-			};
-	};
-adj = $GET_SPELL_SA($SpellContext(),"adjLevel"); lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

\(BEGIN)
name = spellSlow
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl; $SET_CHARACTER_SA($TargetContext(),"isSlow",exp);
[SpellDuration] = $SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = spellSlowPoison
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp; $VAR isPsnd;
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl *# 60; isPsnd = $GET_CHARACTER_SA($TargetContext(), "isPoisoned");
-$IF (isPsnd != "-?-?-") {$IF (isPsnd <# (exp +# lvl)){$RETURN $SET_CHARACTER_SA($TargetContext(),"isSlowedPoisoned",exp);};};
\(END)

\(BEGIN)
name = spellSnakeCharm
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl; $VAR exp;
-$IF ($GET_COMBATANT_SA($TargetContext(),"isSnake") == "-?-?-"){$RETURN;};
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
\(END)

\(BEGIN)
name = spellStinkingCloud
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR adj; $VAR lvl;
-$IF ($GET_CHARACTER_SA($TargetContext(),"isImmunePoison") != "-?-?-"){$RETURN;};
-$IF ($GET_HASPOISONIMMUNITY($TargetContext()) == 1){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"isProtectedPoisonCaster") != "-?-?-"){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"isProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-atk = $IndexOf($AttackerContext()); cls = $SA_PARAM_GET(); adj = $GET_SPELL_SA($SpellContext(),"adjLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj; $SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$IF ($GET_COMBATANT_SA($TargetContext(),"StinkingSave") == "-?-?-")
-  {
-   $SET_COMBATANT_SA($TargetContext(),"StinkingSave",$SkillAdj($TargetContext(), "Save Vs PPDM", "", "F", ""));
-   $IF ($GET_COMBATANT_SA($TargetContext(),"StinkingSave") != 1)
-     {$SET_COMBATANT_SA($TargetContext(),"isStinkingStuck",$GetCombatRound() +# $RANDOM(4) +# 2);};
-  };
-$IF ($GET_COMBATANT_SA($TargetContext(),"StinkingSave") == 1)
-  {$SET_CHARACTER_SA($TargetContext(),"isStinkingCloudy",$GetCombatRound());};
[RemoveLinger] = $RETURN "AREA";
[SpellLingerBlockage] = $IF ($GET_CHARACTER_SA($CombatantContext(),"isImmunePoison") != "-?-?-" || $GET_HASPOISONIMMUNITY($CombatantContext()) == 1 || $SA_CHARACTER_GET("isProtectedPoisonCaster") != "-?-?-" || $SA_CHARACTER_GET("isProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-$IF ($GET_COMBATANT_SA($CombatantContext(),"StinkingSave") != "-?-?-") {$RETURN "N";};
[StinkAdjust] = $SET_HOOK_PARAM(6, "N");
[StinkingCloudy] = $RETURN $SET_HOOK_PARAM(8 ,"Coughing");
[StinkingStuck] = $RETURN $SET_HOOK_PARAM(8 ,"Coughing Uncontrollably");
\(END)

\(BEGIN)
name = spellSummon1
[CharDisplayStatus] = $SET_HOOK_PARAM(7, ""); $SET_HOOK_PARAM(6, ""); $RETURN "1";
[InvokeSpellOnTarget] = $VAR rndmRnd;
-rndmRnd = $RANDOM(4) +# $GetCombatRound(); $SET_COMBATANT_SA($TargetContext(), "summoning1", rndmRnd);
\(END)

\(BEGIN)
name = spellSummon2
[CharDisplayStatus] = $SET_HOOK_PARAM(7, ""); $SET_HOOK_PARAM(6, ""); $RETURN "1";
[InvokeSpellOnTarget] = $VAR rndmRnd;
-rndmRnd = $RANDOM(4) +# $GetCombatRound(); $SET_COMBATANT_SA($TargetContext(), "summoning2", rndmRnd);
\(END)

\(BEGIN)
name = spellSummon3
[CharDisplayStatus] = $SET_HOOK_PARAM(7, ""); $SET_HOOK_PARAM(6, ""); $RETURN "1";
[InvokeSpellOnTarget] = $VAR rndmRnd;
-rndmRnd = $RANDOM(4) +# $GetCombatRound(); $SET_COMBATANT_SA($TargetContext(), "summoning3", rndmRnd);
\(END)

\(BEGIN)
name = spellSummon4
[CharDisplayStatus] = $SET_HOOK_PARAM(7, ""); $SET_HOOK_PARAM(6, ""); $RETURN "1";
[InvokeSpellOnTarget] = $VAR rndmRnd;
-rndmRnd = $RANDOM(3) +# $GetCombatRound(); $SET_COMBATANT_SA($TargetContext(), "summoning4", rndmRnd);
\(END)

\(BEGIN)
name = spellSummon5
[CharDisplayStatus] = $SET_HOOK_PARAM(7, ""); $SET_HOOK_PARAM(6, ""); $RETURN "1";
[InvokeSpellOnTarget] = $VAR rndmRnd;
-rndmRnd = $RANDOM(3) +# $GetCombatRound(); $SET_COMBATANT_SA($TargetContext(), "summoning5", rndmRnd);
\(END)

\(BEGIN)
name = spellSummon6
[CharDisplayStatus] = $SET_HOOK_PARAM(7, ""); $SET_HOOK_PARAM(6, ""); $RETURN "1";
[InvokeSpellOnTarget] = $VAR rndmRnd;
-rndmRnd = $RANDOM(3) +# $GetCombatRound(); $SET_COMBATANT_SA($TargetContext(), "summoning6", rndmRnd);
\(END)

\(BEGIN)
name = spellSummon7
[CharDisplayStatus] = $SET_HOOK_PARAM(7, ""); $SET_HOOK_PARAM(6, ""); $RETURN "1";
[InvokeSpellOnTarget] = $VAR rndmRnd;
-rndmRnd = $RANDOM(2) +# $GetCombatRound(); $SET_COMBATANT_SA($TargetContext(), "summoning7", rndmRnd);
\(END)

\(BEGIN)
name = spellSummonAnimal1
[InvokeSpellOnTarget] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR sCount;
-list = "$Wild Dog$Owl"; count = $DelimitedStringCount(list); n = $RANDOM(count); monster1 = $DelimitedStringSubstring(list,n);
-sCount = $RANDOM(8); $WHILE (sCount >=# 0) {$AddCombatant(monster1,"1"); sCount = sCount -# 1;};
\(END)

\(BEGIN)
name = spellSummonAnimal2
[InvokeSpellOnTarget] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR sCount;
-list = "$Brown Bear$Giant Badger"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); sCount = $RANDOM(6);
-$WHILE (sCount >=# 0) {$AddCombatant(monster1,"1"); sCount = sCount -# 1;};
\(END)

\(BEGIN)
name = spellSummonAnimal3
[InvokeSpellOnTarget] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR sCount;
-list = "$Elephant$Rhinoceros"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); sCount = $RANDOM(4);
-$WHILE (sCount >=# 0) {$AddCombatant(monster1,"1"); sCount = sCount -# 1;};
\(END)

\(BEGIN)
name = spellSummonDemiShadowMonsters
[InvokeSpellOnTarget] = $VAR list; $VAR count; $VAR n; $VAR caster; $VAR class; $VAR hd; $VAR string; $VAR monster; $VAR sCount;
-list = "#$Demi-Shadow Orc$1#$Demi-Shadow Wolf$2#$Demi-Shadow Yeti$4"; count = $DelimitedStringCount(list);
-n = $RANDOM(count); caster = $IndexOf($AttackerContext()); class = $SA_PARAM_GET(); string = $DelimitedStringSubstring(list,n);
-monster = $DelimitedStringSubstring(string,0); hd = $DelimitedStringSubstring(string,1);
-sCount = $GET_CHAR_Lvl(caster,class) /# hd; $WHILE (sCount >=# 0) {$AddCombatant(monster,"1"); sCount = sCount -# 1;};
\(END)

\(BEGIN)
name = spellSummonElementalAir
[InvokeSpellOnTarget] = $AddCombatant("Air Elemental","1");
\(END)

\(BEGIN)
name = spellSummonElementalEarth
[InvokeSpellOnTarget] = $AddCombatant("Earth Elemental","1");
\(END)

\(BEGIN)
name = spellSummonElementalFire
[InvokeSpellOnTarget] = $AddCombatant("Fire Elemental",1);
\(END)

\(BEGIN)
name = spellSummonElementalWater
[InvokeSpellOnTarget] = $AddCombatant("Water Elemental",1);
\(END)

\(BEGIN)
name = spellSummonInvisibleStalker
[InvokeSpellOnTarget] = $AddCombatant("Invisible Stalker","1");
\(END)

\(BEGIN)
name = spellSummonShades
[InvokeSpellOnTarget] = $VAR list; $VAR count; $VAR n; $VAR caster; $VAR class; $VAR hd; $VAR string; $VAR monster; $VAR sCount;
-list = "#$Shade Hobgoblin$2#$Shade Imp$1#$Shade Worg$4"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-caster = $IndexOf($AttackerContext()); class = $SA_PARAM_GET(); string = $DelimitedStringSubstring(list,n);
-monster = $DelimitedStringSubstring(string,0); hd = $DelimitedStringSubstring(string,1);
-sCount = $GET_CHAR_Lvl(caster,class) /# hd; $WHILE (sCount >=# 0) {$AddCombatant(monster,"1"); sCount = sCount -# 1;};
\(END)

\(BEGIN)
name = spellSummonShadow
[InvokeSpellOnTarget] = $VAR list; $VAR caster; $VAR class; $VAR sCount;
-list = "$Shadow"; caster = $IndexOf($AttackerContext()); class = $SA_PARAM_GET(); sCount = $GET_CHAR_Lvl(caster,class") /# 3;
-$WHILE (sCount >=# 0) {$AddCombatant("Shadow","1"); sCount = sCount -# 1;};
\(END)

\(BEGIN)
name = spellSummonShadowMonsters
[InvokeSpellOnTarget] = $VAR list; $VAR count; $VAR n; $VAR caster; $VAR class; $VAR hd; $VAR string; $VAR monster; $VAR sCount;
-list = "#$Shadow Gnoll$2#$Shadow Goblin$1#$Shadow Ogre$4"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-caster = $IndexOf($AttackerContext()); class = $SA_PARAM_GET(); string = $DelimitedStringSubstring(list,n);
-monster = $DelimitedStringSubstring(string,0); hd = $DelimitedStringSubstring(string,1);
-sCount = $GET_CHAR_Lvl(caster,class) /# hd; $WHILE (sCount >=# 0) {$AddCombatant(monster,"1"); sCount = sCount -# 1;};
\(END)

\(BEGIN)
name = spellSymbol
[OverrideSpellSelection] = $RETURN "$Symbol of Hopelessness$Symbol of Pain$Symbol of Persuasion";
\(END)

\(BEGIN)
name = spellTrueSeeing
[InvokeSpellOnTarget] = $VAR atk; $VAR cls; $VAR lvl; $VAR exp;
-atk = $IndexOf($AttackerContext());
-cls = $GetHighestLevelBaseclass(atk);
-lvl = $GET_CHAR_Lvl(atk,cls);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsDetectingEvil",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsDetectingGood",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsDetectingIllusion",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsDetectingMagic",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsDetectingSecretDoors",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsKnowingAlignment",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsSeeingAstral",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsSeeingDisplaced",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsSeeingEthereal",exp);
-$SET_CHARACTER_SA($TargetContext(),"IsSeeingInvisible",exp);
\(END)

\(BEGIN)
name = spellUnholyWord
[InvokeSpellOnTarget] = $VAR pln; $VAR good; $VAR tgt; $VAR lvl; $VAR rD; $VAR rS; $VAR rP;
-pln = $GET_COMBATANT_SA($TargetContext(),"Summoned");
-good = $GET_COMBATANT_SA($TargetContext(),"monster_CombatantAlignment");
-$IF (pln != "plane"){$RETURN;};
-$IF (good != "good"){$RETURN;};
-tgt = $IndexOf($TargetContext());
-lvl = $GetHighestLevelBaseclass(tgt);
-rD = $RANDOM(4) +# 1;
-rD = $RANDOM(4) +#$RANDOM(4) +# 2;
-rD = ($RANDOM(4) +# 1) *# 10;
-$IF (lvl ># 11){$RETURN $SET_COMBATANT_SA($TargetContext(),"IsHolyDeafened",rD);};
-$IF (lvl ># 7){$RETURN $SET_COMBATANT_SA($TargetContext(),"IsHolyStunned",rS);};
-$IF (lvl ># 3){$RETURN $SET_COMBATANT_SA($TargetContext(),"IsParalyzed",rP);};
-$SET_CHAR_HITPOINTS(tgt,-11); $SET_CHAR_STATUS(tgt,5);
\(END)


\(BEGIN)
name = spellUnlock
[OpenLocks] = $RETURN "Y";
\(END)

\(BEGIN)
name = spellVampiricTouch
[ComputeSpellDamage] = $VAR atk; $VAR tgt; $VAR nm; $VAR cls; VAR lvl; $VAR count; $VAR hp;
-$VAR atkHp; $VAR atkMaxHp; $VAR tempPool;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext()); nm = $GET_CHAR_NAME(tgt); cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls); $IF (lvl ># 12){lvl ==# 12;}; hp = 0; count = lvl /# 2;
-$WHILE (count ># 0) {hp = hp +# $RANDOM(6) +# $RANDOM(6) +# 2; count = count -# 1;};
-atkHp = $GET_CHAR_HITPOINTS(atk) +# hp; atkMaxHp = $GET_CHAR_MAXHITPOINTS(atk);
-$IF(atkHp <# atkMaxHp) {$SET_CHAR_HITPOINTS(atk,atkHp);}
-$ELSE
-	{
-		$SET_CHAR_HITPOINT(atk,atkMaxHp); tempPool = $GET_CHARACTER_SA(atk,"TempHPPool");
-		$IF (tempPool == "-?-?-"){tempPool ==# 0;};
-		$SET_CHARACTER_SA($AttackerContext(),"TempHPPool",tempPool +# atkHp -# atkMaxHp);
-	};
-$RETURN hp;
\(END)

\(BEGIN)
name = spellWeb
[Dispel] = $SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR cls; $VAR adj; $VAR lvl;
-$VAR exp; $VAR time;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-exp = $GET_PARTY_TIME() +# 10;
-time = $GET_PARTY_TIME();
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$IF ($GET_CHARACTER_SA($TargetContext(),"webSaveFailed") != "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"IsWebbed",exp);
-		$SET_CHARACTER_SA($TargetContext(),"IsWebbedTime",time);
-		$DELETE_CHARACTER_SA($TargetContext(),"webSaveFailed");
-	};
[RemoveLinger] = $RETURN "AREA";
\(END)

\(BEGIN)
name = spellWither
[InvokeSpellOnTarget]= $VAR tgt; $VAR rndm; $VAR hp;
-tgt = $IndexOf($TargetContext()); rndm = $RANDOM(20); hp = $GET_CHAR_HITPOINTS(tgt);
-$IF (rndm ==# 19){$SET_CHAR_HITPOINTS(tgt,"-11");$SET_CHAR_STATUS(tgt,"5");$RETURN;};
-$IF (rndm >=# 9){$SET_CHAR_HITPOINTS(tgt,hp /# 3);$SET_CHAR_STATUS(tgt,"9");$SET_CHARACTER_SA($TargetContext(),"IsWithered","");$RETURN;};
-$SET_CHAR_HITPOINTS(tgt,hp /# 2);$SET_CHAR_STATUS(tgt,"1");
-$RETURN;
\(END)

\(BEGIN)
name = spellEnervate
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR bName; $VAR bLvl; $VAR bDie; $VAR bNum; $VAR nm; $VAR xp;
-$VAR monHit; $VAR rand; $VAR drain; $VAR prevDrain; $VAR count; $VAR atkName; $VAR atkLvl;
-$IF ($IsUndead($TargetContext()) != ""){$RETURN;};
-tgt = $IndexOf($TargetContext());  xp = $GET_CHAR_Exp(tgt,$GET_CHAR_CLASS(tgt));
-bName = $GetHighestLevelBaseclass(tgt); bLvl = $GetBaseclassLevel(tgt,bName); nm = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHARACTER_SA($TargetContext(),"isEnervatedPreMaxHP") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"isEnervatedPreMaxHP",$GET_CHAR_MAXHITPOINTS(tgt));};
-$IF ($GET_CHARACTER_SA($TargetContext(),"isEnervatedPreLvl") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"isEnervatedPreLvl","$"+bName+"$"+bLvl);};
-$IF ($GET_CHARACTER_SA($TargetContext(),"isEnervatedPreXP") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"isEnervatedPreMaxHP",xp);};
-atk = $IndexOf($AttackerContext()); atkName = $GetHighestLevelBaseclass(atk);
-atkLvl = $GetBaseclassLevel(atk,atkName); count = atkLvl /# 4;
-$WHILE (count ># 0)
-	{
-		$SET_CHAR_Lvl(tgt,bName,bLvl -# 1);
-		$IF ((bLvl -# 1) <=# 0)
-			{$SET_CHAR_HITPOINTS(tgt,-11); $SET_CHAR_MAXHITPOINTS(tgt,-11); $SET_CHAR_STATUS(tgt,5); $RETURN ;};
-		bDie = $RollHitPointDice(bName,bLvl,bLvl); 
-		bNum = $DelimitedStringCount($GET_CHARACTER_SA($TargetContext(),"classBaseName"));
-		$IF (bNum <# 1){bNum = 1;}; rand = $RANDOM(bDie) +# 1; drain = rand /# bNum;
-		$IF (drain <# 1){drain = 1;}; $SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) -# drain);
-		$IF ($GET_CHARACTER_SA($TargetContext(),"isEnervated") == "-?-?-")
-			{$SET_CHARACTER_SA($TargetContext(),"isEnervated","#$" + bName + "$" + bLvl + "$" + drain + "#$99");}
-		$ELSE
-			{
-				prevDrain = $GET_CHARACTER_SA($TargetContext(),"isEnervated");
-				$SET_CHARACTER_SA($TargetContext(),"IsEnervated","#$" + bName + "$" + bLvl + "$" + drain + prevDrain);
-			};
-		$SET_CHAR_Exp(tgt,bName,$DAT_Baseclass_Experience(bName,bLvl -# 1)); count = count -# 1;
-	};
-$SET_CHARACTER_SA($TargetContext(),"isEnervatedExp",$GET_PARTY_TIME() +# (atkLvl*#60) +# 60 *# ($RANDOM(4)+#1);
\(END)

\(BEGIN)
name = StandardDisplaySpellEffect
[CharDisplayStatus] = $SET_HOOK_PARAM( 7, $SA_PARAM_GET()); $SET_HOOK_PARAM( 6, ""); $RETURN 1;
[Dispel] = $SA_REMOVE(); $RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
[Dispel SE] = $REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
\(END)

\(BEGIN)
name = summoning1
[StartCombatRound] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR rndmRnd;
-list = "$Goblin$Hobgoblin$Orc$Giant Rat"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound()) {$AddCombatant(monster1,1); $SA_REMOVE();};
\(END)

\(BEGIN)
name = summoning2
[StartCombatRound] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR rndmRnd;
-list = "$Gnoll$Stirge$Giant Centipede$Troglodyte"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound()) {$AddCombatant(monster1,1); $SA_REMOVE();};
\(END)

\(BEGIN)
name = summoning3
[StartCombatRound] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR rndmRnd;
-list = "$Bugbear$Gelatinous Cube$Ghoul$Ogre"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound()) {$AddCombatant(monster1,1); $SA_REMOVE();};
\(END)

\(BEGIN)
name = summoning4
[StartCombatRound] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR rndmRnd;
-list = "$Gargoyle$Hell Hound$Ghast$Werewolf"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound()) {$AddCombatant(monster1,1); $SA_REMOVE();};
\(END)

\(BEGIN)
name = summoning5
[StartCombatRound] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR rndmRnd;
-list = "$Cockatrice$Displacer Beast$Giant Snake$Giant Spider"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound()) {$AddCombatant(monster1,1); $SA_REMOVE();};
\(END)

\(BEGIN)
name = summoning6
[StartCombatRound] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR rndmRnd;
-list = "$Troll$Wight$Wraith$Wyvern"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound()) {$AddCombatant(monster1,1); $SA_REMOVE();};
\(END)

\(BEGIN)
name = summoning7
[StartCombatRound] = $VAR list; $VAR count; $VAR n; $VAR monster1; $VAR rndmRnd;
-list = "$Ettin$Umber Hulk$Xorn$Neo-Otyugh"; count = $DelimitedStringCount(list); n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n); rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound()) {$AddCombatant(monster1,1); $SA_REMOVE();};
\(END)

\(BEGIN)
name = SymbolOfHopelessness
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR rndm; $VAR exp;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-rndm = ($RANDOM(4) +# $RANDOM(4) +# $RANDOM(4) +# 3) *# 10; exp = $GET_PARTY_TIME() +# rndm;
-$AURA_Create("SymbolOfHopelessnessAURA","",atk,tgt,exp);
\(END)

\(BEGIN)
name = SymbolOfHopelessnessAURA
[AURA_Create] = $AURA_Attach("XY");
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,15,0,360);
-$AURA_Spell("Symbol Of Hopelessness");
-$AURA_Wavelength("Visible");
[AURA_Enter] = $VAR IR; $VAR atk; $VAR exp;
-atk = $AURA_GetData(0); exp = $AURA_GetData(2);
-$SET_COMBATANT_SA($CombatantContext(),"IsSymbolHopelessnessed",atk);
-$SET_COMBATANT_SA($CombatantContext(),"IsSymbolHopelessnessedDone",exp);
\(END)

\(BEGIN)
name = SymbolOfPain
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR rndm; $VAR exp;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-rndm = ($RANDOM(10) +# $RANDOM(10) +# 2) *# 10; exp = $GET_PARTY_TIME() +# rndm;
-$AURA_Create("SymbolOfPainAURA","",atk,tgt,exp);
\(END)

\(BEGIN)
name = SymbolOfPainAURA
[AURA_Create] = $AURA_Attach("XY");
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,15,0,360);
-$AURA_Spell("Symbol Of Pain");
-$AURA_Wavelength("Visible");
[AURA_Enter] = $VAR tgt; $VAR exp; $VAR sd;
-tgt = $AURA_GetData(1); exp = $AURA_GetData(2);
-$SET_COMBATANT_SA($CombatantContext(),"IsSymbolPained",exp);
-$SetFriendly(tgt,$GET_COMBATANT_SA($Myself(),"side"));
\(END)

\(BEGIN)
name = SymbolOfPersuasion
[InvokeSpellOnTarget] = $VAR atk; $VAR tgt; $VAR rndm; $VAR exp;
-atk = $IndexOf($AttackerContext()); tgt = $IndexOf($TargetContext());
-rndm = ($RANDOM(20) +# 1) *# 10; exp = $GET_PARTY_TIME() +# rndm;
-$AURA_Create("SymbolOfPersuasionAURA","",atk,tgt,exp);
\(END)

\(BEGIN)
name = SymbolOfPersuasionAURA
[AURA_Create] = -$AURA_Attach("XY");
-$AURA_Shape("AnnularSector");
-$AURA_Size(0,15,0,360);
-$AURA_Spell("Symbol Of Persuasion");
-$AURA_Wavelength("Visible");
[AURA_Enter] = $VAR tgt; $VAR exp;
-tgt = $AURA_GetData(1); exp = $AURA_GetData(2);
-$SET_COMBATANT_SA($CombatantContext(),"IsSymbolPersuaded",exp);
\(END)

\(BEGIN)
name = TeleporterDestinations
[/1/0/0] = $RETURN $GET_PARTY_ASL("spot");
\(END)

\(BEGIN)
name = Turn$SYS$
<Skeleton> = 1100112
-1070112
-1040112
-1010112
-1010112
-2010112
-2010112
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
<Zombie> = 1130112
-1100112
-1070112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
<Ghoul> = 1160112
-1130112
-1100112
-1040112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
<Shadow> = 1190112
-1160112
-1160112
-1070112
-1040112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
<Wight> = 1200112
-1190112
-1160112
-1100112
-1070112
-1040112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
<Ghast> = 1210112
-1200112
-1190112
-1130112
-1100112
-1070112
-1040112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
<Wraith> = 1210112
-1210112
-1200112
-1160112
-1130112
-1100112
-1070112
-1040112
-1010112
-1010112
-1010112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
<Mummy> = 1210112
-1210112
-1210112
-1200112
-1160112
-1130112
-1100112
-1070112
-1040112
-1040112
-1040112
-1040112
-1040112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
<Spectre> = 1210112
-1210112
-1210112
-1210112
-1200112
-1160112
-1130112
-1100112
-1070112
-1070112
-1070112
-1070112
-1070112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
<Vampire> = 1210112
-1210112
-1210112
-1210112
-1210112
-1200112
-1160112
-1130112
-1100112
-1100112
-1100112
-1100112
-1100112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
<Ghost> = 1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1200112
-1160112
-1130112
-1130112
-1130112
-1130112
-1130112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
<Lich> = 1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1190112
-1160112
-1160112
-1160112
-1160112
-1160112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
<Special> = 1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1200112
-1190112
-1190112
-1190112
-1190112
-1190112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
\(END)

\(BEGIN)
name = turnUndead
[CanTurn] = $VAR par5; $VAR com; $VAR clrc; $VAR pldn;
-par5 = $GET_HOOK_PARAM(5); com = $IndexOf($CombatantContext()); clrc = $GET_CHAR_Lvl(com,"cleric");
-pldn = $GET_CHAR_Lvl(com,"paladin"); $IF (clrc ># 0 || pldn ># 2){$RETURN par5;};
[TurnAttempt] = $VAR par5; $VAR par6; $VAR num; $VAR turn;
-par5 = $GET_HOOK_PARAM(5); par6 = $GET_HOOK_PARAM(6); num = $DelimitedStringCount(par5);
-turn = $DelimitedStringSubstring(par5,num); $RETURN par5;
\(END)

\(BEGIN)
name = _PaladinAuraSA
[AURA_Create] = $VAR rnd; $VAR time;
-rnd = $GetCombatRound(); time = rnd +# 6; $AURA_Attach("CombatantFacing"); $AURA_Combatant($IndexOf($Myself()));
-$AURA_Size(0,2,315,90); $AURA_Shape("AnnularSector"); $AURA_Spell("PaladinAura"); $AURA_Wavelength("Neutrino");
-$SET_COMBATANT_SA($Myself(),"PaladinAura",time);
[AURA_Effect] = $IF ($GetCombatRound() ># 6){$AURA_Destroy();};
[AURA_Round] = $VAR exp;
-exp = $GET_COMBATANT_SA($Myself(),"PaladinAura");
-$IF ($GetCombatRound() ># exp) {$AURA_Destroy(); $DELETE_COMBATANT_SA($Myself(),"PaladinAura");};
\(END)

